/**
 * @file word
 * @module jfseb.fdevstart.sentence
 * @copyright (c) Gerd Forstmann
 *
 * Word specific qualifications,
 *
 * These functions expose parf the underlying model,
 * e.g.
 * Match a tool record on a sentence,
 *
 * This will unify matching required and optional category words
 * with the requirements of the tool.
 *
 */
"use strict";

exports.Category = {
    CAT_CATEGORY: "category",
    CAT_FILLER: "filler",
    CAT_TOOL: "tool",
    _aCatFillers: ["filler"],
    isCategory: function isCategory(sCategory) {
        return sCategory === exports.Category.CAT_CATEGORY;
    },
    isFiller: function isFiller(sCategory) {
        return exports.Category._aCatFillers.indexOf(sCategory) >= 0;
    }
};
exports.Word = {
    isFiller: function isFiller(word) {
        return word.category === undefined || exports.Category.isFiller(word.category);
    },
    isCategory: function isCategory(word) {
        return exports.Category.isCategory(word.category);
    }
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9tYXRjaC93b3JkLnRzIiwibWF0Y2gvd29yZC5qcyJdLCJuYW1lcyI6WyJleHBvcnRzIiwiQ2F0ZWdvcnkiLCJDQVRfQ0FURUdPUlkiLCJDQVRfRklMTEVSIiwiQ0FUX1RPT0wiLCJfYUNhdEZpbGxlcnMiLCJpc0NhdGVnb3J5Iiwic0NhdGVnb3J5IiwiaXNGaWxsZXIiLCJpbmRleE9mIiwiV29yZCIsIndvcmQiLCJjYXRlZ29yeSIsInVuZGVmaW5lZCJdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7OztBQ2VBOztBRFNhQSxRQUFBQyxRQUFBLEdBQVc7QUFDdEJDLGtCQUFnQixVQURNO0FBRXRCQyxnQkFBYSxRQUZTO0FBR3RCQyxjQUFXLE1BSFc7QUFJdEJDLGtCQUFlLENBQUMsUUFBRCxDQUpPO0FBTXRCQyxnQkFBYSxvQkFBU0MsU0FBVCxFQUEyQjtBQUN0QyxlQUFPQSxjQUFjUCxRQUFBQyxRQUFBLENBQVNDLFlBQTlCO0FBQ0QsS0FScUI7QUFTdEJNLGNBQVUsa0JBQVNELFNBQVQsRUFBMkI7QUFDbkMsZUFBT1AsUUFBQUMsUUFBQSxDQUFTSSxZQUFULENBQXNCSSxPQUF0QixDQUE4QkYsU0FBOUIsS0FBNEMsQ0FBbkQ7QUFDRDtBQVhxQixDQUFYO0FBY0FQLFFBQUFVLElBQUEsR0FBTztBQUNsQkYsY0FBVyxrQkFBU0csSUFBVCxFQUE0QjtBQUNyQyxlQUFPQSxLQUFLQyxRQUFMLEtBQWtCQyxTQUFsQixJQUErQmIsUUFBQUMsUUFBQSxDQUFTTyxRQUFULENBQWtCRyxLQUFLQyxRQUF2QixDQUF0QztBQUNELEtBSGlCO0FBSWxCTixnQkFBYSxvQkFBU0ssSUFBVCxFQUE0QjtBQUN2QyxlQUFPWCxRQUFBQyxRQUFBLENBQVNLLFVBQVQsQ0FBb0JLLEtBQUtDLFFBQXpCLENBQVA7QUFDRDtBQU5pQixDQUFQIiwiZmlsZSI6Im1hdGNoL3dvcmQuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBmaWxlIHdvcmRcbiAqIEBtb2R1bGUgamZzZWIuZmRldnN0YXJ0LnNlbnRlbmNlXG4gKiBAY29weXJpZ2h0IChjKSBHZXJkIEZvcnN0bWFublxuICpcbiAqIFdvcmQgc3BlY2lmaWMgcXVhbGlmaWNhdGlvbnMsXG4gKlxuICogVGhlc2UgZnVuY3Rpb25zIGV4cG9zZSBwYXJmIHRoZSB1bmRlcmx5aW5nIG1vZGVsLFxuICogZS5nLlxuICogTWF0Y2ggYSB0b29sIHJlY29yZCBvbiBhIHNlbnRlbmNlLFxuICpcbiAqIFRoaXMgd2lsbCB1bmlmeSBtYXRjaGluZyByZXF1aXJlZCBhbmQgb3B0aW9uYWwgY2F0ZWdvcnkgd29yZHNcbiAqIHdpdGggdGhlIHJlcXVpcmVtZW50cyBvZiB0aGUgdG9vbC5cbiAqXG4gKi9cblxuLy8gPHJlZmVyZW5jZSBwYXRoPVwiLi4vLi4vbGliL25vZGUtNC5kLnRzXCIgLz5cblxuLy8gaW1wb3J0ICogYXMgZGVidWcgZnJvbSAnZGVidWcnO1xuXG4vLyBpbXBvcnQgKiBhcyB1dGlscyBmcm9tICcuLi91dGlscy91dGlscyc7XG5cbmltcG9ydCAqIGFzIElNYXRjaCBmcm9tICcuL2lmbWF0Y2gnO1xuXG5leHBvcnQgY29uc3QgQ2F0ZWdvcnkgPSB7XG4gIENBVF9DQVRFR09SWSA6ICBcImNhdGVnb3J5XCIsXG4gIENBVF9GSUxMRVIgOiBcImZpbGxlclwiLFxuICBDQVRfVE9PTCA6IFwidG9vbFwiLFxuICBfYUNhdEZpbGxlcnMgOiBbXCJmaWxsZXJcIl0sXG5cbiAgaXNDYXRlZ29yeSA6IGZ1bmN0aW9uKHNDYXRlZ29yeSA6IHN0cmluZyApICA6IGJvb2xlYW57XG4gICAgcmV0dXJuIHNDYXRlZ29yeSA9PT0gQ2F0ZWdvcnkuQ0FUX0NBVEVHT1JZO1xuICB9LFxuICBpc0ZpbGxlcjogZnVuY3Rpb24oc0NhdGVnb3J5IDogc3RyaW5nKSA6IGJvb2xlYW4ge1xuICAgIHJldHVybiBDYXRlZ29yeS5fYUNhdEZpbGxlcnMuaW5kZXhPZihzQ2F0ZWdvcnkpID49IDA7XG4gIH1cbn1cblxuZXhwb3J0IGNvbnN0IFdvcmQgPSB7XG4gIGlzRmlsbGVyIDogZnVuY3Rpb24od29yZCA6IElNYXRjaC5JV29yZCkgOiBib29sZWFuIHtcbiAgICByZXR1cm4gd29yZC5jYXRlZ29yeSA9PT0gdW5kZWZpbmVkIHx8IENhdGVnb3J5LmlzRmlsbGVyKHdvcmQuY2F0ZWdvcnkpO1xuICB9LFxuICBpc0NhdGVnb3J5IDogZnVuY3Rpb24od29yZCA6IElNYXRjaC5JV29yZCkgOiBib29sZWFuIHtcbiAgICByZXR1cm4gQ2F0ZWdvcnkuaXNDYXRlZ29yeSh3b3JkLmNhdGVnb3J5KTtcbiAgfVxufTtcbiIsIi8qKlxuICogQGZpbGUgd29yZFxuICogQG1vZHVsZSBqZnNlYi5mZGV2c3RhcnQuc2VudGVuY2VcbiAqIEBjb3B5cmlnaHQgKGMpIEdlcmQgRm9yc3RtYW5uXG4gKlxuICogV29yZCBzcGVjaWZpYyBxdWFsaWZpY2F0aW9ucyxcbiAqXG4gKiBUaGVzZSBmdW5jdGlvbnMgZXhwb3NlIHBhcmYgdGhlIHVuZGVybHlpbmcgbW9kZWwsXG4gKiBlLmcuXG4gKiBNYXRjaCBhIHRvb2wgcmVjb3JkIG9uIGEgc2VudGVuY2UsXG4gKlxuICogVGhpcyB3aWxsIHVuaWZ5IG1hdGNoaW5nIHJlcXVpcmVkIGFuZCBvcHRpb25hbCBjYXRlZ29yeSB3b3Jkc1xuICogd2l0aCB0aGUgcmVxdWlyZW1lbnRzIG9mIHRoZSB0b29sLlxuICpcbiAqL1xuXCJ1c2Ugc3RyaWN0XCI7XG5leHBvcnRzLkNhdGVnb3J5ID0ge1xuICAgIENBVF9DQVRFR09SWTogXCJjYXRlZ29yeVwiLFxuICAgIENBVF9GSUxMRVI6IFwiZmlsbGVyXCIsXG4gICAgQ0FUX1RPT0w6IFwidG9vbFwiLFxuICAgIF9hQ2F0RmlsbGVyczogW1wiZmlsbGVyXCJdLFxuICAgIGlzQ2F0ZWdvcnk6IGZ1bmN0aW9uIChzQ2F0ZWdvcnkpIHtcbiAgICAgICAgcmV0dXJuIHNDYXRlZ29yeSA9PT0gZXhwb3J0cy5DYXRlZ29yeS5DQVRfQ0FURUdPUlk7XG4gICAgfSxcbiAgICBpc0ZpbGxlcjogZnVuY3Rpb24gKHNDYXRlZ29yeSkge1xuICAgICAgICByZXR1cm4gZXhwb3J0cy5DYXRlZ29yeS5fYUNhdEZpbGxlcnMuaW5kZXhPZihzQ2F0ZWdvcnkpID49IDA7XG4gICAgfVxufTtcbmV4cG9ydHMuV29yZCA9IHtcbiAgICBpc0ZpbGxlcjogZnVuY3Rpb24gKHdvcmQpIHtcbiAgICAgICAgcmV0dXJuIHdvcmQuY2F0ZWdvcnkgPT09IHVuZGVmaW5lZCB8fCBleHBvcnRzLkNhdGVnb3J5LmlzRmlsbGVyKHdvcmQuY2F0ZWdvcnkpO1xuICAgIH0sXG4gICAgaXNDYXRlZ29yeTogZnVuY3Rpb24gKHdvcmQpIHtcbiAgICAgICAgcmV0dXJuIGV4cG9ydHMuQ2F0ZWdvcnkuaXNDYXRlZ29yeSh3b3JkLmNhdGVnb3J5KTtcbiAgICB9XG59O1xuIl0sInNvdXJjZVJvb3QiOiIvc291cmNlLyJ9
