/**
 * @file word
 * @module jfseb.fdevstart.sentence
 * @copyright (c) Gerd Forstmann
 *
 * Word specific qualifications,
 *
 * These functions expose parf the underlying model,
 * e.g.
 * Match a tool record on a sentence,
 *
 * This will unify matching required and optional category words
 * with the requirements of the tool.
 *
 */
"use strict";

exports.Category = {
    CAT_CATEGORY: "category",
    CAT_FILLER: "filler",
    CAT_TOOL: "tool",
    _aCatFillers: ["filler"],
    isCategory: function isCategory(sCategory) {
        return sCategory === exports.Category.CAT_CATEGORY;
    },
    isFiller: function isFiller(sCategory) {
        return exports.Category._aCatFillers.indexOf(sCategory) >= 0;
    }
};
exports.Word = {
    isFiller: function isFiller(word) {
        return word.category === undefined || exports.Category.isFiller(word.category);
    },
    isCategory: function isCategory(word) {
        return exports.Category.isCategory(word.category);
    }
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9tYXRjaC93b3JkLnRzIiwibWF0Y2gvd29yZC5qcyJdLCJuYW1lcyI6WyJleHBvcnRzIiwiQ2F0ZWdvcnkiLCJDQVRfQ0FURUdPUlkiLCJDQVRfRklMTEVSIiwiQ0FUX1RPT0wiLCJfYUNhdEZpbGxlcnMiLCJpc0NhdGVnb3J5Iiwic0NhdGVnb3J5IiwiaXNGaWxsZXIiLCJpbmRleE9mIiwiV29yZCIsIndvcmQiLCJjYXRlZ29yeSIsInVuZGVmaW5lZCJdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7OztBQ2VBOztBRFNhQSxRQUFBQyxRQUFBLEdBQVc7QUFDdEJDLGtCQUFnQixVQURNO0FBRXRCQyxnQkFBYSxRQUZTO0FBR3RCQyxjQUFXLE1BSFc7QUFJdEJDLGtCQUFlLENBQUMsUUFBRCxDQUpPO0FBTXRCQyxnQkFBYSxvQkFBU0MsU0FBVCxFQUEyQjtBQUN0QyxlQUFPQSxjQUFjUCxRQUFBQyxRQUFBLENBQVNDLFlBQTlCO0FBQ0QsS0FScUI7QUFTdEJNLGNBQVUsa0JBQVNELFNBQVQsRUFBMkI7QUFDbkMsZUFBT1AsUUFBQUMsUUFBQSxDQUFTSSxZQUFULENBQXNCSSxPQUF0QixDQUE4QkYsU0FBOUIsS0FBNEMsQ0FBbkQ7QUFDRDtBQVhxQixDQUFYO0FBY0FQLFFBQUFVLElBQUEsR0FBTztBQUNsQkYsY0FBVyxrQkFBU0csSUFBVCxFQUE0QjtBQUNyQyxlQUFPQSxLQUFLQyxRQUFMLEtBQWtCQyxTQUFsQixJQUErQmIsUUFBQUMsUUFBQSxDQUFTTyxRQUFULENBQWtCRyxLQUFLQyxRQUF2QixDQUF0QztBQUNELEtBSGlCO0FBSWxCTixnQkFBYSxvQkFBU0ssSUFBVCxFQUE0QjtBQUN2QyxlQUFPWCxRQUFBQyxRQUFBLENBQVNLLFVBQVQsQ0FBb0JLLEtBQUtDLFFBQXpCLENBQVA7QUFDRDtBQU5pQixDQUFQIiwiZmlsZSI6Im1hdGNoL3dvcmQuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBmaWxlIHdvcmRcbiAqIEBtb2R1bGUgamZzZWIuZmRldnN0YXJ0LnNlbnRlbmNlXG4gKiBAY29weXJpZ2h0IChjKSBHZXJkIEZvcnN0bWFublxuICpcbiAqIFdvcmQgc3BlY2lmaWMgcXVhbGlmaWNhdGlvbnMsXG4gKlxuICogVGhlc2UgZnVuY3Rpb25zIGV4cG9zZSBwYXJmIHRoZSB1bmRlcmx5aW5nIG1vZGVsLFxuICogZS5nLlxuICogTWF0Y2ggYSB0b29sIHJlY29yZCBvbiBhIHNlbnRlbmNlLFxuICpcbiAqIFRoaXMgd2lsbCB1bmlmeSBtYXRjaGluZyByZXF1aXJlZCBhbmQgb3B0aW9uYWwgY2F0ZWdvcnkgd29yZHNcbiAqIHdpdGggdGhlIHJlcXVpcmVtZW50cyBvZiB0aGUgdG9vbC5cbiAqXG4gKi9cblxuLy8vIDxyZWZlcmVuY2UgcGF0aD1cIi4uLy4uL2xpYi9ub2RlLTQuZC50c1wiIC8+XG5cbi8vIGltcG9ydCAqIGFzIGRlYnVnIGZyb20gJ2RlYnVnJztcblxuLy8gaW1wb3J0ICogYXMgdXRpbHMgZnJvbSAnLi4vdXRpbHMvdXRpbHMnO1xuXG5pbXBvcnQgKiBhcyBJTWF0Y2ggZnJvbSAnLi9pZm1hdGNoJztcblxuZXhwb3J0IGNvbnN0IENhdGVnb3J5ID0ge1xuICBDQVRfQ0FURUdPUlkgOiAgXCJjYXRlZ29yeVwiLFxuICBDQVRfRklMTEVSIDogXCJmaWxsZXJcIixcbiAgQ0FUX1RPT0wgOiBcInRvb2xcIixcbiAgX2FDYXRGaWxsZXJzIDogW1wiZmlsbGVyXCJdLFxuXG4gIGlzQ2F0ZWdvcnkgOiBmdW5jdGlvbihzQ2F0ZWdvcnkgOiBzdHJpbmcgKSAgOiBib29sZWFue1xuICAgIHJldHVybiBzQ2F0ZWdvcnkgPT09IENhdGVnb3J5LkNBVF9DQVRFR09SWTtcbiAgfSxcbiAgaXNGaWxsZXI6IGZ1bmN0aW9uKHNDYXRlZ29yeSA6IHN0cmluZykgOiBib29sZWFuIHtcbiAgICByZXR1cm4gQ2F0ZWdvcnkuX2FDYXRGaWxsZXJzLmluZGV4T2Yoc0NhdGVnb3J5KSA+PSAwO1xuICB9XG59XG5cbmV4cG9ydCBjb25zdCBXb3JkID0ge1xuICBpc0ZpbGxlciA6IGZ1bmN0aW9uKHdvcmQgOiBJTWF0Y2guSVdvcmQpIDogYm9vbGVhbiB7XG4gICAgcmV0dXJuIHdvcmQuY2F0ZWdvcnkgPT09IHVuZGVmaW5lZCB8fCBDYXRlZ29yeS5pc0ZpbGxlcih3b3JkLmNhdGVnb3J5KTtcbiAgfSxcbiAgaXNDYXRlZ29yeSA6IGZ1bmN0aW9uKHdvcmQgOiBJTWF0Y2guSVdvcmQpIDogYm9vbGVhbiB7XG4gICAgcmV0dXJuIENhdGVnb3J5LmlzQ2F0ZWdvcnkod29yZC5jYXRlZ29yeSk7XG4gIH1cbn07XG4iLCIvKipcbiAqIEBmaWxlIHdvcmRcbiAqIEBtb2R1bGUgamZzZWIuZmRldnN0YXJ0LnNlbnRlbmNlXG4gKiBAY29weXJpZ2h0IChjKSBHZXJkIEZvcnN0bWFublxuICpcbiAqIFdvcmQgc3BlY2lmaWMgcXVhbGlmaWNhdGlvbnMsXG4gKlxuICogVGhlc2UgZnVuY3Rpb25zIGV4cG9zZSBwYXJmIHRoZSB1bmRlcmx5aW5nIG1vZGVsLFxuICogZS5nLlxuICogTWF0Y2ggYSB0b29sIHJlY29yZCBvbiBhIHNlbnRlbmNlLFxuICpcbiAqIFRoaXMgd2lsbCB1bmlmeSBtYXRjaGluZyByZXF1aXJlZCBhbmQgb3B0aW9uYWwgY2F0ZWdvcnkgd29yZHNcbiAqIHdpdGggdGhlIHJlcXVpcmVtZW50cyBvZiB0aGUgdG9vbC5cbiAqXG4gKi9cblwidXNlIHN0cmljdFwiO1xuZXhwb3J0cy5DYXRlZ29yeSA9IHtcbiAgICBDQVRfQ0FURUdPUlk6IFwiY2F0ZWdvcnlcIixcbiAgICBDQVRfRklMTEVSOiBcImZpbGxlclwiLFxuICAgIENBVF9UT09MOiBcInRvb2xcIixcbiAgICBfYUNhdEZpbGxlcnM6IFtcImZpbGxlclwiXSxcbiAgICBpc0NhdGVnb3J5OiBmdW5jdGlvbiAoc0NhdGVnb3J5KSB7XG4gICAgICAgIHJldHVybiBzQ2F0ZWdvcnkgPT09IGV4cG9ydHMuQ2F0ZWdvcnkuQ0FUX0NBVEVHT1JZO1xuICAgIH0sXG4gICAgaXNGaWxsZXI6IGZ1bmN0aW9uIChzQ2F0ZWdvcnkpIHtcbiAgICAgICAgcmV0dXJuIGV4cG9ydHMuQ2F0ZWdvcnkuX2FDYXRGaWxsZXJzLmluZGV4T2Yoc0NhdGVnb3J5KSA+PSAwO1xuICAgIH1cbn07XG5leHBvcnRzLldvcmQgPSB7XG4gICAgaXNGaWxsZXI6IGZ1bmN0aW9uICh3b3JkKSB7XG4gICAgICAgIHJldHVybiB3b3JkLmNhdGVnb3J5ID09PSB1bmRlZmluZWQgfHwgZXhwb3J0cy5DYXRlZ29yeS5pc0ZpbGxlcih3b3JkLmNhdGVnb3J5KTtcbiAgICB9LFxuICAgIGlzQ2F0ZWdvcnk6IGZ1bmN0aW9uICh3b3JkKSB7XG4gICAgICAgIHJldHVybiBleHBvcnRzLkNhdGVnb3J5LmlzQ2F0ZWdvcnkod29yZC5jYXRlZ29yeSk7XG4gICAgfVxufTtcbiJdLCJzb3VyY2VSb290IjoiL3NvdXJjZS8ifQ==
