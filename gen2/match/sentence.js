/**
 * @file sentence
 * @module jfseb.fdevstart.sentence
 * @copyright (c) Gerd Forstmann
 *
 * Match a tool record on a sentence,
 *
 * This will unify matching required and optional category words
 * with the requirements of the tool.
 *
 */
"use strict";
// const debuglog = debug('toolmatcher')

function findWordByCategory(oSentence, sCategory) {
    var res = {};
    oSentence.every(function (oWord, iIndex) {
        if (oWord.category === sCategory) {
            res = { word: oWord,
                index: iIndex };
            return false;
        }
        return true;
    });
    return res;
}
exports.findWordByCategory = findWordByCategory;
function rankingGeometricMean(oSentence) {
    var length = oSentence.length;
    if (length === 0) {
        return 1.0;
    }
    var prod = oSentence.reduce(function (prev, oWord) {
        return prev * (oWord._ranking || 1.0);
    }, 1.0);
    // TODO: find somethign faster ;-)
    return Math.pow(prod, 1 / length);
}
exports.rankingGeometricMean = rankingGeometricMean;
function rankingProduct(oSentence) {
    return rankingGeometricMean(oSentence);
}
exports.rankingProduct = rankingProduct;
function cmpRankingProduct(a, b) {
    return -(rankingProduct(a) - rankingProduct(b));
}
exports.cmpRankingProduct = cmpRankingProduct;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9tYXRjaC9zZW50ZW5jZS50cyIsIm1hdGNoL3NlbnRlbmNlLmpzIl0sIm5hbWVzIjpbImZpbmRXb3JkQnlDYXRlZ29yeSIsIm9TZW50ZW5jZSIsInNDYXRlZ29yeSIsInJlcyIsImV2ZXJ5Iiwib1dvcmQiLCJpSW5kZXgiLCJjYXRlZ29yeSIsIndvcmQiLCJpbmRleCIsImV4cG9ydHMiLCJyYW5raW5nR2VvbWV0cmljTWVhbiIsImxlbmd0aCIsInByb2QiLCJyZWR1Y2UiLCJwcmV2IiwiX3JhbmtpbmciLCJNYXRoIiwicG93IiwicmFua2luZ1Byb2R1Y3QiLCJjbXBSYW5raW5nUHJvZHVjdCIsImEiLCJiIl0sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7QUNXQTtBRFNBOztBQUVBLFNBQUFBLGtCQUFBLENBQW1DQyxTQUFuQyxFQUE4Q0MsU0FBOUMsRUFBZ0U7QUFDN0QsUUFBSUMsTUFBTSxFQUFWO0FBQ0NGLGNBQVVHLEtBQVYsQ0FBZ0IsVUFBU0MsS0FBVCxFQUFnQkMsTUFBaEIsRUFBc0I7QUFDcEMsWUFBR0QsTUFBTUUsUUFBTixLQUFtQkwsU0FBdEIsRUFBaUM7QUFDL0JDLGtCQUFNLEVBQUVLLE1BQU1ILEtBQVI7QUFDRUksdUJBQVFILE1BRFYsRUFBTjtBQUVBLG1CQUFPLEtBQVA7QUFDRDtBQUNELGVBQU8sSUFBUDtBQUNELEtBUEQ7QUFRQSxXQUFPSCxHQUFQO0FBQ0g7QUFYZU8sUUFBQVYsa0JBQUEsR0FBa0JBLGtCQUFsQjtBQWFoQixTQUFBVyxvQkFBQSxDQUFxQ1YsU0FBckMsRUFBaUU7QUFDL0QsUUFBTVcsU0FBU1gsVUFBVVcsTUFBekI7QUFDQSxRQUFHQSxXQUFXLENBQWQsRUFBaUI7QUFDZixlQUFPLEdBQVA7QUFDRDtBQUNELFFBQUlDLE9BQVFaLFVBQVVhLE1BQVYsQ0FBaUIsVUFBU0MsSUFBVCxFQUFlVixLQUFmLEVBQW9CO0FBQy9DLGVBQU9VLFFBQVFWLE1BQU1XLFFBQU4sSUFBa0IsR0FBMUIsQ0FBUDtBQUNELEtBRlcsRUFFVixHQUZVLENBQVo7QUFHQTtBQUNBLFdBQU9DLEtBQUtDLEdBQUwsQ0FBU0wsSUFBVCxFQUFlLElBQUVELE1BQWpCLENBQVA7QUFDRDtBQVZlRixRQUFBQyxvQkFBQSxHQUFvQkEsb0JBQXBCO0FBWWhCLFNBQUFRLGNBQUEsQ0FBK0JsQixTQUEvQixFQUEwRDtBQUN4RCxXQUFPVSxxQkFBcUJWLFNBQXJCLENBQVA7QUFDRDtBQUZlUyxRQUFBUyxjQUFBLEdBQWNBLGNBQWQ7QUFJaEIsU0FBQUMsaUJBQUEsQ0FBa0NDLENBQWxDLEVBQXdEQyxDQUF4RCxFQUE0RTtBQUMxRSxXQUFPLEVBQUdILGVBQWVFLENBQWYsSUFBb0JGLGVBQWVHLENBQWYsQ0FBdkIsQ0FBUDtBQUNEO0FBRmVaLFFBQUFVLGlCQUFBLEdBQWlCQSxpQkFBakIiLCJmaWxlIjoibWF0Y2gvc2VudGVuY2UuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBmaWxlIHNlbnRlbmNlXG4gKiBAbW9kdWxlIGpmc2ViLmZkZXZzdGFydC5zZW50ZW5jZVxuICogQGNvcHlyaWdodCAoYykgR2VyZCBGb3JzdG1hbm5cbiAqXG4gKiBNYXRjaCBhIHRvb2wgcmVjb3JkIG9uIGEgc2VudGVuY2UsXG4gKlxuICogVGhpcyB3aWxsIHVuaWZ5IG1hdGNoaW5nIHJlcXVpcmVkIGFuZCBvcHRpb25hbCBjYXRlZ29yeSB3b3Jkc1xuICogd2l0aCB0aGUgcmVxdWlyZW1lbnRzIG9mIHRoZSB0b29sLlxuICpcbiAqL1xuXG4vLyA8cmVmZXJlbmNlIHBhdGg9XCIuLi8uLi9saWIvbm9kZS00LmQudHNcIiAvPlxuXG4vLyBpbXBvcnQgKiBhcyBkZWJ1ZyBmcm9tICdkZWJ1Zyc7XG5cbi8vIGltcG9ydCAqIGFzIHV0aWxzIGZyb20gJy4uL3V0aWxzL3V0aWxzJztcblxuaW1wb3J0ICogYXMgSU1hdGNoIGZyb20gJy4vaWZtYXRjaCc7XG5cbi8vIGNvbnN0IGRlYnVnbG9nID0gZGVidWcoJ3Rvb2xtYXRjaGVyJylcblxuZXhwb3J0IGZ1bmN0aW9uIGZpbmRXb3JkQnlDYXRlZ29yeShvU2VudGVuY2UsIHNDYXRlZ29yeSA6IHN0cmluZykgOiB7IHdvcmQgOiBJTWF0Y2guSVdvcmQsIGluZGV4IDogbnVtYmVyfSB7XG4gIFx0dmFyIHJlcyA9IHt9IGFzIHsgd29yZCA6IElNYXRjaC5JV29yZCwgaW5kZXggOiBudW1iZXJ9O1xuICAgIG9TZW50ZW5jZS5ldmVyeShmdW5jdGlvbihvV29yZCwgaUluZGV4KSB7XG4gICAgICBpZihvV29yZC5jYXRlZ29yeSA9PT0gc0NhdGVnb3J5KSB7XG4gICAgICAgIHJlcyA9IHsgd29yZDogb1dvcmQsXG4gICAgICAgICAgICAgICAgaW5kZXggOiBpSW5kZXggfTtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgfVxuICAgICAgcmV0dXJuIHRydWU7XG4gICAgfSlcbiAgICByZXR1cm4gcmVzO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gcmFua2luZ0dlb21ldHJpY01lYW4ob1NlbnRlbmNlIDogSU1hdGNoLklTZW50ZW5jZSkgOiBudW1iZXIge1xuICBjb25zdCBsZW5ndGggPSBvU2VudGVuY2UubGVuZ3RoO1xuICBpZihsZW5ndGggPT09IDApIHtcbiAgICByZXR1cm4gMS4wO1xuICB9XG4gIHZhciBwcm9kID0gIG9TZW50ZW5jZS5yZWR1Y2UoZnVuY3Rpb24ocHJldiwgb1dvcmQpIHtcbiAgICByZXR1cm4gcHJldiAqIChvV29yZC5fcmFua2luZyB8fCAxLjApO1xuICB9LDEuMCk7XG4gIC8vIFRPRE86IGZpbmQgc29tZXRoaWduIGZhc3RlciA7LSlcbiAgcmV0dXJuIE1hdGgucG93KHByb2QsIDEvbGVuZ3RoKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHJhbmtpbmdQcm9kdWN0KG9TZW50ZW5jZTogSU1hdGNoLklTZW50ZW5jZSkgOiBudW1iZXIge1xuICByZXR1cm4gcmFua2luZ0dlb21ldHJpY01lYW4ob1NlbnRlbmNlKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGNtcFJhbmtpbmdQcm9kdWN0KGEgOiBJTWF0Y2guSVNlbnRlbmNlLCBiIDogSU1hdGNoLklTZW50ZW5jZSkge1xuICByZXR1cm4gLSAocmFua2luZ1Byb2R1Y3QoYSkgLSByYW5raW5nUHJvZHVjdChiKSk7XG59IiwiLyoqXG4gKiBAZmlsZSBzZW50ZW5jZVxuICogQG1vZHVsZSBqZnNlYi5mZGV2c3RhcnQuc2VudGVuY2VcbiAqIEBjb3B5cmlnaHQgKGMpIEdlcmQgRm9yc3RtYW5uXG4gKlxuICogTWF0Y2ggYSB0b29sIHJlY29yZCBvbiBhIHNlbnRlbmNlLFxuICpcbiAqIFRoaXMgd2lsbCB1bmlmeSBtYXRjaGluZyByZXF1aXJlZCBhbmQgb3B0aW9uYWwgY2F0ZWdvcnkgd29yZHNcbiAqIHdpdGggdGhlIHJlcXVpcmVtZW50cyBvZiB0aGUgdG9vbC5cbiAqXG4gKi9cblwidXNlIHN0cmljdFwiO1xuLy8gY29uc3QgZGVidWdsb2cgPSBkZWJ1ZygndG9vbG1hdGNoZXInKVxuZnVuY3Rpb24gZmluZFdvcmRCeUNhdGVnb3J5KG9TZW50ZW5jZSwgc0NhdGVnb3J5KSB7XG4gICAgdmFyIHJlcyA9IHt9O1xuICAgIG9TZW50ZW5jZS5ldmVyeShmdW5jdGlvbiAob1dvcmQsIGlJbmRleCkge1xuICAgICAgICBpZiAob1dvcmQuY2F0ZWdvcnkgPT09IHNDYXRlZ29yeSkge1xuICAgICAgICAgICAgcmVzID0geyB3b3JkOiBvV29yZCxcbiAgICAgICAgICAgICAgICBpbmRleDogaUluZGV4IH07XG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgfSk7XG4gICAgcmV0dXJuIHJlcztcbn1cbmV4cG9ydHMuZmluZFdvcmRCeUNhdGVnb3J5ID0gZmluZFdvcmRCeUNhdGVnb3J5O1xuZnVuY3Rpb24gcmFua2luZ0dlb21ldHJpY01lYW4ob1NlbnRlbmNlKSB7XG4gICAgdmFyIGxlbmd0aCA9IG9TZW50ZW5jZS5sZW5ndGg7XG4gICAgaWYgKGxlbmd0aCA9PT0gMCkge1xuICAgICAgICByZXR1cm4gMS4wO1xuICAgIH1cbiAgICB2YXIgcHJvZCA9IG9TZW50ZW5jZS5yZWR1Y2UoZnVuY3Rpb24gKHByZXYsIG9Xb3JkKSB7XG4gICAgICAgIHJldHVybiBwcmV2ICogKG9Xb3JkLl9yYW5raW5nIHx8IDEuMCk7XG4gICAgfSwgMS4wKTtcbiAgICAvLyBUT0RPOiBmaW5kIHNvbWV0aGlnbiBmYXN0ZXIgOy0pXG4gICAgcmV0dXJuIE1hdGgucG93KHByb2QsIDEgLyBsZW5ndGgpO1xufVxuZXhwb3J0cy5yYW5raW5nR2VvbWV0cmljTWVhbiA9IHJhbmtpbmdHZW9tZXRyaWNNZWFuO1xuZnVuY3Rpb24gcmFua2luZ1Byb2R1Y3Qob1NlbnRlbmNlKSB7XG4gICAgcmV0dXJuIHJhbmtpbmdHZW9tZXRyaWNNZWFuKG9TZW50ZW5jZSk7XG59XG5leHBvcnRzLnJhbmtpbmdQcm9kdWN0ID0gcmFua2luZ1Byb2R1Y3Q7XG5mdW5jdGlvbiBjbXBSYW5raW5nUHJvZHVjdChhLCBiKSB7XG4gICAgcmV0dXJuIC0ocmFua2luZ1Byb2R1Y3QoYSkgLSByYW5raW5nUHJvZHVjdChiKSk7XG59XG5leHBvcnRzLmNtcFJhbmtpbmdQcm9kdWN0ID0gY21wUmFua2luZ1Byb2R1Y3Q7XG4iXSwic291cmNlUm9vdCI6Ii9zb3VyY2UvIn0=
