/**
 * @file toolmatcher
 * @module jfseb.fdevstart.toolmatcher
 * @copyright (c) Gerd Forstmann
 *
 * Match a tool record on a sentence,
 *
 * This will unify matching required and optional category words
 * with the requirements of the tool.
 *
 */
"use strict";

var oToolFLPD = {
    'name': 'FLPD',
    'requires': { 'systemId': {}, 'client': {} },
    'optional': { 'fiori catalog': {}, 'fiori group': {} }
};
var oToolFLP = {
    'name': 'FLP',
    'requires': { 'systemId': {}, 'client': {} },
    "optional": {
        "fiori intent": {}
    },
    "sets": {
        "intent": {
            "set": ["systemId", "client", "fiori intent"],
            "response": "_urlpattern1"
        },
        "none": {
            "set": ["systemId", "client"],
            "response": "_urlpattern2"
        }
    }
};
var oToolTA = {
    'name': 'StartTA',
    'requires': { 'transaction': {}, 'systemId': {}, 'client': {} },
    'optional': {}
};
var oToolWiki = {
    'name': 'wiki',
    'requires': { 'wiki': {} },
    'optional': { 'wikipage': {} }
};
var oToolUnitTest = {
    'name': 'unit test',
    'requires': { 'unit test': {} },
    optional: {}
};
var tools = [oToolWiki, oToolTA, oToolUnitTest, oToolFLPD, oToolFLP];
function cmpTools(a, b) {
    return a.name.localeCompare(b.name);
}
exports.cmpTools = cmpTools;
function getTools() {
    return tools.sort(cmpTools);
}
exports.getTools = getTools;
;
function findMatchingSet(a) {}
exports.findMatchingSet = findMatchingSet;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9tYXRjaC90b29scy50cyIsIm1hdGNoL3Rvb2xzLmpzIl0sIm5hbWVzIjpbIm9Ub29sRkxQRCIsIm9Ub29sRkxQIiwib1Rvb2xUQSIsIm9Ub29sV2lraSIsIm9Ub29sVW5pdFRlc3QiLCJvcHRpb25hbCIsInRvb2xzIiwiY21wVG9vbHMiLCJhIiwiYiIsIm5hbWUiLCJsb2NhbGVDb21wYXJlIiwiZXhwb3J0cyIsImdldFRvb2xzIiwic29ydCIsImZpbmRNYXRjaGluZ1NldCJdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7O0FDV0E7O0FEUUEsSUFBSUEsWUFBWTtBQUNkLFlBQVEsTUFETTtBQUVkLGdCQUFZLEVBQUUsWUFBWSxFQUFkLEVBQWtCLFVBQVUsRUFBNUIsRUFGRTtBQUdkLGdCQUFZLEVBQUUsaUJBQWlCLEVBQW5CLEVBQXVCLGVBQWUsRUFBdEM7QUFIRSxDQUFoQjtBQU1BLElBQUlDLFdBQVc7QUFDYixZQUFRLEtBREs7QUFFYixnQkFBWSxFQUFFLFlBQVksRUFBZCxFQUFrQixVQUFVLEVBQTVCLEVBRkM7QUFHYixnQkFBWTtBQUNWLHdCQUFnQjtBQUROLEtBSEM7QUFNYixZQUFRO0FBQ04sa0JBQVU7QUFDUixtQkFBTyxDQUNMLFVBREssRUFFTCxRQUZLLEVBR0wsY0FISyxDQURDO0FBTVIsd0JBQVk7QUFOSixTQURKO0FBU04sZ0JBQVE7QUFDTixtQkFBTyxDQUNMLFVBREssRUFFTCxRQUZLLENBREQ7QUFLTix3QkFBWTtBQUxOO0FBVEY7QUFOSyxDQUFmO0FBeUJBLElBQUlDLFVBQVU7QUFDWixZQUFRLFNBREk7QUFFWixnQkFBWSxFQUFFLGVBQWUsRUFBakIsRUFBcUIsWUFBWSxFQUFqQyxFQUFxQyxVQUFVLEVBQS9DLEVBRkE7QUFHWixnQkFBWTtBQUhBLENBQWQ7QUFNQSxJQUFJQyxZQUFZO0FBQ2QsWUFBUSxNQURNO0FBRWQsZ0JBQVksRUFBRSxRQUFRLEVBQVYsRUFGRTtBQUdkLGdCQUFZLEVBQUUsWUFBWSxFQUFkO0FBSEUsQ0FBaEI7QUFPQSxJQUFJQyxnQkFBZ0I7QUFDbEIsWUFBUSxXQURVO0FBRWxCLGdCQUFZLEVBQUUsYUFBYSxFQUFmLEVBRk07QUFHbEJDLGNBQVU7QUFIUSxDQUFwQjtBQU9BLElBQU1DLFFBQVEsQ0FBQ0gsU0FBRCxFQUFZRCxPQUFaLEVBQXFCRSxhQUFyQixFQUFvQ0osU0FBcEMsRUFBK0NDLFFBQS9DLENBQWQ7QUFFQSxTQUFBTSxRQUFBLENBQXlCQyxDQUF6QixFQUEwQ0MsQ0FBMUMsRUFBeUQ7QUFDdkQsV0FBT0QsRUFBRUUsSUFBRixDQUFPQyxhQUFQLENBQXFCRixFQUFFQyxJQUF2QixDQUFQO0FBQ0Q7QUFGZUUsUUFBQUwsUUFBQSxHQUFRQSxRQUFSO0FBSWhCLFNBQUFNLFFBQUEsR0FBQTtBQUNFLFdBQU9QLE1BQU1RLElBQU4sQ0FBV1AsUUFBWCxDQUFQO0FBQ0Q7QUFGZUssUUFBQUMsUUFBQSxHQUFRQSxRQUFSO0FBRWY7QUFHRCxTQUFBRSxlQUFBLENBQWdDUCxDQUFoQyxFQUE0RCxDQUUzRDtBQUZlSSxRQUFBRyxlQUFBLEdBQWVBLGVBQWYiLCJmaWxlIjoibWF0Y2gvdG9vbHMuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcclxuICogQGZpbGUgdG9vbG1hdGNoZXJcclxuICogQG1vZHVsZSBqZnNlYi5mZGV2c3RhcnQudG9vbG1hdGNoZXJcclxuICogQGNvcHlyaWdodCAoYykgR2VyZCBGb3JzdG1hbm5cclxuICpcclxuICogTWF0Y2ggYSB0b29sIHJlY29yZCBvbiBhIHNlbnRlbmNlLFxyXG4gKlxyXG4gKiBUaGlzIHdpbGwgdW5pZnkgbWF0Y2hpbmcgcmVxdWlyZWQgYW5kIG9wdGlvbmFsIGNhdGVnb3J5IHdvcmRzXHJcbiAqIHdpdGggdGhlIHJlcXVpcmVtZW50cyBvZiB0aGUgdG9vbC5cclxuICpcclxuICovXHJcblxyXG4vLyAvIDxyZWZlcmVuY2UgcGF0aD1cIi4uLy4uL2xpYi9ub2RlLTQuZC50c1wiIC8+XHJcblxyXG5pbXBvcnQgKiBhcyBkZWJ1ZyBmcm9tICdkZWJ1Zyc7XHJcbmltcG9ydCAqIGFzIElNYXRjaCBmcm9tICcuL2lmbWF0Y2gnO1xyXG5cclxuXHJcblxyXG52YXIgb1Rvb2xGTFBEID0ge1xyXG4gICduYW1lJzogJ0ZMUEQnLFxyXG4gICdyZXF1aXJlcyc6IHsgJ3N5c3RlbUlkJzoge30sICdjbGllbnQnOiB7fSB9LFxyXG4gICdvcHRpb25hbCc6IHsgJ2Zpb3JpIGNhdGFsb2cnOiB7fSwgJ2Zpb3JpIGdyb3VwJzoge30gfVxyXG59O1xyXG5cclxudmFyIG9Ub29sRkxQID0ge1xyXG4gICduYW1lJzogJ0ZMUCcsXHJcbiAgJ3JlcXVpcmVzJzogeyAnc3lzdGVtSWQnOiB7fSwgJ2NsaWVudCc6IHt9IH0sXHJcbiAgXCJvcHRpb25hbFwiOiB7XHJcbiAgICBcImZpb3JpIGludGVudFwiOiB7fVxyXG4gIH0sXHJcbiAgXCJzZXRzXCI6IHtcclxuICAgIFwiaW50ZW50XCI6IHtcclxuICAgICAgXCJzZXRcIjogW1xyXG4gICAgICAgIFwic3lzdGVtSWRcIixcclxuICAgICAgICBcImNsaWVudFwiLFxyXG4gICAgICAgIFwiZmlvcmkgaW50ZW50XCJcclxuICAgICAgXSxcclxuICAgICAgXCJyZXNwb25zZVwiOiBcIl91cmxwYXR0ZXJuMVwiXHJcbiAgICB9LFxyXG4gICAgXCJub25lXCI6IHtcclxuICAgICAgXCJzZXRcIjogW1xyXG4gICAgICAgIFwic3lzdGVtSWRcIixcclxuICAgICAgICBcImNsaWVudFwiXHJcbiAgICAgIF0sXHJcbiAgICAgIFwicmVzcG9uc2VcIjogXCJfdXJscGF0dGVybjJcIlxyXG4gICAgfVxyXG4gIH1cclxufTtcclxuXHJcbnZhciBvVG9vbFRBID0ge1xyXG4gICduYW1lJzogJ1N0YXJ0VEEnLFxyXG4gICdyZXF1aXJlcyc6IHsgJ3RyYW5zYWN0aW9uJzoge30sICdzeXN0ZW1JZCc6IHt9LCAnY2xpZW50Jzoge30gfSxcclxuICAnb3B0aW9uYWwnOiB7fVxyXG59O1xyXG5cclxudmFyIG9Ub29sV2lraSA9IHtcclxuICAnbmFtZSc6ICd3aWtpJyxcclxuICAncmVxdWlyZXMnOiB7ICd3aWtpJzoge30gfSxcclxuICAnb3B0aW9uYWwnOiB7ICd3aWtpcGFnZSc6IHt9IH1cclxufTtcclxuXHJcblxyXG52YXIgb1Rvb2xVbml0VGVzdCA9IHtcclxuICAnbmFtZSc6ICd1bml0IHRlc3QnLFxyXG4gICdyZXF1aXJlcyc6IHsgJ3VuaXQgdGVzdCc6IHt9IH0sXHJcbiAgb3B0aW9uYWw6IHt9XHJcbn07XHJcblxyXG5cclxuY29uc3QgdG9vbHMgPSBbb1Rvb2xXaWtpLCBvVG9vbFRBLCBvVG9vbFVuaXRUZXN0LCBvVG9vbEZMUEQsIG9Ub29sRkxQXTtcclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBjbXBUb29scyhhOiBJTWF0Y2guSVRvb2wsIGI6IElNYXRjaC5JVG9vbCkge1xyXG4gIHJldHVybiBhLm5hbWUubG9jYWxlQ29tcGFyZShiLm5hbWUpO1xyXG59XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gZ2V0VG9vbHMoKSB7XHJcbiAgcmV0dXJuIHRvb2xzLnNvcnQoY21wVG9vbHMpO1xyXG59O1xyXG5cclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBmaW5kTWF0Y2hpbmdTZXQoYSA6IEFycmF5PElNYXRjaC5JVG9vbE1hdGNoPiApIHtcclxuXHJcbn0iLCIvKipcbiAqIEBmaWxlIHRvb2xtYXRjaGVyXG4gKiBAbW9kdWxlIGpmc2ViLmZkZXZzdGFydC50b29sbWF0Y2hlclxuICogQGNvcHlyaWdodCAoYykgR2VyZCBGb3JzdG1hbm5cbiAqXG4gKiBNYXRjaCBhIHRvb2wgcmVjb3JkIG9uIGEgc2VudGVuY2UsXG4gKlxuICogVGhpcyB3aWxsIHVuaWZ5IG1hdGNoaW5nIHJlcXVpcmVkIGFuZCBvcHRpb25hbCBjYXRlZ29yeSB3b3Jkc1xuICogd2l0aCB0aGUgcmVxdWlyZW1lbnRzIG9mIHRoZSB0b29sLlxuICpcbiAqL1xuXCJ1c2Ugc3RyaWN0XCI7XG52YXIgb1Rvb2xGTFBEID0ge1xuICAgICduYW1lJzogJ0ZMUEQnLFxuICAgICdyZXF1aXJlcyc6IHsgJ3N5c3RlbUlkJzoge30sICdjbGllbnQnOiB7fSB9LFxuICAgICdvcHRpb25hbCc6IHsgJ2Zpb3JpIGNhdGFsb2cnOiB7fSwgJ2Zpb3JpIGdyb3VwJzoge30gfVxufTtcbnZhciBvVG9vbEZMUCA9IHtcbiAgICAnbmFtZSc6ICdGTFAnLFxuICAgICdyZXF1aXJlcyc6IHsgJ3N5c3RlbUlkJzoge30sICdjbGllbnQnOiB7fSB9LFxuICAgIFwib3B0aW9uYWxcIjoge1xuICAgICAgICBcImZpb3JpIGludGVudFwiOiB7fVxuICAgIH0sXG4gICAgXCJzZXRzXCI6IHtcbiAgICAgICAgXCJpbnRlbnRcIjoge1xuICAgICAgICAgICAgXCJzZXRcIjogW1xuICAgICAgICAgICAgICAgIFwic3lzdGVtSWRcIixcbiAgICAgICAgICAgICAgICBcImNsaWVudFwiLFxuICAgICAgICAgICAgICAgIFwiZmlvcmkgaW50ZW50XCJcbiAgICAgICAgICAgIF0sXG4gICAgICAgICAgICBcInJlc3BvbnNlXCI6IFwiX3VybHBhdHRlcm4xXCJcbiAgICAgICAgfSxcbiAgICAgICAgXCJub25lXCI6IHtcbiAgICAgICAgICAgIFwic2V0XCI6IFtcbiAgICAgICAgICAgICAgICBcInN5c3RlbUlkXCIsXG4gICAgICAgICAgICAgICAgXCJjbGllbnRcIlxuICAgICAgICAgICAgXSxcbiAgICAgICAgICAgIFwicmVzcG9uc2VcIjogXCJfdXJscGF0dGVybjJcIlxuICAgICAgICB9XG4gICAgfVxufTtcbnZhciBvVG9vbFRBID0ge1xuICAgICduYW1lJzogJ1N0YXJ0VEEnLFxuICAgICdyZXF1aXJlcyc6IHsgJ3RyYW5zYWN0aW9uJzoge30sICdzeXN0ZW1JZCc6IHt9LCAnY2xpZW50Jzoge30gfSxcbiAgICAnb3B0aW9uYWwnOiB7fVxufTtcbnZhciBvVG9vbFdpa2kgPSB7XG4gICAgJ25hbWUnOiAnd2lraScsXG4gICAgJ3JlcXVpcmVzJzogeyAnd2lraSc6IHt9IH0sXG4gICAgJ29wdGlvbmFsJzogeyAnd2lraXBhZ2UnOiB7fSB9XG59O1xudmFyIG9Ub29sVW5pdFRlc3QgPSB7XG4gICAgJ25hbWUnOiAndW5pdCB0ZXN0JyxcbiAgICAncmVxdWlyZXMnOiB7ICd1bml0IHRlc3QnOiB7fSB9LFxuICAgIG9wdGlvbmFsOiB7fVxufTtcbnZhciB0b29scyA9IFtvVG9vbFdpa2ksIG9Ub29sVEEsIG9Ub29sVW5pdFRlc3QsIG9Ub29sRkxQRCwgb1Rvb2xGTFBdO1xuZnVuY3Rpb24gY21wVG9vbHMoYSwgYikge1xuICAgIHJldHVybiBhLm5hbWUubG9jYWxlQ29tcGFyZShiLm5hbWUpO1xufVxuZXhwb3J0cy5jbXBUb29scyA9IGNtcFRvb2xzO1xuZnVuY3Rpb24gZ2V0VG9vbHMoKSB7XG4gICAgcmV0dXJuIHRvb2xzLnNvcnQoY21wVG9vbHMpO1xufVxuZXhwb3J0cy5nZXRUb29scyA9IGdldFRvb2xzO1xuO1xuZnVuY3Rpb24gZmluZE1hdGNoaW5nU2V0KGEpIHtcbn1cbmV4cG9ydHMuZmluZE1hdGNoaW5nU2V0ID0gZmluZE1hdGNoaW5nU2V0O1xuIl0sInNvdXJjZVJvb3QiOiIvc291cmNlLyJ9
