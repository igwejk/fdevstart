'use strict';
// based on: http://en.wikibooks.org/wiki/Algorithm_implementation/Strings/Levenshtein_distance
// and:  http://en.wikipedia.org/wiki/Damerau%E2%80%93Levenshtein_distance
/**
 * Distance of strings algorithm
 * @module fsdevstart.utils.damerauLevenshtein
 */
/**
 * a function calculating distance between two strings
 * @public
 */

function levenshtein(a, b) {
    var i;
    var j;
    var cost;
    var d = [];
    if (a.length === 0) {
        return b.length;
    }
    if (b.length === 0) {
        return a.length;
    }
    for (i = 0; i <= a.length; i++) {
        d[i] = [];
        d[i][0] = i;
    }
    for (j = 0; j <= b.length; j++) {
        d[0][j] = j;
    }
    for (i = 1; i <= a.length; i++) {
        for (j = 1; j <= b.length; j++) {
            if (a.charAt(i - 1) === b.charAt(j - 1)) {
                cost = 0;
            } else {
                cost = 1;
            }
            d[i][j] = Math.min(d[i - 1][j] + 1, d[i][j - 1] + 1, d[i - 1][j - 1] + cost);
            if (i > 1 && j > 1 && a.charAt(i - 1) === b.charAt(j - 2) && a.charAt(i - 2) === b.charAt(j - 1)) {
                d[i][j] = Math.min(d[i][j], d[i - 2][j - 2] + cost);
            }
        }
    }
    return d[a.length][b.length];
}
exports.levenshtein = levenshtein;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy91dGlscy9kYW1lcmF1TGV2ZW5zaHRlaW4udHMiXSwibmFtZXMiOlsibGV2ZW5zaHRlaW4iLCJhIiwiYiIsImkiLCJqIiwiY29zdCIsImQiLCJsZW5ndGgiLCJjaGFyQXQiLCJNYXRoIiwibWluIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBQUE7QUFFQTtBQUNBO0FBR0E7Ozs7QUFLQTs7Ozs7QUFJQSxTQUFBQSxXQUFBLENBQTZCQyxDQUE3QixFQUF5Q0MsQ0FBekMsRUFBbUQ7QUFDakQsUUFBSUMsQ0FBSjtBQUNBLFFBQUlDLENBQUo7QUFDQSxRQUFJQyxJQUFKO0FBQ0EsUUFBSUMsSUFBSSxFQUFSO0FBQ0EsUUFBSUwsRUFBRU0sTUFBRixLQUFhLENBQWpCLEVBQW9CO0FBQ2xCLGVBQU9MLEVBQUVLLE1BQVQ7QUFDRDtBQUNELFFBQUlMLEVBQUVLLE1BQUYsS0FBYSxDQUFqQixFQUFvQjtBQUNsQixlQUFPTixFQUFFTSxNQUFUO0FBQ0Q7QUFDRCxTQUFLSixJQUFJLENBQVQsRUFBWUEsS0FBS0YsRUFBRU0sTUFBbkIsRUFBMkJKLEdBQTNCLEVBQWdDO0FBQzlCRyxVQUFHSCxDQUFILElBQVMsRUFBVDtBQUNBRyxVQUFHSCxDQUFILEVBQVEsQ0FBUixJQUFjQSxDQUFkO0FBQ0Q7QUFDRCxTQUFLQyxJQUFJLENBQVQsRUFBWUEsS0FBS0YsRUFBRUssTUFBbkIsRUFBMkJILEdBQTNCLEVBQWdDO0FBQzlCRSxVQUFHLENBQUgsRUFBUUYsQ0FBUixJQUFjQSxDQUFkO0FBQ0Q7QUFDRCxTQUFLRCxJQUFJLENBQVQsRUFBWUEsS0FBS0YsRUFBRU0sTUFBbkIsRUFBMkJKLEdBQTNCLEVBQWdDO0FBQzlCLGFBQUtDLElBQUksQ0FBVCxFQUFZQSxLQUFLRixFQUFFSyxNQUFuQixFQUEyQkgsR0FBM0IsRUFBZ0M7QUFDOUIsZ0JBQUlILEVBQUVPLE1BQUYsQ0FBU0wsSUFBSSxDQUFiLE1BQW9CRCxFQUFFTSxNQUFGLENBQVNKLElBQUksQ0FBYixDQUF4QixFQUF5QztBQUN2Q0MsdUJBQU8sQ0FBUDtBQUNELGFBRkQsTUFFTztBQUNMQSx1QkFBTyxDQUFQO0FBQ0Q7QUFFREMsY0FBR0gsQ0FBSCxFQUFRQyxDQUFSLElBQWNLLEtBQUtDLEdBQUwsQ0FBU0osRUFBR0gsSUFBSSxDQUFQLEVBQVlDLENBQVosSUFBa0IsQ0FBM0IsRUFBOEJFLEVBQUdILENBQUgsRUFBUUMsSUFBSSxDQUFaLElBQWtCLENBQWhELEVBQW1ERSxFQUFHSCxJQUFJLENBQVAsRUFBWUMsSUFBSSxDQUFoQixJQUFzQkMsSUFBekUsQ0FBZDtBQUVBLGdCQUVFRixJQUFJLENBQUosSUFFQUMsSUFBSSxDQUZKLElBSUFILEVBQUVPLE1BQUYsQ0FBU0wsSUFBSSxDQUFiLE1BQW9CRCxFQUFFTSxNQUFGLENBQVNKLElBQUksQ0FBYixDQUpwQixJQU1BSCxFQUFFTyxNQUFGLENBQVNMLElBQUksQ0FBYixNQUFvQkQsRUFBRU0sTUFBRixDQUFTSixJQUFJLENBQWIsQ0FSdEIsRUFVRTtBQUNBRSxrQkFBRUgsQ0FBRixFQUFLQyxDQUFMLElBQVVLLEtBQUtDLEdBQUwsQ0FFUkosRUFBRUgsQ0FBRixFQUFLQyxDQUFMLENBRlEsRUFJUkUsRUFBRUgsSUFBSSxDQUFOLEVBQVNDLElBQUksQ0FBYixJQUFrQkMsSUFKVixDQUFWO0FBT0Q7QUFDRjtBQUNGO0FBRUQsV0FBT0MsRUFBR0wsRUFBRU0sTUFBTCxFQUFlTCxFQUFFSyxNQUFqQixDQUFQO0FBQ0Q7QUFuRGVJLFFBQUFYLFdBQUEsR0FBV0EsV0FBWCIsImZpbGUiOiJ1dGlscy9kYW1lcmF1TGV2ZW5zaHRlaW4uanMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCdcclxuXHJcbi8vIGJhc2VkIG9uOiBodHRwOi8vZW4ud2lraWJvb2tzLm9yZy93aWtpL0FsZ29yaXRobV9pbXBsZW1lbnRhdGlvbi9TdHJpbmdzL0xldmVuc2h0ZWluX2Rpc3RhbmNlXHJcbi8vIGFuZDogIGh0dHA6Ly9lbi53aWtpcGVkaWEub3JnL3dpa2kvRGFtZXJhdSVFMiU4MCU5M0xldmVuc2h0ZWluX2Rpc3RhbmNlXHJcblxyXG5cclxuLyoqXHJcbiAqIERpc3RhbmNlIG9mIHN0cmluZ3MgYWxnb3JpdGhtXHJcbiAqIEBtb2R1bGUgZnNkZXZzdGFydC51dGlscy5kYW1lcmF1TGV2ZW5zaHRlaW5cclxuICovXHJcblxyXG4vKipcclxuICogYSBmdW5jdGlvbiBjYWxjdWxhdGluZyBkaXN0YW5jZSBiZXR3ZWVuIHR3byBzdHJpbmdzXHJcbiAqIEBwdWJsaWNcclxuICovXHJcbmV4cG9ydCBmdW5jdGlvbiBsZXZlbnNodGVpbiAoYSA6IHN0cmluZywgYiA6IHN0cmluZykge1xyXG4gIHZhciBpIDogbnVtYmVyXHJcbiAgdmFyIGogOiBudW1iZXJcclxuICB2YXIgY29zdCA6IG51bWJlclxyXG4gIHZhciBkID0gW11cclxuICBpZiAoYS5sZW5ndGggPT09IDApIHtcclxuICAgIHJldHVybiBiLmxlbmd0aFxyXG4gIH1cclxuICBpZiAoYi5sZW5ndGggPT09IDApIHtcclxuICAgIHJldHVybiBhLmxlbmd0aFxyXG4gIH1cclxuICBmb3IgKGkgPSAwOyBpIDw9IGEubGVuZ3RoOyBpKyspIHtcclxuICAgIGRbIGkgXSA9IFtdXHJcbiAgICBkWyBpIF1bIDAgXSA9IGlcclxuICB9XHJcbiAgZm9yIChqID0gMDsgaiA8PSBiLmxlbmd0aDsgaisrKSB7XHJcbiAgICBkWyAwIF1bIGogXSA9IGpcclxuICB9XHJcbiAgZm9yIChpID0gMTsgaSA8PSBhLmxlbmd0aDsgaSsrKSB7XHJcbiAgICBmb3IgKGogPSAxOyBqIDw9IGIubGVuZ3RoOyBqKyspIHtcclxuICAgICAgaWYgKGEuY2hhckF0KGkgLSAxKSA9PT0gYi5jaGFyQXQoaiAtIDEpKSB7XHJcbiAgICAgICAgY29zdCA9IDBcclxuICAgICAgfSBlbHNlIHtcclxuICAgICAgICBjb3N0ID0gMVxyXG4gICAgICB9XHJcblxyXG4gICAgICBkWyBpIF1bIGogXSA9IE1hdGgubWluKGRbIGkgLSAxIF1bIGogXSArIDEsIGRbIGkgXVsgaiAtIDEgXSArIDEsIGRbIGkgLSAxIF1bIGogLSAxIF0gKyBjb3N0KVxyXG5cclxuICAgICAgaWYgKFxyXG5cclxuICAgICAgICBpID4gMSAmJlxyXG5cclxuICAgICAgICBqID4gMSAmJlxyXG5cclxuICAgICAgICBhLmNoYXJBdChpIC0gMSkgPT09IGIuY2hhckF0KGogLSAyKSAmJlxyXG5cclxuICAgICAgICBhLmNoYXJBdChpIC0gMikgPT09IGIuY2hhckF0KGogLSAxKVxyXG5cclxuICAgICAgKSB7XHJcbiAgICAgICAgZFtpXVtqXSA9IE1hdGgubWluKFxyXG5cclxuICAgICAgICAgIGRbaV1bal0sXHJcblxyXG4gICAgICAgICAgZFtpIC0gMl1baiAtIDJdICsgY29zdFxyXG5cclxuICAgICAgICApXHJcbiAgICAgIH1cclxuICAgIH1cclxuICB9XHJcblxyXG4gIHJldHVybiBkWyBhLmxlbmd0aCBdWyBiLmxlbmd0aCBdXHJcbn1cclxuXHJcbiJdLCJzb3VyY2VSb290IjoiL3NvdXJjZS8ifQ==
