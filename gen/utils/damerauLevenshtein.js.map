{"version":3,"sources":["/projects/nodejs/botbuilder/fdevstart/src/../src/utils/damerauLevenshtein.ts"],"names":[],"mappings":"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","file":"utils/damerauLevenshtein.js","sourcesContent":["'use strict'\n\n// based on: http://en.wikibooks.org/wiki/Algorithm_implementation/Strings/Levenshtein_distance\n// and:  http://en.wikipedia.org/wiki/Damerau%E2%80%93Levenshtein_distance\n\n\n/**\n * Distance of strings algorithm\n * @module fsdevstart.utils.damerauLevenshtein\n */\n\n/**\n * a function calculating distance between two strings\n * according to the damerau Levenshtein algorithm\n * (this algorithm, in contrast to plain levenshtein treats\n * swapping of characters a distance 1  \"word\"  <-> \"wrod )\n * @param {string} a\n * @param {string} b\n * @public\n */\nexport function levenshteinDamerau (a : string, b : string) {\n  var i : number\n  var j : number\n  var cost : number\n  var d = []\n  if (a.length === 0) {\n    return b.length\n  }\n  if (b.length === 0) {\n    return a.length\n  }\n  for (i = 0; i <= a.length; i++) {\n    d[ i ] = []\n    d[ i ][ 0 ] = i\n  }\n  for (j = 0; j <= b.length; j++) {\n    d[ 0 ][ j ] = j\n  }\n  for (i = 1; i <= a.length; i++) {\n    for (j = 1; j <= b.length; j++) {\n      if (a.charAt(i - 1) === b.charAt(j - 1)) {\n        cost = 0\n      } else {\n        cost = 1\n      }\n\n      d[ i ][ j ] = Math.min(d[ i - 1 ][ j ] + 1, d[ i ][ j - 1 ] + 1, d[ i - 1 ][ j - 1 ] + cost)\n\n      if (\n\n        i > 1 &&\n\n        j > 1 &&\n\n        a.charAt(i - 1) === b.charAt(j - 2) &&\n\n        a.charAt(i - 2) === b.charAt(j - 1)\n\n      ) {\n        d[i][j] = Math.min(\n\n          d[i][j],\n\n          d[i - 2][j - 2] + cost\n\n        )\n      }\n    }\n  }\n\n  return d[ a.length ][ b.length ]\n}\n\n\nexport function levenshtein (a : string, b : string) {\n  //return 2.0 * sift3Distance(a,b); //,6,7); // + b.length / 2);\n  return levenshteinDamerau(a,b);\n}\n\nexport function sift3Distance(s1, s2) {\n    if (s1 == null || s1.length === 0) {\n        if (s2 == null || s2.length === 0) {\n            return 0;\n        } else {\n            return s2.length;\n        }\n    }\n\n    if (s2 == null || s2.length === 0) {\n        return s1.length;\n    }\n    if (Math.abs(s1.length  - s2.length) > 20) {\n      return  Math.max(s1.length, s2.length)/2;\n    }\n\n    var c = 0;\n    var offset1 = 0;\n    var offset2 = 0;\n    var lcs = 0;\n    var maxOffset = 3;\n\n    while ((c + offset1 < s1.length) && (c + offset2 < s2.length)) {\n        if (s1.charAt(c + offset1) == s2.charAt(c + offset2)) {\n            lcs++;\n        } else {\n            offset1 = 0;\n            offset2 = 0;\n            for (var i = 0; i < maxOffset; i++) {\n                if ((c + i < s1.length) && (s1.charAt(c + i) == s2.charAt(c))) {\n                    offset1 = i;\n                    break;\n                }\n                if ((c + i < s2.length) && (s1.charAt(c) == s2.charAt(c + i))) {\n                    offset2 = i;\n                    break;\n                }\n            }\n        }\n        c++;\n    }\n    return (s1.length + s2.length) / 2 - lcs;\n}\n\n/*\n//  Sift4 - common version\n// https://siderite.blogspot.com/2014/11/super-fast-and-accurate-string-distance.html\n// online algorithm to compute the distance between two strings in O(n)\n// maxOffset is the number of characters to search for matching letters\n// maxDistance is the distance at which the algorithm should stop computing the value and just exit (the strings are too different anyway)\nexport function sift4(s1, s2, maxOffset, maxDistance) {\n    if (!s1||!s1.length) {\n        if (!s2) {\n            return 0;\n        }\n        return s2.length;\n    }\n\n    if (!s2||!s2.length) {\n        return s1.length;\n    }\n\n    var l1=s1.length;\n    var l2=s2.length;\n    if(Math.abs(l1 - l2) > maxDistance) {\n      return 50000;\n    }\n\n    var c1 = 0;  //cursor for string 1\n    var c2 = 0;  //cursor for string 2\n    var lcss = 0;  //largest common subsequence\n    var local_cs = 0; //local common substring\n    var trans = 0;  //number of transpositions ('ab' vs 'ba')\n    var offset_arr=[];  //offset pair array, for computing the transpositions\n\n    while ((c1 < l1) && (c2 < l2)) {\n        if (s1.charAt(c1) == s2.charAt(c2)) {\n            local_cs++;\n            var isTrans=false;\n            //see if current match is a transposition\n            var i=0;\n            while (i<offset_arr.length) {\n                var ofs=offset_arr[i];\n                if (c1<=ofs.c1 || c2 <= ofs.c2) {\n                    // when two matches cross, the one considered a transposition is the one with the largest difference in offsets\n                    isTrans=Math.abs(c2-c1)>=Math.abs(ofs.c2-ofs.c1);\n                    if (isTrans)\n                    {\n                        trans++;\n                    } else\n                    {\n                        if (!ofs.trans) {\n                            ofs.trans=true;\n                            trans++;\n                        }\n                    }\n                    break;\n                } else {\n                    if (c1>ofs.c2 && c2>ofs.c1) {\n                        offset_arr.splice(i,1);\n                    } else {\n                        i++;\n                    }\n                }\n            }\n            offset_arr.push({\n                c1:c1,\n                c2:c2,\n                trans:isTrans\n            });\n        } else {\n            lcss+=local_cs;\n            local_cs=0;\n            if (c1!=c2) {\n                c1=c2=Math.min(c1,c2);  //using min allows the computation of transpositions\n            }\n            //if matching characters are found, remove 1 from both cursors (they get incremented at the end of the loop)\n            //so that we can have only one code block handling matches\n            for (var i = 0; i < maxOffset && (c1+i<l1 || c2+i<l2); i++) {\n                if ((c1 + i < l1) && (s1.charAt(c1 + i) == s2.charAt(c2))) {\n                    c1+= i-1;\n                    c2--;\n                    break;\n                }\n                if ((c2 + i < l2) && (s1.charAt(c1) == s2.charAt(c2 + i))) {\n                    c1--;\n                    c2+= i-1;\n                    break;\n                }\n            }\n        }\n        c1++;\n        c2++;\n        if (maxDistance)\n        {\n            var temporaryDistance=Math.max(c1,c2)-lcss+trans;\n            if (temporaryDistance>=maxDistance) return 50000; // Math.round(temporaryDistance);\n        }\n        // this covers the case where the last match is on the last token in list, so that it can compute transpositions correctly\n        if ((c1 >= l1) || (c2 >= l2)) {\n            lcss+=local_cs;\n            local_cs=0;\n            c1=c2=Math.min(c1,c2);\n        }\n    }\n    lcss+=local_cs;\n    return Math.round(Math.max(l1,l2)- lcss +trans); //add the cost of transpositions to the final result\n}\n\n*/\n\n/*\njaro_winkler modified\norigin from :\nhttps://github.com/thsig/jaro-winkler-JS/blob/master/jaro_winkler.js\n\nThe MIT License (MIT)\n\nCopyright (c) 2015 Thorarinn Sigurdsson\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n*/\n\nvar jaro_winkler = { lcadjustments: {}};\n\n/* JS implementation of the strcmp95 C function written by\nBill Winkler, George McLaughlin, Matt Jaro and Maureen Lynch,\nreleased in 1994 (http://web.archive.org/web/20100227020019/http://www.census.gov/geo/msb/stand/strcmp.c).\na and b should be strings. Always performs case-insensitive comparisons\nand always adjusts for long strings. */\nexport function jaro_winkler_adj(a, b) {\n\n  if (!a || !b) { return 0.0; }\n\n  // we have trimmed\n  //a = a.trim().toUpperCase();\n  //b = b.trim().toUpperCase();\n  var a_len = a.length;\n  var b_len = b.length;\n  var a_flag = []; var b_flag = [];\n  var search_range = Math.floor(Math.max(a_len, b_len) / 2) - 1;\n  var minv = Math.min(a_len, b_len);\n\n  // Looking only within the search range, count and flag the matched pairs.\n  var Num_com = 0;\n  var yl1 = b_len - 1;\n  var j = 0 as number;\n  for (var i = 0; i < a_len; i++) {\n    var lowlim = (i >= search_range) ? i - search_range : 0 as number;\n    var hilim  = ((i + search_range) <= yl1) ? (i + search_range) : yl1;\n    for (var j = lowlim; j <= hilim; j++) {\n      if (b_flag[j] !== 1 && a[j] === b[i]) {\n        a_flag[j] = 1;\n        b_flag[i] = 1;\n        Num_com++;\n        break;\n      }\n    }\n  }\n\n  // Return if no characters in common\n  if (Num_com === 0) { return 0.0; }\n\n  // Count the number of transpositions\n  var k = 0; var N_trans = 0;\n  for (var i = 0; i < a_len; i++) {\n    if (a_flag[i] === 1) {\n      var j = 0 as number;\n      for (j = k; j < b_len; j++) {\n        if (b_flag[j] === 1) {\n          k = j + 1;\n          break;\n        }\n      }\n      if (a[i] !== b[j]) { N_trans++; }\n    }\n  }\n  N_trans = Math.floor(N_trans / 2);\n\n  // Adjust for similarities in nonmatched characters\n  var N_simi = 0; var adjwt = {}; // jaro_winkler.lcadjustments;\n  if (minv > Num_com) {\n    for (var i = 0; i < a_len; i++) {\n      if (!a_flag[i]) {\n        for (var j = 0; j < b_len; j++) {\n          if (!b_flag[j]) {\n            if (adjwt[a[i]] === b[j]) {\n              N_simi += 3;\n              b_flag[j] = 2;\n              break;\n            }\n          }\n        }\n      }\n    }\n  }\n\n  var Num_sim = (N_simi / 10.0) + Num_com;\n\n  // Main weight computation\n  var weight = Num_sim / a_len + Num_sim / b_len + (Num_com - N_trans) / Num_com;\n  weight = weight / 3;\n\n  // Continue to boost the weight if the strings are similar\n  if (weight > 0.7) {\n    // Adjust for having up to the first 4 characters in common\n    var j = (minv >= 4) ? 4 : minv as number;\n    var i = 0 as number;\n    for (i = 0; (i < j) && a[i] === b[i]; i++) { }\n    if (i) { weight += i * 0.1 * (1.0 - weight) };\n\n    // Adjust for long strings.\n    // After agreeing beginning chars, at least two more must agree\n    // and the agreeing characters must be more than half of the\n    // remaining characters.\n    if (minv > 4 && Num_com > i + 1 && 2 * Num_com >= minv + i) {\n      weight += (1 - weight) * ((Num_com - i - 1) / (a_len * b_len - i*2 + 2));\n    }\n  }\n\n  return weight\n\n};\n\n\n// The char adjustment table used above\n/*\njaro_winkler.adjustments = {\n   'A': 'E',\n   'A': 'I',\n   'A': 'O',\n  'A': 'U',\n  'B': 'V',\n  'E': 'I',\n  'E': 'O',\n  'E': 'U',\n  'I': 'O',\n  'I': 'U',\n  'O': 'U',\n  'I': 'Y',\n  'E': 'Y',\n  'C': 'G',\n  'E': 'F',\n  'W': 'U',\n  'W': 'V',\n  'X': 'K',\n  'S': 'Z',\n  'X': 'S',\n  'Q': 'C',\n  'U': 'V',\n  'M': 'N',\n  'L': 'I',\n  'Q': 'O',\n  'P': 'R',\n  'I': 'J',\n  '2': 'Z',\n  '5': 'S',\n  '8': 'B',\n  '1': 'I',\n  '1': 'L',\n  '0': 'O',\n  '0': 'Q',\n  'C': 'K',\n  'G': 'J',\n  'E': ' ',\n  'Y': ' ',\n  'S': ' '\n}\n*/\njaro_winkler.lcadjustments = {};\n\n//Object.keys(jaro_winkler.adjustments).forEach(function(skey : string) {\n//    jaro_winkler.lcasjustments[skey.toLowerCase()] = jaro_winkler.adjustments[skey].toLowerCase();\n//});\n//console.log(JSON.stringify(Object.keysjaro_winkler.adjustments))\n\n\n\n/**\n * Talisman metrics/distance/jaro\n * ===============================\n *\n * Function computing the Jaro score.\n *\n * [Reference]:\n * https://en.wikipedia.org/wiki/Jaro%E2%80%93Winkler_distance\n *\n * [Articles]:\n * Jaro, M. A. (1989). \"Advances in record linkage methodology as applied to\n * the 1985 census of Tampa Florida\".\n * Journal of the American Statistical Association 84 (406): 414–20\n *\n * Jaro, M. A. (1995). \"Probabilistic linkage of large public health data file\".\n * Statistics in Medicine 14 (5–7): 491–8.\n *\n * [Tags]: semimetric, string metric.\n */\n\n\n/**\n * Function creating a vector of n dimensions and filling it with a single\n * value if required.\n *\n * @param  {number} n    - Dimensions of the vector to create.\n * @param  {mixed}  fill - Value to be used to fill the vector.\n * @return {array}       - The resulting vector.\n */\nexport function vec(n, fill) {\n  const vector = new Array(n);\n\n  if (arguments.length > 1) {\n    for (let i = 0; i < n; i++)\n      vector[i] = fill;\n  }\n  return vector;\n}\n\n\n/**\n * Function returning the Jaro score between two sequences.\n *\n * @param  {mixed}  a     - The first sequence.\n * @param  {mixed}  b     - The second sequence.\n * @return {number}       - The Jaro score between a & b.\n */\nexport function talisman_jaro(a, b) {\n  // Fast break\n  if (a === b)\n    return 1;\n\n  let max, min;\n\n  if (a.length > b.length) {\n    max = a;\n    min = b;\n  }\n  else {\n    max = b;\n    min = a;\n  }\n\n  // Finding matches\n  const range = Math.max(((max.length / 2) | 0) - 1, 0),\n        indexes = vec(min.length, -1),\n        flags = vec(max.length, false);\n\n  let matches = 0;\n\n  for (let i = 0, l = min.length; i < l; i++) {\n    const character = min[i],\n          xi = Math.max(i - range, 0),\n          xn = Math.min(i + range + 1, max.length);\n\n    for (let j = xi, m = xn; j < m; j++) {\n      if (!flags[j] && character === max[j]) {\n        indexes[i] = j;\n        flags[j] = true;\n        matches++;\n        break;\n      }\n    }\n  }\n\n  const ms1 = new Array(matches),\n        ms2 = new Array(matches);\n\n  let si;\n\n  si = 0;\n  for (let i = 0, l = min.length; i < l; i++) {\n    if (indexes[i] !== -1) {\n      ms1[si] = min[i];\n      si++;\n    }\n  }\n\n  si = 0;\n  for (let i = 0, l = max.length; i < l; i++) {\n    if (flags[i]) {\n      ms2[si] = max[i];\n      si++;\n    }\n  }\n\n  let transpositions = 0;\n  for (let i = 0, l = ms1.length; i < l; i++) {\n    if (ms1[i] !== ms2[i])\n      transpositions++;\n  }\n\n  // Computing the distance\n  if (!matches)\n    return 0;\n\n  const t = (transpositions / 2) | 0,\n        m = matches;\n\n  return ((m / a.length) + (m / b.length) + ((m - t) / m)) / 3;\n}\n\n/**\n * Jaro distance is 1 - the Jaro score.\n */\n//const distance = (a, b) => 1 - jaro(a, b);\n\n\n/*\n-The MIT License (MIT)\n-\n-Copyright (c) 2015 Thorarinn Sigurdsson\n-\n-Permission is hereby granted, free of charge, to any person obtaining a copy\n-of this software and associated documentation files (the \"Software\"), to deal\n-in the Software without restriction, including without limitation the rights\n-to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n-copies of the Software, and to permit persons to whom the Software is\n-furnished to do so, subject to the following conditions:\n-\n-The above copyright notice and this permission notice shall be included in all\n-copies or substantial portions of the Software.\n-\n-THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n-IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n-FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n-AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n-LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n-OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n-SOFTWARE.\n*/\n\n\n/**\n * Talisman metrics/distance/jaro-winkler\n * =======================================\n *\n * Function computing the Jaro-Winkler score.\n *\n * [Reference]:\n * https://en.wikipedia.org/wiki/Jaro%E2%80%93Winkler_distance\n *\n * [Article]:\n * Winkler, W. E. (1990). \"String Comparator Metrics and Enhanced Decision Rules\n * in the Fellegi-Sunter Model of Record Linkage\".\n * Proceedings of the Section on Survey Research Methods\n * (American Statistical Association): 354–359.\n *\n * [Tags]: semimetric, string metric.\n */\nvar jaro = talisman_jaro; //import jaro from './jaro';\n\n/**\n * Function returning the Jaro-Winkler score between two sequences.\n *\n * @param  {object} options - Custom options.\n * @param  {mixed}  a       - The first sequence.\n * @param  {mixed}  b       - The second sequence.\n * @return {number}         - The Jaro-Winkler score between a & b.\n */\nfunction customJaroWinkler(options, a, b) {\n  options = options || {};\n\n  const {\n    boostThreshold = 0.7,\n    scalingFactor = 0.1\n  } = options;\n\n  if (scalingFactor > 0.25)\n    throw Error('talisman/metrics/distance/jaro-winkler: the scaling factor should not exceed 0.25.');\n\n  if (boostThreshold < 0 || boostThreshold > 1)\n    throw Error('talisman/metrics/distance/jaro-winkler: the boost threshold should be comprised between 0 and 1.');\n\n  // Fast break\n  if (a === b)\n    return 1;\n\n  const maxLength = Math.max(a.length, b.length),\n        minLength = Math.min(a.length, b.length);\n\n  // Computing prefix\n  let prefix = 0;\n  for (let i = 0, l = minLength; i < l; i++) {\n    if (a[i] === b[i])\n      prefix++;\n    else\n      break;\n  }\n\n  // Computing Jaro-Winkler score\n  const j = jaro(a, b);\n\n  if (j < boostThreshold)\n    return j;\n\n  return j + Math.min(scalingFactor, maxLength) * prefix * (1 - j);\n}\n\n/**\n * Jaro-Winkler standard function.\n */\nexport const jaroWinkler = customJaroWinkler.bind(null, null);\n\n/**\n * Jaro-Winkler distance is 1 - the Jaro-Winkler score.\n */\nconst distance = (a, b) => 1 - jaroWinkler(a, b);\n\n/**\n * Exporting.\n */\n\n\n\n/*\nCopyright (c) 2012, Adam Phillabaum, Chris Umbel\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\nUnless otherwise stated by a specific section of code\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n*/\n\n// Computes the Jaro distance between two string -- intrepreted from:\n// http://en.wikipedia.org/wiki/Jaro%E2%80%93Winkler_distance\n// s1 is the first string to compare\n// s2 is the second string to compare\nexport function jaroDistance(s1, s2) {\n    if (typeof(s1) != \"string\" || typeof(s2) != \"string\") return 0;\n    if (s1.length == 0 || s2.length == 0)\n        return 0;\n    //s1 = s1.toLowerCase(), s2 = s2.toLowerCase();\n    var matchWindow = (Math.floor(Math.max(s1.length, s2.length) / 2.0)) - 1;\n    var matches1 = new Array(s1.length);\n    var matches2 = new Array(s2.length);\n    var m = 0; // number of matches\n    var t = 0; // number of transpositions\n\n    //debug helpers\n    //console.log(\"s1: \" + s1 + \"; s2: \" + s2);\n    //console.log(\" - matchWindow: \" + matchWindow);\n\n    // find matches\n    for (var i = 0; i < s1.length; i++) {\n\tvar matched = false;\n\n\t// check for an exact match\n\tif (s1[i] ==  s2[i]) {\n\t\tmatches1[i] = matches2[i] = matched = true;\n\t\tm++\n\t}\n\n\t// check the \"match window\"\n\telse {\n        \t// this for loop is a little brutal\n        \tfor (k = (i <= matchWindow) ? 0 : i - matchWindow;\n        \t\t(k <= i + matchWindow) && k < s2.length && !matched;\n\t\t\tk++) {\n            \t\tif (s1[i] == s2[k]) {\n                \t\tif(!matches1[i] && !matches2[k]) {\n                \t    \t\tm++;\n               \t\t}\n\n        \t        matches1[i] = matches2[k] = matched = true;\n        \t    }\n        \t}\n\t}\n    }\n\n    if(m == 0)\n        return 0.0;\n\n    // count transpositions\n    var k = 0;\n\n    for(var i = 0; i < s1.length; i++) {\n    \tif(matches1[k]) {\n    \t    while(!matches2[k] && k < matches2.length)\n                k++;\n\t        if(s1[i] != s2[k] &&  k < matches2.length)  {\n                t++;\n            }\n\n    \t    k++;\n    \t}\n    }\n\n    //debug helpers:\n    //console.log(\" - matches: \" + m);\n    //console.log(\" - transpositions: \" + t);\n    t = t / 2.0;\n    return (m / s1.length + m / s2.length + (m - t) / m) / 3;\n}\n\n// Computes the Winkler distance between two string -- intrepreted from:\n// http://en.wikipedia.org/wiki/Jaro%E2%80%93Winkler_distance\n// s1 is the first string to compare\n// s2 is the second string to compare\n// dj is the Jaro Distance (if you've already computed it), leave blank and the method handles it\nexport function jaroWinklerDistance(s1 : string, s2: string) {\n\t\tif (s1 == s2) {\n\t\t\t\treturn 1\n\t\t}\n\t\telse {\n\t\t    var jaro = talisman_jaro(s1,s2);\n        var p = 0.1; //\n\t\t    var l = 0 // length of the matching prefix\n\t\t    while(s1[l] == s2[l] && l < 4)\n\t\t        l++;\n\n\t\t    return jaro + l * p * (1 - jaro);\n\t\t}\n}\n"],"sourceRoot":"ABC"}