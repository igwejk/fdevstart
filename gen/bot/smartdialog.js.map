{"version":3,"sources":["/projects/nodejs/botbuilder/fdevstart/src/../src/bot/smartdialog.ts"],"names":[],"mappings":"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","file":"bot/smartdialog.js","sourcesContent":["/**\n * The bot implementation\n *\n * Instantiate apssing a connector via\n * makeBot\n *\n */\n/**\n * @file\n * @module jfseb.fdevstart.smartdialog\n * @copyright (c) 2016 Gerd Forstmann\n */\n//declare module 'elizabot' { };\n//declare module 'winston-pg' { };\n//delcare module 'winston' {};\n\nimport * as builder from 'botbuilder';\nimport * as debug from 'debug';\n\nimport * as Exec from '../exec/exec';\nimport * as Match from '../match/match';\n\nimport * as Analyze from '../match/analyze';\nimport * as BreakDown from '../match/breakdown';\n\nimport * as WhatIs from '../match/whatis';\nimport * as ListAll from '../match/listall';\n\nimport * as DialogLogger from '../utils/dialoglogger';\n\nimport * as process from 'process';\n\nvar dburl = process.env.DATABASE_URL || \"\";\n\nvar pglocalurl = \"postgres://joe:abcdef@localhost:5432/abot\";\nvar dburl = process.env.DATABASE_URL || pglocalurl;\n\nimport * as pg from 'pg';\nvar o = pg as any;\no.defaults.ssl = true;\nvar dialogLogger = DialogLogger.logger(\"smartbot\", dburl, pg);\n\ntype stringOrMessage = string | builder.Message;\nfunction send<T extends stringOrMessage>(o : T) : T { return o; };\nfunction dialoglog(intent: string, session : builder.Session, response : stringOrMessage) {\n  var sResponse : string;\n  var sAction : string;\n  if( typeof response === \"string\") {\n    sAction = \"\";\n    sResponse = response;\n  } else {\n    var aMessage : builder.Message = response;\n    var iMessage : builder.IMessage = aMessage.toMessage();\n    sResponse = iMessage.text;\n    sAction = (iMessage.entities && iMessage.entities[0]) ?  (JSON.stringify(iMessage.entities && iMessage.entities[0])) : \"\";\n  }\n  dialogLogger({\n    intent: intent,\n    session: session,\n    response : sResponse,\n    action : sAction\n  });\n  session.send(response);\n}\n\n//const pgLogger = new PgLogger({\n//  name: 'test-logger',\n//  level: 'debug',\n//  connString: 'postgres://ubuntu@localhost:5432/circle_test',\n//  tableName: 'winston_logs',\n//});\n\n\n\n//winston.add(winston.transports.File, { filename: 'winston_out.log', timestamp : true });\n//  winston.remove(winston.transports.Console);\n//winston.add(pgLogger);\n\n/*\nconst logger = new winston.Logger({\n  transports: [\n    new winston.transports.Console({\n      color: true,\n      timestamp: true,\n    }),\n    pgLogger,\n  ]\n});\n*/\n//pgLogger.initTable(done);\n\n\nvar elizabot = require('../extern/elizabot/elizabot.js');\n//import * as elizabot from 'elizabot';\n\nlet debuglog = debug('smartdialog');\nimport * as PlainRecognizer from './plainrecognizer';\n//var builder = require('botbuilder');\n\nvar dispatcher = require('../match/dispatcher.js').dispatcher;\n\n\nfunction getConversationId(session: builder.Session): string {\n  return session.message &&\n    session.message.address &&\n    session.message.address.conversation.id;\n}\n\nvar elizabots = {};\n\nfunction getElizaBot(id: string) {\n  if (!elizabots[id]) {\n    elizabots[id] = {\n      access: new Date(),\n      elizabot: new elizabot()\n    };\n  }\n  elizabots[id].access = new Date();\n  return elizabots[id].elizabot;\n}\n\nimport * as IMatch from '../match/ifmatch';\nimport * as Tools from '../match/tools';\n\nvar newFlow = true;\n\nimport * as Model from '../model/model';\nimport * as ExecServer from '../exec/execserver';\n\nconst theDefaultModel = Model.loadModels();\n\nvar models = {};\n\nfunction loadModel(modelPath? : string) : IMatch.IModels {\n  modelPath = modelPath || \"\";\n  if(!models[modelPath]) {\n    models[modelPath] = Model.loadModels(modelPath);\n  }\n  return models[modelPath];\n}\n\nif (newFlow) {\n\n} else {\n\n  //const tools = Tools.getTools();\n  //const InputFilterRules = require('../match/inputFilterRules.js');\n  //const mRules = InputFilterRules.getMRulesSample();\n}\n\nfunction isAnonymous(userid : string) : boolean {\n  return userid.indexOf(\"ano:\") === 0;\n}\n\nfunction restrictLoggedOn(session : builder.Session, arr : any[]) : any[] {\n  var userid = session.message.address\n    && session.message.address.user\n    && session.message.address.user.id || \"\";\n  if(process.env.ABOT_EMAIL_USER && isAnonymous(userid))  {\n    if(arr.length  < 6) {\n      return arr;\n    }\n    var len = arr.length;\n    var res = arr.slice(0, Math.min(Math.max(Math.floor(arr.length / 3), 7), arr.length));\n    if(typeof arr[0] === \"string\") {\n      var delta = len - res.length;\n      res.push(\"... and \" + delta + \" more entries for registered users\");\n    }\n    return res;\n  }\n  return arr;\n}\n\n/*\nexport class SimpleRecognizer implements builder.IIntentRecognizer {\n  constructor() {\n\n  }\n\n  recognize(context: builder.IRecognizeContext, callback: (err: Error, result: builder.IIntentRecognizerResult) => void): void {\n    var u = {} as builder.IIntentRecognizerResult;\n\n    debuglog(\"recognizing \" + context.message.text);\n    if (context.message.text.indexOf(\"start\") >= 0) {\n      u.intent = \"ShowEntity\";\n      u.score = 0.9;\n      var e1 = {} as builder.IEntity;\n      e1.startIndex = \"start \".length;\n      e1.endIndex = context.message.text.length;\n      e1.score = 0.3;\n      u.entities = [e1];\n      callback(undefined, u);\n      return;\n    }\n\n    if (context.message.text.indexOf(\"train\") >= 0) {\n      u.intent = \"train\";\n      u.score = 0.9;\n      var e1 = {} as builder.IEntity;\n      e1.startIndex = \"train \".length;\n      e1.endIndex = context.message.text.length;\n      e1.score = 0.3;\n      u.entities = [e1];\n      callback(undefined, u);\n      return;\n    }\n    if (context.message.text.indexOf(\"learn\") >= 0) {\n      u.intent = \"learn\";\n      u.score = 0.9;\n      var e1 = {} as builder.IEntity;\n      e1.type = \"trainFact\";\n      e1.startIndex = \"train \".length;\n      e1.endIndex = context.message.text.length;\n      e1.score = 0.3;\n      u.entities = [e1];\n      callback(undefined, u);\n      return;\n    }\n    if (context.message.text.indexOf(\"help\") >= 0) {\n      u.intent = \"help\";\n      u.score = 0.9;\n      var e1 = {} as builder.IEntity;\n      e1.startIndex = \"train \".length;\n      e1.endIndex = context.message.text.length;\n      e1.score = 0.3;\n      u.entities = [e1];\n      callback(undefined, u);\n      return;\n    }\n    if (context.message.text.indexOf(\"exit\") >= 0) {\n      u.intent = \"exit\";\n      u.score = 0.9;\n      var e1 = {} as builder.IEntity;\n      e1.startIndex = \"exit \".length;\n      e1.endIndex = context.message.text.length;\n      e1.score = 0.3;\n      u.entities = [e1];\n      callback(undefined, u);\n      return;\n    }\n    if (context.message.text.indexOf(\"wrong\") >= 0) {\n      u.intent = \"wrong\";\n      u.score = 0.9;\n      var e1 = {} as builder.IEntity;\n      e1.startIndex = \"exit \".length;\n      e1.endIndex = context.message.text.length;\n      e1.score = 0.3;\n      u.entities = [e1];\n      callback(undefined, u);\n      return;\n    }\n    debuglog('recognizing nothing');\n    u.intent = \"None\";\n    u.score = 0.1;\n    var e1 = {} as builder.IEntity;\n    e1.startIndex = \"exit \".length;\n    e1.endIndex = context.message.text.length;\n    e1.score = 0.1;\n    u.entities = [];\n    callback(undefined, u);\n  }\n}\n*/\n\nconst aTrainReplies = [ \"Thank you for sharing this suggestion with us\",\n\"Thank for for this valuable information.\",\n\"Thank for for this interesting fact!\",\n\"Thats a plethoria of information.\",\n\"That's a nugget of information.\",\n\"Lovely, I may consider you input.\",\n\"Well done, anything more to let me know?\",\n\"I do appreciate your teaching and my learning experience, or was it the other way round?\",\n\"Your helpful input has been stored in some dusty corner of the World wide web!\",\n\"Thank you for my learning experience!\",\n\"I have incorporated your valuable suggestion in the wisdom of the internet\"\n];\n\nvar aTrainDialog = aTrainReplies;\n\nvar aTrainExitHint = [\n\"\\ntype \\\"done\\\" when you are done training me.\",\n\"\",\n\"\",\n\"\",\n\"\\nremember, you are stuck here instructing me, type \\\"done\\\" to return.\",\n\"\"];\n\nconst aEnterTrain = [\"So you think this is wrong? You can offer your advise here.\\n Type \\\"done\\\" if you are done with instructing me\",\n\"Feel free to offer me your better solution here.\\n\",\n\"Some say \\\"The secret to happiness is to lower your expectations to the point they are already met.\\\", \\nt if you could help me to becomde better, instruct me.\",\n\"Feel free to offer me your better solution here.\\n Type \\\"done\\\" if you are done with instructing me\",\n\"Feel free to offer me your better solution here.\\n Type \\\"done\\\" if you are done with instructing me\",\n];\n\n\nconst aBackFromTraining = [\n  \"Puuh, back from training! Now for the easy part ...\",\n  \"Live and don't learn, that's us. Naah, we'll see.\",\n  \"The secret to happiness is to lower your expectations to the point they are already met.\",\n  \"Thanks for having this lecture session, now back to our usual self.\"\n];\n\n\nconst aTrainNoKlingon = [\n  \"He who master the dark arts of SAP must not dwell in the earthly realms of Start Trek.\",\n  \"SAP is a cloud company, not a space company.\",\n  \"The depth of R/3 are deeper than Deep Space 42.\",\n  \"My brainpower is fully absorbed with mastering other realms.\",\n  \"For the wosap, the sky is the limit. Feel free to check out nasa.gov .\",\n  \"The future is SAP or IBM blue, not space black.\",\n  \"That's left to some musky future.\"\n]\n\nfunction getRandomResult(arr : string[]) : string {\n  return arr[Math.floor(Math.random() * arr.length) % arr.length];\n}\n\nexport class SimpleUpDownRecognizer implements builder.IIntentRecognizer {\n  constructor() {\n\n  }\n\n  recognize(context: builder.IRecognizeContext, callback: (err: Error, result: builder.IIntentRecognizerResult) => void): void {\n    var u = {} as builder.IIntentRecognizerResult;\n\n    debuglog(\"recognizing \" + context.message.text);\n    if (context.message.text.indexOf(\"down\") >= 0) {\n      u.intent = \"intent.down\";\n      u.score = 0.9;\n      var e1 = {} as builder.IEntity;\n      e1.startIndex = \"start \".length;\n      e1.endIndex = context.message.text.length;\n      e1.score = 0.3;\n      u.entities = [e1];\n      callback(undefined, u);\n      return;\n    }\n    if (context.message.text.indexOf(\"up\") >= 0) {\n      u.intent = \"intent.up\";\n      u.score = 0.9;\n      var e1 = {} as builder.IEntity;\n      e1.startIndex = \"up\".length;\n      e1.endIndex = context.message.text.length;\n      e1.score = 0.3;\n      u.entities = [e1];\n      callback(undefined, u);\n      return;\n    }\n    if (context.message.text.indexOf(\"done\") >= 0) {\n      u.intent = \"intent.up\";\n      u.score = 0.9;\n      var e1 = {} as builder.IEntity;\n      e1.startIndex = \"up\".length;\n      e1.endIndex = context.message.text.length;\n      e1.score = 0.3;\n      u.entities = [e1];\n      callback(undefined, u);\n      return;\n    }\n    if (context.message.text.indexOf(\"exit\") >= 0) {\n      u.intent = \"intent.up\";\n      u.score = 0.9;\n      var e1 = {} as builder.IEntity;\n      e1.startIndex = \"up\".length;\n      e1.endIndex = context.message.text.length;\n      e1.score = 0.3;\n      u.entities = [e1];\n      callback(undefined, u);\n      return;\n    }\n    if (context.message.text.indexOf(\"quit\") >= 0) {\n      u.intent = \"intent.up\";\n      u.score = 0.9;\n      var e1 = {} as builder.IEntity;\n      e1.startIndex = \"up\".length;\n      e1.endIndex = context.message.text.length;\n      e1.score = 0.3;\n      u.entities = [e1];\n      callback(undefined, u);\n      return;\n    }\n    debuglog('recognizing nothing');\n    u.intent = \"None\";\n    u.score = 0.1;\n    var e1 = {} as builder.IEntity;\n    e1.startIndex = \"exit \".length;\n    e1.endIndex = context.message.text.length;\n    e1.score = 0.1;\n    u.entities = [];\n    callback(undefined, u);\n  }\n}\n\nconst AnyObject = Object as any;\n// globalTunnel.initialize({\n//  host: 'proxy.exxxample.com',\n//  port: 8080\n// })\n\n// Create bot and bind to console\n// var connector = new htmlconnector.HTMLConnector()\n\n// connector.setAnswerHook(function (sAnswer) {\n//  console.log('Got answer : ' + sAnswer + '\\n')\n// })\n\nvar bot;\n// setTimeout(function () {\n//   connector.processMessage('start unit test ABC ')\n// }, 5000)\n\nimport * as fs from 'fs';\n\nvar oJSON = JSON.parse('' + fs.readFileSync('./resources/model/intents.json'));\nvar oRules = PlainRecognizer.parseRules(oJSON);\n// var Recognizer = new (recognizer.RegExpRecognizer)(oRules);\n\n\nfunction logQuery(session: builder.Session, intent: string, result?: Array<IMatch.IToolMatch>) {\n\n  fs.appendFile('./logs/showmequeries.txt', \"\\n\" + JSON.stringify({\n    text: session.message.text,\n    timestamp: session.message.timestamp,\n    intent: intent,\n    res: result && result.length && Match.ToolMatch.dumpNice(result[0]) || \"0\",\n    conversationId: session.message.address\n    && session.message.address.conversation\n    && session.message.address.conversation.id || \"\",\n    userid: session.message.address\n    && session.message.address.user\n    && session.message.address.user.id || \"\"\n  }), function (err, res) {\n    if (err) {\n      debuglog(\"logging failed \" + err);\n    }\n  });\n}\n\n\n\nfunction logQueryWhatIs(session: builder.Session, intent: string, result?: Array<IMatch.IWhatIsAnswer>) {\n\n  fs.appendFile('./logs/showmequeries.txt', \"\\n\" + JSON.stringify({\n    text: session.message.text,\n    timestamp: session.message.timestamp,\n    intent: intent,\n    res: result && result.length && WhatIs.dumpNice(result[0]) || \"0\",\n    conversationId: session.message.address\n    && session.message.address.conversation\n    && session.message.address.conversation.id || \"\",\n    userid: session.message.address\n    && session.message.address.user\n    && session.message.address.user.id || \"\"\n  }), function (err, res) {\n    if (err) {\n      debuglog(\"logging failed \" + err);\n    }\n  });\n}\n\nvar gwords = {};\n/**\n * Construct a bot\n * @param connector {Connector} the connector to use\n * HTMLConnector\n * or connector = new builder.ConsoleConnector().listen()\n */\nfunction makeBot(connector, modelPath? : string) {\n\n  var theModel = loadModel(modelPath);\n  bot = new builder.UniversalBot(connector);\n\n\n\n  // Create LUIS recognizer that points at our model and add it as the root '/' dialog for our Cortana Bot.\n  // var model = sensitive.modelurl;\n  // var model = 'https://api.projectoxford.ai/luis/v2.0/apps/c413b2ef-382c-45bd-8ff0-f76d60e2a821?subscription-key=c21398b5980a4ce09f474bbfee93b892&q='\n  var recognizer = new PlainRecognizer.RegExpRecognizer(oRules);\n\n  var dialog = new builder.IntentDialog({ recognizers: [recognizer] });\n  // dialog.onBegin(function(session,args) {\n  // console.log(\"beginning ...\")\n  // session.dialogData.retryPrompt = args && args.retryPrompt || \"I am sorry\"\n  // session.send(\"What do you want?\")\n  //\n  // })\n\n  var dialogUpDown = new builder.IntentDialog({ recognizers: [new SimpleUpDownRecognizer()] });\n\n  bot.dialog('/updown', dialogUpDown);\n  dialogUpDown.onBegin(function (session) {\n    dialoglog(\"TrainMe\", session, send(getRandomResult(aEnterTrain)));\n    //session.send(\"Hi there, updown is waiting for you\");\n  })\n\n  dialogUpDown.matches('intent.up', [\n    function (session, args, next) {\n      session.dialogData.abc = args || {};\n      builder.Prompts.text(session, 'you want to exit training? type \\\"done\\\" again.');\n    },\n    function (session, results, next) {\n      session.dialogData.abc = results.reponse;\n      next();\n    },\n    function (session, results) {\n      session.endDialogWithResult({ response: session.dialogData.abc });\n    }\n  ]\n  );\n\n  dialogUpDown.matches('intent.down', [\n    function (session, args, next) {\n      session.dialogData.abc = args || {};\n      builder.Prompts.text(session, 'you want to go down!');\n    },\n    function (session, results, next) {\n      session.dialogData.abc = -1; // results.reponse;\n      next();\n    },\n    function (session, results) {\n      session.send(\"still going down?\");\n    }\n  ]\n  );\n  dialogUpDown.onDefault(function (session) {\n    logQuery(session, \"onDefault\");\n    var res = getRandomResult(aTrainDialog) + getRandomResult(aTrainExitHint);\n    dialoglog(\"TrainMe\", session, send(res));\n  });\n\n\n  bot.dialog('/train', [\n    function (session, args, next) {\n      session.dialgoData.abc = args || {};\n      builder.Prompts.text(session, 'Do you want to train me');\n    },\n    function (session, results, next) {\n      session.dialogData.abc = results.reponse;\n    },\n    function (session, results) {\n      session.endDialogWithResult({ response: session.DialogData.abc });\n    }\n  ]);\n\n\n  bot.dialog('/', dialog);\n\n  dialog.matches('ShowMe', [\n    function (session, args, next) {\n      var isCombinedIndex = {};\n      var oNewEntity;\n      // expecting entity A1\n      debuglog(\"Show Entity\");\n      debuglog('raw: ' + JSON.stringify(args.entities), undefined, 2);\n      var a1 = builder.EntityRecognizer.findEntity(args.entities, 'A1');\n      const result = Analyze.analyzeAll(a1.entity,\n        theModel.rules, theModel.tools, gwords);\n      logQuery(session, 'ShowMe', result);\n      // test.expect(3)\n      //  test.deepEqual(result.weight, 120, 'correct weight');\n      if (!result || result.length === 0) {\n        next();\n      }\n      // debuglog('result : ' + JSON.stringify(result, undefined, 2));\n      debuglog('best result : ' + JSON.stringify(result[0] || {}, undefined, 2));\n      debuglog('top : ' + Match.ToolMatch.dumpWeightsTop(result, { top: 3 }));\n\n\n      if (Analyze.isComplete(result[0])) {\n        session.dialogData.result = result[0];\n        //    session.send('Showing entity ...');\n        next();\n      } else if (Analyze.getPrompt(result[0])) {\n        var prompt = Analyze.getPrompt(result[0]);\n        session.dialogData.result = result[0];\n        session.dialogData.prompt = prompt;\n        dialoglog(\"ShowMe\", session,send(\"Not enough information supplied: \" + Match.ToolMatch.dumpNice(\n          session.dialogData.result\n        )));\n        builder.Prompts.text(session, prompt.text);\n      } else {\n        var best = result.length ? Match.ToolMatch.dumpNice(result[0]) : \"<nothing>\";\n        dialoglog(\"ShowMe\", session, send('I did not understand this' + best));\n      }\n    },\n    function (session, results, next) {\n      var result = session.dialogData.result;\n      if (!result || result.length === 0) {\n        next();\n      }\n\n      if (results.response) {\n        // some prompting\n        Analyze.setPrompt(session.dialogData.result, session.dialogData.prompt, results.response);\n      }\n      if (Analyze.isComplete(session.dialogData.result)) {\n        next();\n      } else if (Analyze.getPrompt(session.dialogData.result)) {\n        var prompt = Analyze.getPrompt(session.dialogData.result);\n        session.dialogData.prompt = prompt;\n        builder.Prompts.text(session, prompt.text);\n      }\n    },\n    function (session, results, next) {\n      var result = session.dialogData.result;\n      if (results.response) {\n        // some prompting\n        Analyze.setPrompt(session.dialogData.result,\n          session.dialogData.prompt, results.response);\n      }\n      if (Analyze.isComplete(session.dialogData.result)) {\n        const exec = ExecServer.execTool(session.dialogData.result as IMatch.IToolMatch, theModel.records);\n\n        var reply = new builder.Message(session)\n          .text(exec.text)\n          .addEntity(exec.action);\n        // .addAttachment({ fallbackText: \"I don't know\", contentType: 'image/jpeg', contentUrl: \"www.wombat.org\" });\n        dialoglog(\"ShowMe\",session,send(reply));\n\n      } else {\n        if (session.dialogData.result) {\n          dialoglog(\"ShowMe\",\n          session,send(\"Not enough information supplied: \" + Match.ToolMatch.dumpNice(\n            session.dialogData.result\n          )));\n        } else {\n          dialoglog(\"ShowMe\", session, send(\"I did not get what you want\"));\n        }\n      }\n    },\n  ]);\n\n  dialog.matches('WhatIs', [\n    function (session, args, next) {\n      var isCombinedIndex = {};\n      var oNewEntity;\n      // expecting entity A1\n      var message = session.message.text;\n      debuglog(\"WhatIs Entities\");\n      debuglog('raw: ' + JSON.stringify(args.entities), undefined, 2);\n      var categoryEntity = builder.EntityRecognizer.findEntity(args.entities, 'category');\n      var category = categoryEntity.entity;\n      var a1 = builder.EntityRecognizer.findEntity(args.entities, 'A1');\n\n      var cat = WhatIs.analyzeCategory(category, theModel.rules, message);\n      if (!cat) {\n        session.send('I don\\'t know anything about \"' + category + '\"');\n        // next();\n        return;\n      }\n      debuglog('category identified:' + cat);\n      const result = WhatIs.resolveCategory(cat, a1.entity,\n        theModel.rules, theModel.records);\n      debuglog('whatis result:' + JSON.stringify(result));\n      logQueryWhatIs(session, 'WhatIs', result);\n      var indis = WhatIs.isIndiscriminateResult(result);\n      if (indis) {\n        session.send(indis);\n        // next();\n        return;\n      }\n      if (!result || result.length === 0) {\n        dialoglog(\"WhatIs\",session,send('I don\\'t know anything about \"' + cat + \" (\" + category + ')\\\" in relation to \"' + a1.entity + '\"'));\n        // next();\n        return;\n      } else {\n        // debuglog('result : ' + JSON.stringify(result, undefined, 2));\n        debuglog('best result : ' + JSON.stringify(result[0] || {}, undefined, 2));\n        debuglog('top : ' + WhatIs.dumpWeightsTop(result, { top: 3 }));\n        // TODO cleansed sentence\n        dialoglog(\"WhatIs\",session,send('The ' + category + ' of ' + a1.entity + ' is ' + result[0].result + \"\\n\")); //  + JSON.stringify(result[0]));\n      }\n    }\n  ]);\n\n\n  dialog.matches('ListAll', [\n    function (session, args, next) {\n      var isCombinedIndex = {};\n      var oNewEntity;\n      // expecting entity A1\n      var message = session.message.text;\n      debuglog(\"Intent : ListAll\");\n      debuglog('raw: ' + JSON.stringify(args.entities), undefined, 2);\n      var categoryEntity = builder.EntityRecognizer.findEntity(args.entities, 'categories');\n      var category = categoryEntity.entity;\n      var a1 = builder.EntityRecognizer.findEntity(args.entities, 'insth');\n      if (category === \"categories\") {\n        // do we have a filter ?\n        var domain = undefined;\n        if(a1 && a1.entity) {\n          domain = ListAll.inferDomain(theModel, a1.entity);\n        }\n        if(!domain) {\n          var res = restrictLoggedOn(session, theModel.category).join(\";\\n\");\n          if(a1 && a1.entity) {\n            dialoglog(\"ListAll\",session,send(\"I did not infer a domain restriction from \\\"\" + a1.entity + \"\\\", all my categories are ...\\n\" + res));\n          } else {\n            dialoglog(\"ListAll\",session,send(\"my categories are ...\\n\" + res));\n          }\n          return;\n        } else {\n          var aRes = Model.getCategoriesForDomain(theModel, domain);\n           var res = restrictLoggedOn(session, aRes).join(\";\\n\");\n          dialoglog(\"ListAll\",session,send(\"my categories in domain \\\"\" + domain + \"\\\" are ...\\n\" + res));\n          return;\n        }\n      }\n      if (category === \"domains\") {\n        var res = restrictLoggedOn(session, theModel.domains).join(\";\\n\");\n        dialoglog(\"ListAll\",session, send(\"my domains are ...\\n\" + res));\n        return;\n      }\n      if (category === \"tools\") {\n        var res = restrictLoggedOn(session, theModel.tools).map(function (oTool) {\n          return oTool.name;\n        }).join(\";\\n\");\n        dialoglog(\"ListAll\", session,send(\"my tools are ...\\n\" + res));\n        return;\n      }\n      var cat = WhatIs.analyzeCategory(category, theModel.rules, message);\n      if (!cat) {\n        dialoglog(\"ListAll\",session,send('I don\\'t know anything about \"' + category + '\"'));\n        // next();\n        return;\n      }\n      debuglog('category identified:' + cat);\n      if (a1 && a1.entity) {\n        debuglog('got filter:' + a1.entity);\n        var categorySet = Model.getAllRecordCategoriesForTargetCategory(theModel, cat, true);\n        var result1 = ListAll.listAllWithContext(cat, a1.entity,\n          theModel.rules, theModel.records, categorySet);\n        // TODO classifying the string twice is a terrible waste\n        if (!result1.length) {\n          debuglog('going for having');\n          var categorySetFull = Model.getAllRecordCategoriesForTargetCategory(theModel, cat, false);\n          result1 = ListAll.listAllHavingContext(cat, a1.entity, theModel.rules,\n            theModel.records, categorySetFull);\n        }\n        debuglog('listall result:' + JSON.stringify(result1));\n        var joinresults = restrictLoggedOn(session, ListAll.joinResults(result1));\n        logQueryWhatIs(session, 'ListAll', result1);\n        if(joinresults.length ){\n          dialoglog(\"ListAll\",session,send(\"the \" + category + \" for \" + a1.entity + \" are ...\\n\" + joinresults.join(\";\\n\")));\n        } else {\n          dialoglog(\"ListAll\",session,send(\"i did not find any \" + category + \" for \" + a1.entity + \".\\n\" + joinresults.join(\";\\n\")));\n        }\n        return;\n      } else {\n        // no entity, e.g. list all countries\n        //\n        var categorySetFull = Model.getAllRecordCategoriesForTargetCategory(theModel, cat, false);\n        var result = ListAll.listAllHavingContext(cat, cat, theModel.rules, theModel.records, categorySetFull);\n        logQueryWhatIs(session, 'ListAll', result);\n        if (result.length) {\n          debuglog('listall result:' + JSON.stringify(result));\n          var joinresults = [];\n          debuglog(\"here is cat>\" + cat);\n          if(cat !== \"example question\") {\n            joinresults = restrictLoggedOn(session, ListAll.joinResults(result));\n          } else {\n            joinresults = ListAll.joinResults(result);\n          }\n          var response = \"the \" + category + \" are ...\\n\" + joinresults.join(\";\\n\");\n          dialoglog(\"ListAll\",session,send(response));\n          return;\n        } else {\n          var response = \"Found no data having \\\"\" + cat + \"\\\"\"\n          dialoglog(\"ListAll\",session,send(response));\n          return;\n        }\n      }\n    }\n  ]);\n\n\n  dialog.matches('ListAllBinOp', [\n    function (session, args, next) {\n      var isCombinedIndex = {};\n      var oNewEntity;\n      // expecting entity A1\n      var message = session.message.text;\n      debuglog(\"Intent : ListAllBinOp\");\n      debuglog('raw: ' + JSON.stringify(args.entities), undefined, 2);\n      var categoryEntity = builder.EntityRecognizer.findEntity(args.entities, 'category');\n      var categoryWord = categoryEntity.entity;\n      var opEntity = builder.EntityRecognizer.findEntity(args.entities,'operator');\n      var operatorWord = opEntity.entity;\n      // categorize as operator ?\n\n      var operator = WhatIs.analyzeOperator(operatorWord, theModel.rules, message);\n      var category = WhatIs.analyzeCategory(categoryWord, theModel.rules, message);\n      var operatorArgs = Model.getOperator(theModel, operator);\n      var a2 = builder.EntityRecognizer.findEntity(args.entities, 'A2');\n      if (!operator) {\n        var s = \"Unknown operator \" + operatorWord +\", this is a model bug, check operators.json and intents.json\";\n        dialoglog(\"ListAllBinOp\",session,send(\"ouch, this was in internal error. Recovering from a weird operator \\\"\"\n        + operatorWord + \"\\\"\\n\"));\n        throw new Error(s);\n      }\n      var fragment = a2 && a2.entity;\n      fragment = BreakDown.trimQuoted(BreakDown.trimQuotedSpaced(fragment));\n      debuglog(\"fragment after trimming \\\"\" + fragment + \"\\\"\");\n      if (categoryWord === \"categories\") {\n        // do we have a filter?\n        var aFilteredCategories = ListAll.filterStringListByOp(operatorArgs, fragment,  theModel.category);\n        res = restrictLoggedOn(session, aFilteredCategories).join(\";\\n\");\n        if (res.length) {\n          dialoglog(\"ListAllBinOp\",session,send(\"my categories \" + operator + ' \"' + fragment + '\" are ...\\n' + res));\n        } else {\n          dialoglog(\"ListAllBinOp\", session,send('I have no categories ' + operator + ' \"' + fragment + '\"'));\n        }\n          return;\n      }\n      else if (categoryWord === \"domains\") {\n        var aRes = ListAll.filterStringListByOp(operatorArgs, fragment,  theModel.domains);\n        res = restrictLoggedOn(session, aRes).join(\";\\n\");\n        if (res.length) {\n          dialoglog(\"ListAllBinOp\",session,send(\"my domains \" + operator + ' \"' + fragment + '\" are ...\\n' + res));\n        } else {\n          dialoglog(\"ListAllBinOp\", session,send('I have no domains ' + operator + ' \"' + fragment + '\"'));\n        }\n        return;\n      }\n      else if (categoryWord === \"tools\") {\n        var aRes = ListAll.filterStringListByOp(operatorArgs, fragment,  theModel.tools.map(\n        function(oTool) { return oTool.name; }));\n        var res = restrictLoggedOn(session, aRes).join(\";\\n\");\n        if(res.length) {\n          dialoglog(\"ListAllBinOp\", session,send(\"my tools \" + operator + ' \"' + fragment + '\" are ...\\n' + res));\n        } else {\n          dialoglog(\"ListAllBinOp\", session,send(\"I have no tools \" + operator + ' \"' + fragment + '\"'));\n        }\n        return;\n      }\n      else { // category is category\n        var cat = WhatIs.analyzeCategory(categoryWord, theModel.rules, message);\n        if (!cat) {\n          dialoglog(\"ListAllBinOp\",session,send('I don\\'t know anything about \"' + categoryWord + '\"'));\n          // next();\n          return;\n        }\n        debuglog('category identified:' + cat);\n        var aRes = ListAll.getCategoryOpFilterAsDistinctStrings(operatorArgs, fragment, category, theModel.records);\n        var res = restrictLoggedOn(session, aRes).join(\";\\n\");\n        var infixExplain = ''\n        if (!ListAll.likelyPluralDiff(category, categoryWord)) {\n          infixExplain = '(\"' + category + '\")';\n        }\n        if(res.length) {\n          dialoglog(\"ListAllBinOp\",session,send('my ' + categoryWord + infixExplain + ' ' + operator + ' \"' + fragment + '\" are ...\\n' + res));\n        } else {\n          dialoglog(\"ListAllBinOp\", session,send('I have no ' + categoryWord + infixExplain + ' ' + operator + ' \"' + fragment + '\"'));\n        }\n        return;\n      }\n    }\n  ]);\n\n  dialog.matches('TrainMe', [\n    function (session, args, next) {\n      var isCombinedIndex = {};\n      var oNewEntity;\n      // expecting entity A1\n      var message = session.message.text;\n      debuglog(\"Intent : Train\");\n      debuglog('raw: ' + JSON.stringify(args.entities), undefined, 2);\n      var categoryEntity = builder.EntityRecognizer.findEntity(args.entities, 'categories');\n      if (message.toLowerCase().indexOf(\"kronos\") >= 0 || message.toLowerCase().indexOf(\"klingon\") >= 0) {\n        dialoglog(\"TrainMe\",session,send(getRandomResult(aTrainNoKlingon)));\n        return;\n      }\n      var res = getRandomResult(aTrainReplies);\n      dialoglog(\"TrainMe\",session,send(res));\n    }\n  ]);\n\n\n\n  dialog.matches('Wrong', [\n    function (session, args, next) {\n        dialogLogger( {\n          session: session,\n          intent : \"Wrong\",\n          response : '<begin updown>'\n        });\n      session.beginDialog('/updown', session.userData.count);\n    },\n    function (session, results, next) {\n      var alarm = session.dialogData.alarm;\n      next();\n    },\n    function (session, results) {\n      session.send(getRandomResult(aBackFromTraining)); //  + JSON.stringify(results));\n      //session.send('end of wrong');\n    }\n  ]);\n\n  dialog.matches('Exit', [\n    function (session, args, next) {\n      debuglog('exit :');\n      debuglog('exit' + JSON.stringify(args.entities));\n        dialogLogger( {\n          session: session,\n          intent : \"Exit\",\n          response : 'you are in a logic loop'\n        });\n      session.send(\"you are in a logic loop \");\n    }\n  ]);\n  dialog.matches('Help', [\n    function (session, args, next) {\n      debuglog('help :');\n      debuglog('help');\n      session.send(\"I know about .... <categories>>\");\n    }\n  ]);\n\n  // Add intent handlers\n  dialog.matches('train', [\n    function (session, args, next) {\n      debuglog('train');\n      // Resolve and store any entities passed from LUIS.\n      var title = builder.EntityRecognizer.findEntity(args.entities, 'builtin.alarm.title');\n      var time = builder.EntityRecognizer.resolveTime(args.entities);\n      var alarm = session.dialogData.alarm = {\n        title: title ? title.entity : null,\n        timestamp: time ? time.getTime() : null\n      };\n      // Prompt for title\n        if (!alarm.title) {\n          dialogLogger( {\n          session: session,\n          intent : \"train\",\n          response : 'What fact would you like to train?'\n        });\n        builder.Prompts.text(session, 'What fact would you like to train?');\n      } else {\n        next();\n      }\n    },\n    function (session, results, next) {\n      var alarm = session.dialogData.alarm;\n      if (results.response) {\n        alarm.title = results.response;\n      }\n\n      // Prompt for time (title will be blank if the user said cancel)\n      if (alarm.title && !alarm.timestamp) {\n\n\n        builder.Prompts.time(session, 'What time would you like to set the alarm for?');\n      } else {\n        next();\n      }\n    },\n    function (session, results) {\n      var alarm = session.dialogData.alarm;\n      if (results.response) {\n        var time = builder.EntityRecognizer.resolveTime([results.response]);\n        alarm.timestamp = time ? time.getTime() : null;\n      }\n      // Set the alarm (if title or timestamp is blank the user said cancel)\n      if (alarm.title && alarm.timestamp) {\n        // Save address of who to notify and write to scheduler.\n        alarm.address = session.message.address;\n        //alarms[alarm.title] = alarm;\n\n        // Send confirmation to user\n        var date = new Date(alarm.timestamp);\n        var isAM = date.getHours() < 12;\n        session.send('Creating alarm named \"%s\" for %d/%d/%d %d:%02d%s',\n          alarm.title,\n          date.getMonth() + 1, date.getDate(), date.getFullYear(),\n          isAM ? date.getHours() : date.getHours() - 12, date.getMinutes(), isAM ? 'am' : 'pm');\n      } else {\n        session.send('Ok... no problem.');\n      }\n    }\n  ]);\n\n  dialog.onDefault(function (session) {\n    logQuery(session, \"onDefault\");\n    var eliza = getElizaBot(getConversationId(session));\n    var reply = eliza.transform(session.message.text);\n    dialoglog(\"eliza\",session,send(reply));\n    //new Eilzabot\n    //session.send(\"I do not understand this at all\");\n    //builder.DialogAction.send('I\\'m sorry I didn\\'t understand. I can only show start and ring');\n  });\n\n  /*\n  // Very simple alarm scheduler\n  var alarms = {};\n  setInterval(function () {\n    var now = new Date().getTime();\n    for (var key in alarms) {\n      var alarm = alarms[key];\n      if (now >= alarm.timestamp) {\n        var msg = new builder.Message()\n          .address(alarm.address)\n          .text('Here\\'s your \\'%s\\' alarm.', alarm.title);\n        bot.send(msg);\n        delete alarms[key];\n      }\n    }\n  }, 15000);\n  */\n}\n\nif (module) {\n  module.exports = {\n    SimpleUpDownRecognizer : SimpleUpDownRecognizer,\n    makeBot: makeBot\n  };\n}\n"],"sourceRoot":"ABC"}