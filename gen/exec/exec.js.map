{"version":3,"sources":["/projects/nodejs/botbuilder/fdevstart/src/../src/exec/exec.ts"],"names":[],"mappings":"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","file":"exec/exec.js","sourcesContent":["/**\r\n * Functionality to execute a certain response\r\n *\r\n * via a) commandline (e.g. browser startup)\r\n * @file\r\n */\r\n\r\nimport * as intf from 'constants';\r\n\r\nimport * as debug from 'debug';\r\n\r\nimport *  as IFMatch from '../match/ifmatch';\r\n\r\nconst debuglog = debug('dispatcher')\r\n\r\nimport { exec } from 'child_process';\r\n\r\n\r\nexport const enum EnumResponseCode {\r\n  NOMATCH = 0,\r\n  EXEC,\r\n  QUERY\r\n}\r\n\r\n/**\r\n * Defines the interface for an analysis\r\n * reponse\r\n */\r\n/*\r\nexport interface IResponse {\r\n  rating : number,\r\n  type : EnumResponseCode,\r\n  query : string,\r\n  context : { [key:string] :string},\r\n  text : string,\r\n  action : IAction,\r\n  prompts : { [key :string ] : { text : string, description : any }; }\r\n\r\n\r\nexport const enum EnumActionType {\r\n  STARTURL,\r\n  STARTCMDLINE\r\n}\r\n\r\nexport interface IAction {\r\n  data : any,\r\n  type : EnumActionType,\r\n  pattern : string,\r\n  concrete : string\r\n}\r\n}*/\r\n\r\n//var exec = require('child_process').exec\r\n\r\nfunction startBrowser (oUrlAction : IFMatch.IAction) {\r\n  var cmd =\r\n  '\"%ProgramFiles(x86)%\\\\Google\\\\Chrome\\\\Application\\\\chrome.exe\" --incognito -url \"' + oUrlAction.concrete + '\"'\r\n  exec(cmd, function (error, stdout, stderr) {\r\n    if (error) {\r\n      console.error(`exec error: ${error}`)\r\n      return\r\n    }\r\n    console.log(`stdout: ${stdout}`)\r\n    console.log(`stderr: ${stderr}`)\r\n  })\r\n}\r\n\r\nfunction startCommandLine (scmd : IFMatch.IAction) {\r\n  var cmd = scmd.concrete;\r\n  exec(cmd, function (error, stdout, stderr) {\r\n    if (error) {\r\n      console.error(`exec error: ${error}`)\r\n      return\r\n    }\r\n    console.log(`stdout: ${stdout}`)\r\n    console.log(`stderr: ${stderr}`)\r\n  })\r\n}\r\n\r\n\r\nexport function expandContextIntoAction (oResult : IFMatch.IResponse) {\r\n  var pattern = oResult.action.pattern\r\n  Object.keys(oResult.context).forEach(function (sKey) {\r\n    var regex = new RegExp('{' + sKey + '}', 'g')\r\n    pattern = pattern.replace(regex, oResult.context[sKey])\r\n    pattern = pattern.replace(regex, oResult.context[sKey])\r\n  })\r\n  oResult.action.concrete = pattern;\r\n  return pattern\r\n}\r\n\r\n/**\r\n * execute some starupt\r\n *\r\n */\r\nfunction executeStartup (oResult: IFMatch.IResponse, cb: (err : any, a : IFMatch.IResponse) => string) {\r\n  if (oResult.type !== IFMatch.EnumResponseCode.EXEC) {\r\n    return\r\n  }\r\n  var action = oResult.action;\r\n  if(oResult.action.type === IFMatch.EnumActionType.STARTURL) {\r\n    //var ptn = expandParametersInURL(oResult)\r\n    startBrowser(action)\r\n    return action.concrete\r\n  } else if(oResult.action.type === IFMatch.EnumActionType.STARTCMDLINE) {\r\n    startCommandLine(action);\r\n  } else {\r\n    var s = (\"Don't know how to start \" + oResult.type + '\\n for \"' + oResult.query + '\"')\r\n    console.error(s)\r\n    return s\r\n  }\r\n}\r\n\r\nmodule.exports = {\r\n  executeStartup: executeStartup\r\n}\r\n"],"sourceRoot":"ABC"}