{"version":3,"sources":["/projects/nodejs/botbuilder/fdevstart/src/../src/match/breakdown.ts"],"names":[],"mappings":"AAAA;;;;GAIG;;AAEH,IAAY,KAAK,WAAM,OAAO,CAAC,CAAA;AAC/B,IAAM,QAAQ,GAAG,KAAK,CAAC,YAAY,CAAC,CAAA;AAGpC,uBAA8B,OAAgB;IAC1C,OAAO,GAAG,OAAO,CAAC,OAAO,CAAC,MAAM,EAAC,EAAE,CAAC,CAAC;IACrC,OAAO,GAAG,OAAO,CAAC,OAAO,CAAC,MAAM,EAAC,EAAE,CAAC,CAAC;IACrC,OAAO,GAAG,OAAO,CAAC,OAAO,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC;IACzC,MAAM,CAAC,OAAO,CAAA;AAClB,CAAC;AALe,qBAAa,gBAK5B,CAAA;AACD;;;;GAIG;AACH,yBAAgC,OAAe;IAC3C,IAAI,CAAC,GAAG,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;IAC3B,IAAI,CAAC,GAAG,CAAC,CAAC;IACV,EAAE,CAAA,CAAC,CAAC,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC;QAChB,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC;IAChB,CAAC;IACD,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACjB,OAAM,CAAC,GAAG,CAAC,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC;QACrB,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACV,IAAI,EAAE,GAAG,CAAC,CAAC,GAAG,CAAC,UAAU,KAAK;YAC1B,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC;YAChC,IAAI,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;YAC3B,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC;YAChC,KAAK,CAAC,KAAK,CAAC,MAAM,GAAE,CAAC,CAAE,GAAG,KAAK,CAAC,KAAK,CAAC,MAAM,GAAC,CAAC,CAAE,GAAG,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;YAC9D,MAAM,CAAC,KAAK,CAAC;QACjB,CAAC,CAAC,CAAC;QACH,IAAI,EAAE,GAAI,CAAC,CAAC,GAAG,CAAC,UAAU,KAAK;YAC3B,QAAQ,CAAC,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC;YACxC,IAAI,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;YAC3B,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACjB,MAAM,CAAC,KAAK,CAAA;QAChB,CAAC,CAAC,CAAC;QACH,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC;QAC7B,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC;QAC7B,CAAC,GAAG,EAAE,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;IACtB,CAAC;IACD,MAAM,CAAC,CAAC,CAAC;AACb,CAAC;AA3Be,uBAAe,kBA2B9B,CAAA","file":"match/breakdown.js","sourcesContent":["/**\r\n * @file\r\n * @module jfseb.fdevstart.breakdown\r\n * @copyright (c) 2016 Gerd Forstmann\r\n */\r\n\r\nimport * as debug from 'debug';\r\nconst debuglog = debug('dispatcher')\r\n\r\n\r\nexport function cleanseString(sString : string) : string {\r\n    sString = sString.replace(/^\\s+/,'');\r\n    sString = sString.replace(/\\s+$/,'');\r\n    sString = sString.replace(/\\s\\s+/g, ' ');\r\n    return sString\r\n}\r\n/**\r\n *@param {string} sString , e.g. \"a b c\"\r\n *@return {Array<Array<String>>} broken down array, e.g.\r\n *[[\"a b c\"], [\"a\", \"b c\"], [\"a b\", \"c\"], ....[\"a\", \"b\", \"c\"]]\r\n */\r\nexport function breakdownString(sString: string) : Array<Array<String>> {\r\n    var u = sString.split(\" \");\r\n    var k = 0;\r\n    if(u.length === 0) {\r\n        return [[]];\r\n    }\r\n    var w = [[u[0]]];\r\n    while(k < u.length - 1) {\r\n        k = k + 1;\r\n        var r1 = w.map(function (entry) {\r\n            debuglog(JSON.stringify(entry));\r\n            var entry = entry.slice(0);\r\n            debuglog(JSON.stringify(entry));\r\n            entry[entry.length -1 ] = entry[entry.length-1 ] + \" \" + u[k];\r\n            return entry;\r\n        });\r\n        var r2 =  w.map(function (entry) {\r\n            debuglog(\"2 >\" + JSON.stringify(entry));\r\n            var entry = entry.slice(0);\r\n            entry.push(u[k]);\r\n            return entry\r\n        });\r\n        debuglog(JSON.stringify(r1));\r\n        debuglog(JSON.stringify(r2));\r\n        w = r1.concat(r2);\r\n    }\r\n    return w;\r\n}\r\n\r\nimport * as IMatch from './ifmatch'\r\n\r\n"],"sourceRoot":"ABC"}