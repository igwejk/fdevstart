{"version":3,"sources":["/projects/nodejs/botbuilder/fdevstart/src/../src/match/breakdown.ts"],"names":[],"mappings":"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","file":"match/breakdown.js","sourcesContent":["/**\r\n * @file\r\n * @module jfseb.fdevstart.breakdown\r\n * @copyright (c) 2016 Gerd Forstmann\r\n */\r\n\r\nimport * as debug from 'debug';\r\nconst debuglog = debug('dispatcher')\r\n\r\n\r\nexport function cleanseString(sString: string): string {\r\n    var len = 0;\r\n    while (len !== sString.length) {\r\n        len = sString.length;\r\n        sString = sString.replace(/\\s\\s+/g, ' ');\r\n        sString = sString.replace(/\\s\\s+/g, ' ');\r\n        sString = sString.replace(/^\\s+/, '');\r\n        sString = sString.replace(/\\s+$/, '');\r\n        sString = sString.replace(/^[,;.]+/, '');\r\n        sString = sString.replace(/[,;.]+$/, '');\r\n    }\r\n    return sString\r\n}\r\n\r\n\r\nconst regexpRemoveDouble = new RegExp(/^\\\"(\\\".*\\\")\\\"$/);\r\nconst striptail = new RegExp(/^\\\"([^\\\"]+)\"$/)\r\n\r\nexport function trimQuoted(sString: string): string {\r\n    var skipUntil = 0;\r\n    var stripped = sString;\r\n    var m = regexpRemoveDouble.exec(sString);\r\n    while (m) {\r\n        stripped = m[1];\r\n        m = regexpRemoveDouble.exec(stripped);\r\n    }\r\n    debuglog(\"stripped \" + stripped);\r\n    m = striptail.exec(stripped);\r\n    if (m) {\r\n        return m[1];\r\n    }\r\n    return cleanseString(sString);\r\n}\r\n\r\n\r\nexport function trimQuotedSpaced(sString: string): string {\r\n    var skipUntil = 0;\r\n    sString = sString.replace(/^\"\\s+/g, '\"');\r\n    sString = sString.replace(/\\s+\\\"$/g, '\"');\r\n    return sString;\r\n}\r\n\r\n\r\nexport function recombineQuoted(aArr: Array<string>): Array<string> {\r\n    var skipUntil = 0;\r\n    aArr = aArr.map(function (s, index) {\r\n        if (index < skipUntil) {\r\n            debuglog(\"skipping >\" + s + \"<\");\r\n            return undefined;\r\n        }\r\n        if (/^\"/.exec(s)) {\r\n            var i = index;\r\n            while (i < aArr.length && (!/\"$/.exec(aArr[i]) || (index === i && s === '\"'))) {\r\n                i = i + 1;\r\n            }\r\n            if (i === aArr.length) {\r\n                debuglog(\"Unterminated quoted string\");\r\n                return s;\r\n            } else {\r\n                skipUntil = i + 1;\r\n                var res = aArr.slice(index, i + 1).join(\" \");\r\n            }\r\n            return res;\r\n        }\r\n        return s;\r\n    }).filter(function (s) {\r\n        return s !== undefined;\r\n    }).map(function (s) {\r\n        return trimQuotedSpaced(s);\r\n    })\r\n    return aArr;\r\n}\r\n\r\nexport function isQuoted(sString) {\r\n    return !!/^\".*\"$/.exec(sString);\r\n}\r\n\r\nexport function countSpaces(sString: string) {\r\n    var r = 0;\r\n    for (var i = 0; i < sString.length; ++i) {\r\n        if (sString.charAt(i) === ' ') {\r\n            r = r + 1;\r\n        }\r\n    }\r\n    return r;\r\n}\r\n\r\n\r\n/**\r\n *@param {string} sString , e.g. \"a b c\"\r\n *@return {Array<Array<String>>} broken down array, e.g.\r\n *[[\"a b c\"], [\"a\", \"b c\"], [\"a b\", \"c\"], ....[\"a\", \"b\", \"c\"]]\r\n */\r\nexport function breakdownString(sString: string, spacesLimit?: number): Array<Array<String>> {\r\n    var rString = cleanseString(sString);\r\n    if (spacesLimit === undefined) {\r\n        spacesLimit = -1;\r\n    }\r\n    var u = rString.split(\" \");\r\n    u = recombineQuoted(u);\r\n    var k = 0;\r\n    if (u.length === 0) {\r\n        return [[]];\r\n    }\r\n    var w = [[u[0]]];\r\n    while (k < u.length - 1) {\r\n        k = k + 1;\r\n        var r1 = w.map(function (entry) {\r\n            debuglog(JSON.stringify(entry));\r\n            var entry = entry.slice(0);\r\n            debuglog(JSON.stringify(entry));\r\n            var preventry = entry[entry.length -1];\r\n            // do not combine quoted strings!\r\n            if (preventry === null) {\r\n                /* do nothing */ //return entry;\r\n            } else if (isQuoted(u[k]) || isQuoted(preventry)) {\r\n                entry[entry.length - 1] = null;\r\n            } else {\r\n                var combined = preventry + \" \" + u[k];\r\n                if (spacesLimit > 0 && countSpaces(combined) > spacesLimit) {\r\n                    combined = null;\r\n                }\r\n                entry[entry.length - 1] = combined;\r\n            }\r\n            return entry;\r\n        });\r\n        var r2 = w.map(function (entry) {\r\n            debuglog(\"2 >\" + JSON.stringify(entry));\r\n            var entry = entry.slice(0);\r\n            entry.push(u[k]);\r\n            return entry\r\n        });\r\n        debuglog(JSON.stringify(r1));\r\n        debuglog(JSON.stringify(r2));\r\n        w = r1.concat(r2);\r\n    }\r\n    w = w.filter(function(oMap) {\r\n        return oMap.every(function(sWord) {\r\n            return sWord !== null;\r\n        });\r\n    });\r\n    return w.map(function (oMap) {\r\n        return oMap.map(function (sWord) {\r\n            return trimQuoted(sWord);\r\n        });\r\n    });\r\n}\r\n\r\nimport * as IMatch from './ifmatch'\r\n\r\n"],"sourceRoot":"ABC"}