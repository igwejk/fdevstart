{"version":3,"sources":["/projects/nodejs/botbuilder/fdevstart/src/../src/match/inputFilter.ts"],"names":[],"mappings":"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","file":"match/inputFilter.js","sourcesContent":["/**\r\n * the input filter stage preprocesses a current context\r\n *\r\n * It a) combines multi-segment arguments into one context members\r\n * It b) attempts to augment the context by additional qualifications\r\n *           (Mid term generating Alternatives, e.g.\r\n *                 ClientSideTargetResolution -> unit test?\r\n *                 ClientSideTargetResolution -> source ?\r\n *           )\r\n *  Simple rules like  Intent\r\n *\r\n *\r\n * @module jfseb.fdevstart.inputFilter\r\n * @file inputFilter.ts\r\n * @copyright (c) 2016 Gerd Forstmann\r\n */\r\n/// <reference path=\"../../lib/node-4.d.ts\" />\r\nimport * as distance from '../utils/damerauLevenshtein';\r\n\r\n\r\nimport * as Logger from '../utils/logger'\r\n\r\nconst logger = Logger.logger('inputFilter');\r\n\r\nimport * as debug from 'debug';\r\n\r\nimport * as utils from '../utils/utils';\r\n\r\n\r\nimport * as Algol from './algol';\r\n\r\nimport * as IMatch from './ifmatch';\r\n\r\nimport * as breakdown from './breakdown';\r\n\r\nconst AnyObject = <any>Object;\r\n\r\nconst debuglog = debug('inputFilter')\r\n\r\nimport * as matchdata from './matchdata';\r\nvar oUnitTests = matchdata.oUnitTests\r\n\r\n/**\r\n * @param sText {string} the text to match to NavTargetResolution\r\n * @param sText2 {string} the query text, e.g. NavTarget\r\n *\r\n * @return the distance, note that is is *not* symmetric!\r\n */\r\nfunction calcDistance(sText1: string, sText2: string): number {\r\n  // console.log(\"length2\" + sText1 + \" - \" + sText2)\r\n  var a0 = distance.levenshtein(sText1.substring(0, sText2.length), sText2)\r\n  var a = distance.levenshtein(sText1.toLowerCase(), sText2)\r\n  return a0 * 500 / sText2.length + a\r\n}\r\n\r\nimport * as IFMatch from '../match/ifmatch';\r\n\r\ntype IRule = IFMatch.IRule\r\n\r\n\r\ninterface IMatchOptions {\r\n  matchothers?: boolean,\r\n  augment?: boolean,\r\n  override?: boolean\r\n}\r\n\r\ninterface IMatchCount {\r\n  equal: number\r\n  different: number\r\n  spuriousR: number\r\n  spuriousL: number\r\n}\r\n\r\ntype EnumRuleType = IFMatch.EnumRuleType\r\n\r\nconst levenCutoff = Algol.Cutoff_LevenShtein;\r\n\r\nexport function levenPenalty(i: number): number {\r\n  // 0-> 1\r\n  // 1 -> 0.1\r\n  // 150 ->  0.8\r\n  if (i === 0) {\r\n    return 1;\r\n  }\r\n  // reverse may be better than linear\r\n  return 1 + i * (0.8 - 1) / 150\r\n}\r\n\r\nfunction nonPrivateKeys(oA) {\r\n  return Object.keys(oA).filter(key => {\r\n    return key[0] !== '_';\r\n  });\r\n}\r\n\r\nexport function countAinB(oA, oB, fnCompare, aKeyIgnore?): number {\r\n  aKeyIgnore = Array.isArray(aKeyIgnore) ? aKeyIgnore :\r\n    typeof aKeyIgnore === \"string\" ? [aKeyIgnore] : [];\r\n  fnCompare = fnCompare || function () { return true; }\r\n  return nonPrivateKeys(oA).filter(function (key) {\r\n    return aKeyIgnore.indexOf(key) < 0;\r\n  }).\r\n    reduce(function (prev, key) {\r\n      if (Object.prototype.hasOwnProperty.call(oB, key)) {\r\n        prev = prev + (fnCompare(oA[key], oB[key], key) ? 1 : 0)\r\n      }\r\n      return prev\r\n    }, 0)\r\n}\r\n\r\nexport function spuriousAnotInB(oA, oB, aKeyIgnore?) {\r\n  aKeyIgnore = Array.isArray(aKeyIgnore) ? aKeyIgnore :\r\n    typeof aKeyIgnore === \"string\" ? [aKeyIgnore] : [];\r\n  return nonPrivateKeys(oA).filter(function (key) {\r\n    return aKeyIgnore.indexOf(key) < 0;\r\n  }).\r\n    reduce(function (prev, key) {\r\n      if (!Object.prototype.hasOwnProperty.call(oB, key)) {\r\n        prev = prev + 1\r\n      }\r\n      return prev\r\n    }, 0)\r\n}\r\n\r\nfunction lowerCase(o) {\r\n  if (typeof o === \"string\") {\r\n    return o.toLowerCase()\r\n  }\r\n  return o\r\n}\r\n\r\nexport function compareContext(oA, oB, aKeyIgnore?) {\r\n  var equal = countAinB(oA, oB, function (a, b) { return lowerCase(a) === lowerCase(b); }, aKeyIgnore);\r\n  var different = countAinB(oA, oB, function (a, b) { return lowerCase(a) !== lowerCase(b); }, aKeyIgnore);\r\n  var spuriousL = spuriousAnotInB(oA, oB, aKeyIgnore)\r\n  var spuriousR = spuriousAnotInB(oB, oA, aKeyIgnore)\r\n  return {\r\n    equal: equal,\r\n    different: different,\r\n    spuriousL: spuriousL,\r\n    spuriousR: spuriousR\r\n  }\r\n}\r\n\r\nfunction sortByRank(a: IFMatch.ICategorizedString, b: IFMatch.ICategorizedString): number {\r\n  var r =-((a._ranking || 1.0) - (b._ranking || 1.0));\r\n  if(r) {\r\n    return r;\r\n  }\r\n  if(a.category && b.category) {\r\n    r = a.category.localeCompare(b.category);\r\n    if (r) {\r\n      return r;\r\n    }\r\n  }\r\n  if(a.matchedString && b.matchedString) {\r\n    r = a.matchedString.localeCompare(b.matchedString);\r\n    if (r) {\r\n      return r;\r\n    }\r\n  }\r\n  return 0;\r\n}\r\n\r\n\r\nexport function categorizeString(string: string, exact: boolean, oRules: Array<IMatch.mRule>): Array<IFMatch.ICategorizedString> {\r\n  // simply apply all rules\r\n  debug(\"rules : \" + JSON.stringify(oRules));\r\n  var res: Array<IMatch.ICategorizedString> = []\r\n  oRules.forEach(function (oRule) {\r\n    debuglog('attempting to match rule ' + JSON.stringify(oRule) + \" to string \\\"\" + string + \"\\\"\");\r\n    switch (oRule.type) {\r\n      case IFMatch.EnumRuleType.WORD:\r\n        if (exact && oRule.word === string) {\r\n          res.push({\r\n            string: string,\r\n            matchedString: oRule.matchedString,\r\n            category: oRule.category,\r\n            _ranking: oRule._ranking || 1.0\r\n          })\r\n        }\r\n        if (!exact) {\r\n          var levenmatch = calcDistance(oRule.word, string)\r\n          if (levenmatch < levenCutoff) {\r\n            res.push({\r\n              string: string,\r\n              matchedString: oRule.word,\r\n              category: oRule.category,\r\n              _ranking: (oRule._ranking || 1.0) * levenPenalty(levenmatch),\r\n              levenmatch: levenmatch\r\n            })\r\n          }\r\n        }\r\n        break;\r\n      case IFMatch.EnumRuleType.REGEXP: {\r\n        debuglog(JSON.stringify(\" here regexp\" + JSON.stringify(oRule, undefined, 2)))\r\n        var m = oRule.regexp.exec(string)\r\n        if (m) {\r\n          res.push({\r\n            string: string,\r\n            matchedString: (oRule.matchIndex !== undefined && m[oRule.matchIndex]) || string,\r\n            category: oRule.category,\r\n            _ranking: oRule._ranking || 1.0\r\n          })\r\n        }\r\n      }\r\n        break;\r\n      default:\r\n        throw new Error(\"unknown type\" + JSON.stringify(oRule, undefined, 2))\r\n    }\r\n  });\r\n  res.sort(sortByRank);\r\n  return res;\r\n}\r\n/**\r\n *\r\n * Options may be {\r\n * matchothers : true,  => only rules where all others match are considered\r\n * augment : true,\r\n * override : true }  =>\r\n *\r\n */\r\nexport function matchWord(oRule: IRule, context: IFMatch.context, options?: IMatchOptions) {\r\n  if (context[oRule.key] === undefined) {\r\n    return undefined;\r\n  }\r\n  var s1 = context[oRule.key].toLowerCase()\r\n  var s2 = oRule.word.toLowerCase();\r\n  options = options || {}\r\n  var delta = compareContext(context, oRule.follows, oRule.key)\r\n  debuglog(JSON.stringify(delta));\r\n  debuglog(JSON.stringify(options));\r\n  if (options.matchothers && (delta.different > 0)) {\r\n    return undefined\r\n  }\r\n  var c: number = calcDistance(s2, s1);\r\n  debuglog(\" s1 <> s2 \" + s1 + \"<>\" + s2 + \"  =>: \" + c);\r\n  if (c < 150) {\r\n    var res = AnyObject.assign({}, oRule.follows) as any;\r\n    res = AnyObject.assign(res, context);\r\n    if (options.override) {\r\n      res = AnyObject.assign(res, oRule.follows);\r\n    }\r\n    // force key property\r\n    // console.log(' objectcategory', res['systemObjectCategory']);\r\n    res[oRule.key] = oRule.follows[oRule.key] || res[oRule.key];\r\n    res._weight = AnyObject.assign({}, res._weight);\r\n    res._weight[oRule.key] = c;\r\n    Object.freeze(res);\r\n    debuglog('Found one' + JSON.stringify(res, undefined, 2));\r\n    return res;\r\n  }\r\n  return undefined;\r\n}\r\n\r\nexport function extractArgsMap(match: Array<string>, argsMap: { [key: number]: string }): IFMatch.context {\r\n  var res = {} as IFMatch.context;\r\n  if (!argsMap) {\r\n    return res;\r\n  }\r\n  Object.keys(argsMap).forEach(function (iKey) {\r\n    var value = match[iKey]\r\n    var key = argsMap[iKey];\r\n    if ((typeof value === \"string\") && value.length > 0) {\r\n      res[key] = value\r\n    }\r\n  }\r\n  );\r\n  return res;\r\n}\r\n\r\nexport const RankWord = {\r\n  hasAbove: function (lst: Array<IFMatch.ICategorizedString>, border: number): boolean {\r\n    return !lst.every(function (oMember) {\r\n      return (oMember._ranking < border);\r\n    });\r\n  },\r\n\r\n  takeFirstN: function (lst: Array<IFMatch.ICategorizedString>, n: number): Array<IFMatch.ICategorizedString> {\r\n    return lst.filter(function (oMember, iIndex) {\r\n      var lastRanking = 1.0;\r\n      if ((iIndex < n) || oMember._ranking === lastRanking) {\r\n        lastRanking = oMember._ranking;\r\n        return true;\r\n      }\r\n      return false;\r\n    });\r\n  },\r\n  takeAbove: function (lst: Array<IFMatch.ICategorizedString>, border: number): Array<IFMatch.ICategorizedString> {\r\n    return lst.filter(function (oMember) {\r\n      return (oMember._ranking >= border);\r\n    });\r\n  }\r\n};\r\n\r\nexport function categorizeWordWithRankCutoff(sWordGroup: string, aRules: Array<IFMatch.mRule>): Array<IFMatch.ICategorizedString> {\r\n  var seenIt = categorizeString(sWordGroup, true, aRules);\r\n  if (RankWord.hasAbove(seenIt, 0.8)) {\r\n    seenIt = RankWord.takeAbove(seenIt, 0.8);\r\n  } else {\r\n    seenIt = categorizeString(sWordGroup, false, aRules);\r\n  }\r\n  seenIt = RankWord.takeFirstN(seenIt, Algol.Top_N_WordCategorizations);\r\n  return seenIt;\r\n}\r\n\r\n\r\nexport function filterRemovingUncategorizedSentence(oSentence : IFMatch.ICategorizedString[][]) : boolean {\r\n  return oSentence.every(function(oWordGroup) {\r\n      return (oWordGroup.length > 0);\r\n  });\r\n}\r\n\r\n\r\n\r\nexport function filterRemovingUncategorized(arr : IFMatch.ICategorizedString[][][]) : IFMatch.ICategorizedString[][][] {\r\n  return arr.filter(function(oSentence) {\r\n    return filterRemovingUncategorizedSentence(oSentence);\r\n   });\r\n}\r\n\r\n/**\r\n * Given a  string, break it down into components,\r\n * [['A', 'B'], ['A B']]\r\n *\r\n * then categorizeWords\r\n * returning\r\n *\r\n * [ [[ { category: 'systemId', word : 'A'},\r\n *      { category: 'otherthing', word : 'A'}\r\n *    ],\r\n *    // result of B\r\n *    [ { category: 'systemId', word : 'B'},\r\n *      { category: 'otherthing', word : 'A'}\r\n *      { category: 'anothertryp', word : 'B'}\r\n *    ]\r\n *   ],\r\n * ]]]\r\n *\r\n *\r\n *\r\n */\r\nexport function analyzeString(sString: string, aRules: Array<IMatch.mRule>) {\r\n  var cnt = 0;\r\n  var fac = 1;\r\n  var u = breakdown.breakdownString(sString);\r\n  debuglog(\"here breakdown\" + JSON.stringify(u));\r\n  var words = {} as { [key: string]: Array<IFMatch.ICategorizedString> };\r\n  var res = u.map(function (aArr) {\r\n    return aArr.map(function (sWordGroup: string) {\r\n      var seenIt = words[sWordGroup];\r\n      if (seenIt === undefined) {\r\n        seenIt = categorizeWordWithRankCutoff(sWordGroup, aRules);\r\n        if(seenIt === undefined)\r\n        words[sWordGroup] = seenIt;\r\n      }\r\n      cnt = cnt + seenIt.length;\r\n      fac = fac * seenIt.length;\r\n      if (!seenIt || seenIt.length === 0) {\r\n        logger(\"***WARNING: Did not find any categorization for \\\"\" + sWordGroup + \"\\\" in sentence \\\"\"\r\n        + sString + \"\\\"\");\r\n        if(sWordGroup.indexOf(\" \") <= 0) {\r\n          debuglog(\"***WARNING: Did not find any categorization for primitive (!)\" + sWordGroup);\r\n        }\r\n        debuglog(\"***WARNING: Did not find any categorization for \" + sWordGroup);\r\n        if(!seenIt) {\r\n          throw new Error(\"Expecting emtpy list, not undefined for \\\"\" + sWordGroup + \"\\\"\")\r\n        }\r\n        return [];\r\n      }\r\n      return seenIt;\r\n    });\r\n  });\r\n  res = filterRemovingUncategorized(res);\r\n  debuglog(\" sentences \" + u.length + \" matches \" + cnt + \" fac: \" + fac);\r\n  return res;\r\n}\r\n\r\n/*\r\n[ [a,b], [c,d]]\r\n\r\n00 a\r\n01 b\r\n10 c\r\n11 d\r\n12 c\r\n*/\r\n\r\n\r\nconst clone = utils.cloneDeep;\r\n\r\n// we can replicate the tail or the head,\r\n// we replicate the tail as it is smaller.\r\n\r\n// [a,b,c ]\r\n\r\nexport function expandMatchArr(deep: Array<Array<any>>): Array<Array<any>> {\r\n  var a = [];\r\n  var line = [];\r\n  debuglog(JSON.stringify(deep));\r\n  deep.forEach(function (uBreakDownLine, iIndex: number) {\r\n    line[iIndex] = [];\r\n    uBreakDownLine.forEach(function (aWordGroup, wgIndex: number) {\r\n      line[iIndex][wgIndex] = [];\r\n      aWordGroup.forEach(function (oWordVariant, iWVIndex: number) {\r\n        line[iIndex][wgIndex][iWVIndex] = oWordVariant;\r\n      });\r\n    });\r\n  })\r\n  debuglog(JSON.stringify(line));\r\n  var res = [];\r\n  var nvecs = [];\r\n  for (var i = 0; i < line.length; ++i) {\r\n    var vecs = [[]];\r\n    var nvecs = [];\r\n    var rvec = [];\r\n    for (var k = 0; k < line[i].length; ++k) { // wordgroup k\r\n      //vecs is the vector of all so far seen variants up to k wgs.\r\n      var nextBase = [];\r\n      for (var l = 0; l < line[i][k].length; ++l) { // for each variant\r\n        //debuglog(\"vecs now\" + JSON.stringify(vecs));\r\n        nvecs = []; //vecs.slice(); // copy the vec[i] base vector;\r\n        //debuglog(\"vecs copied now\" + JSON.stringify(nvecs));\r\n        for (var u = 0; u < vecs.length; ++u) {\r\n          nvecs[u] = vecs[u].slice(); //\r\n          // debuglog(\"copied vecs[\"+ u+\"]\" + JSON.stringify(vecs[u]));\r\n          nvecs[u].push(\r\n            clone(line[i][k][l])); // push the lth variant\r\n          // debuglog(\"now nvecs \" + nvecs.length + \" \" + JSON.stringify(nvecs));\r\n        }\r\n        //   debuglog(\" at     \" + k + \":\" + l + \" nextbase >\" + JSON.stringify(nextBase))\r\n        //   debuglog(\" append \" + k + \":\" + l + \" nvecs    >\" + JSON.stringify(nvecs))\r\n        nextBase = nextBase.concat(nvecs);\r\n        //   debuglog(\"  result \" + k + \":\" + l + \" nvecs    >\" + JSON.stringify(nextBase))\r\n      } //constru\r\n      //  debuglog(\"now at \" + k + \":\" + l + \" >\" + JSON.stringify(nextBase))\r\n      vecs = nextBase;\r\n    }\r\n    debuglog(\"APPENDING TO RES\" + i + \":\" + l + \" >\" + JSON.stringify(nextBase))\r\n    res = res.concat(vecs);\r\n  }\r\n  return res;\r\n}\r\n\r\n\r\n/**\r\n * Calculate a weight factor for a given distance and\r\n * category\r\n * @param {integer} dist distance in words\r\n * @param {string} category category to use\r\n * @returns {number} a distance factor >= 1\r\n *  1.0 for no effect\r\n */\r\nexport function reinforceDistWeight(dist: number, category: string): number {\r\n  var abs = Math.abs(dist);\r\n  return 1.0 + (Algol.aReinforceDistWeight[abs] || 0);\r\n}\r\n\r\n/**\r\n * Given a sentence, extact categories\r\n */\r\nexport function extractCategoryMap(oSentence: Array<IFMatch.IWord>): { [key: string]: Array<{ pos: number }> } {\r\n  var res = {};\r\n  debuglog('extractCategoryMap ' + JSON.stringify(oSentence));\r\n  oSentence.forEach(function (oWord, iIndex) {\r\n    if (oWord.category === IFMatch.CAT_CATEGORY) {\r\n      res[oWord.matchedString] = res[oWord.matchedString] || [];\r\n      res[oWord.matchedString].push({ pos: iIndex });\r\n    }\r\n  });\r\n  utils.deepFreeze(res);\r\n  return res;\r\n}\r\n\r\nexport function reinForceSentence(oSentence) {\r\n  var oCategoryMap = extractCategoryMap(oSentence);\r\n  oSentence.forEach(function (oWord, iIndex) {\r\n    var m = oCategoryMap[oWord.category] || [];\r\n    m.forEach(function (oPosition: { pos: number }) {\r\n      oWord.reinforce = oWord.reinforce || 1;\r\n      var boost = reinforceDistWeight(iIndex - oPosition.pos, oWord.category);\r\n      oWord.reinforce *= boost;\r\n      oWord._ranking *= boost;\r\n    });\r\n  });\r\n  return oSentence;\r\n}\r\n\r\n\r\nimport * as Sentence from './sentence';\r\n\r\nexport function reinForce(aCategorizedArray) {\r\n  aCategorizedArray.forEach(function (oSentence) {\r\n    reinForceSentence(oSentence);\r\n  })\r\n  aCategorizedArray.sort(Sentence.cmpRankingProduct);\r\n  debuglog(\"after reinforce\" + aCategorizedArray.map(function (oSentence) {\r\n    return Sentence.rankingProduct(oSentence) + \":\" + JSON.stringify(oSentence);\r\n  }).join(\"\\n\"));\r\n  return aCategorizedArray;\r\n}\r\n\r\n\r\n/// below may no longer be used\r\n\r\nexport function matchRegExp(oRule: IRule, context: IFMatch.context, options?: IMatchOptions) {\r\n  if (context[oRule.key] === undefined) {\r\n    return undefined;\r\n  }\r\n  var sKey = oRule.key;\r\n  var s1 = context[oRule.key].toLowerCase()\r\n  var reg = oRule.regexp;\r\n\r\n  var m = reg.exec(s1);\r\n  debuglog(\"applying regexp: \" + s1 + \" \" + JSON.stringify(m));\r\n  if (!m) {\r\n    return undefined;\r\n  }\r\n  options = options || {}\r\n  var delta = compareContext(context, oRule.follows, oRule.key)\r\n  debuglog(JSON.stringify(delta));\r\n  debuglog(JSON.stringify(options));\r\n  if (options.matchothers && (delta.different > 0)) {\r\n    return undefined\r\n  }\r\n  var oExtractedContext = extractArgsMap(m, oRule.argsMap);\r\n  debuglog(\"extracted args \" + JSON.stringify(oRule.argsMap));\r\n  debuglog(\"match \" + JSON.stringify(m));\r\n\r\n  debuglog(\"extracted args \" + JSON.stringify(oExtractedContext));\r\n  var res = AnyObject.assign({}, oRule.follows) as any;\r\n  res = AnyObject.assign(res, oExtractedContext);\r\n  res = AnyObject.assign(res, context);\r\n  if (oExtractedContext[sKey] !== undefined) {\r\n    res[sKey] = oExtractedContext[sKey];\r\n  }\r\n  if (options.override) {\r\n    res = AnyObject.assign(res, oRule.follows);\r\n    res = AnyObject.assign(res, oExtractedContext)\r\n  }\r\n  Object.freeze(res);\r\n  debuglog('Found one' + JSON.stringify(res, undefined, 2));\r\n  return res;\r\n}\r\n\r\nexport function sortByWeight(sKey: string, oContextA: IFMatch.context, oContextB: IFMatch.context): number {\r\n  debuglog('sorting: ' + sKey + 'invoked with\\n 1:' + JSON.stringify(oContextA, undefined, 2) +\r\n    \" vs \\n 2:\" + JSON.stringify(oContextB, undefined, 2));\r\n  var rankingA: number = parseFloat(oContextA[\"_ranking\"] || \"1\");\r\n  var rankingB: number = parseFloat(oContextB[\"_ranking\"] || \"1\");\r\n  if (rankingA !== rankingB) {\r\n    debuglog(\" rankin delta\" + 100 * (rankingB - rankingA));\r\n    return 100 * (rankingB - rankingA)\r\n  }\r\n\r\n  var weightA = oContextA[\"_weight\"] && oContextA[\"_weight\"][sKey] || 0;\r\n  var weightB = oContextB[\"_weight\"] && oContextB[\"_weight\"][sKey] || 0;\r\n  return +(weightA - weightB);\r\n}\r\n\r\n\r\n// Word, Synonym, Regexp / ExtractionRule\r\n\r\nexport function augmentContext1(context: IFMatch.context, oRules: Array<IRule>, options: IMatchOptions): Array<IFMatch.context> {\r\n  var sKey = oRules[0].key;\r\n  // check that rule\r\n  if (debuglog.enabled) {\r\n    // check consistency\r\n    oRules.every(function (iRule) {\r\n      if (iRule.key !== sKey) {\r\n        throw new Error(\"Inhomogenous keys in rules, expected \" + sKey + \" was \" + JSON.stringify(iRule));\r\n      }\r\n      return true;\r\n    });\r\n  }\r\n\r\n  // look for rules which match\r\n  var res = oRules.map(function (oRule) {\r\n    // is this rule applicable\r\n    switch (oRule.type) {\r\n      case IFMatch.EnumRuleType.WORD:\r\n        return matchWord(oRule, context, options)\r\n      case IFMatch.EnumRuleType.REGEXP:\r\n        return matchRegExp(oRule, context, options);\r\n      //   case \"Extraction\":\r\n      //     return matchExtraction(oRule,context);\r\n    }\r\n    return undefined\r\n  }).filter(function (ores) {\r\n    return !!ores\r\n  }).sort(\r\n    sortByWeight.bind(this, sKey)\r\n    );\r\n  return res;\r\n  // Object.keys().forEach(function (sKey) {\r\n  // });\r\n}\r\n\r\nexport function augmentContext(context: IFMatch.context, aRules: Array<IRule>): Array<IFMatch.context> {\r\n\r\n  var options1: IMatchOptions = {\r\n    matchothers: true,\r\n    override: false\r\n  } as IMatchOptions;\r\n\r\n  var aRes = augmentContext1(context, aRules, options1)\r\n\r\n  if (aRes.length === 0) {\r\n    var options2: IMatchOptions = {\r\n      matchothers: false,\r\n      override: true\r\n    } as IMatchOptions;\r\n    aRes = augmentContext1(context, aRules, options2);\r\n  }\r\n  return aRes;\r\n}\r\n\r\nexport function insertOrdered(result: Array<IFMatch.context>, iInsertedMember: IFMatch.context, limit: number): Array<IFMatch.context> {\r\n  // TODO: use some weight\r\n  if (result.length < limit) {\r\n    result.push(iInsertedMember)\r\n  }\r\n  return result;\r\n}\r\n\r\n\r\nexport function takeTopN(arr: Array<Array<IFMatch.context>>): Array<IFMatch.context> {\r\n  var u = arr.filter(function (innerArr) { return innerArr.length > 0 })\r\n\r\n  var res = [];\r\n  // shift out the top ones\r\n  u = u.map(function (iArr) {\r\n    var top = iArr.shift();\r\n    res = insertOrdered(res, top, 5)\r\n    return iArr\r\n  }).filter(function (innerArr: Array<IFMatch.context>): boolean { return innerArr.length > 0 });\r\n  // as Array<Array<IFMatch.context>>\r\n  return res;\r\n}\r\n\r\nimport * as inputFilterRules from './inputFilterRules';\r\n\r\nvar rm;\r\n\r\nfunction getRMOnce() {\r\n  if (!rm) {\r\n    rm = inputFilterRules.getRuleMap()\r\n  }\r\n  return rm;\r\n}\r\n\r\nexport function applyRules(context: IFMatch.context): Array<IFMatch.context> {\r\n  var bestN: Array<IFMatch.context> = [context];\r\n  inputFilterRules.oKeyOrder.forEach(function (sKey: string) {\r\n    var bestNext: Array<Array<IFMatch.context>> = [];\r\n    bestN.forEach(function (oContext: IFMatch.context) {\r\n      if (oContext[sKey]) {\r\n        debuglog('** applying rules for ' + sKey)\r\n        var res = augmentContext(oContext, getRMOnce()[sKey] || [])\r\n        debuglog('** result for ' + sKey + ' = ' + JSON.stringify(res, undefined, 2))\r\n        bestNext.push(res || [])\r\n      } else {\r\n        // rule not relevant\r\n        bestNext.push([oContext]);\r\n      }\r\n    })\r\n    bestN = takeTopN(bestNext);\r\n  });\r\n  return bestN\r\n}\r\n\r\n\r\nexport function applyRulesPickFirst(context: IFMatch.context): IFMatch.context {\r\n  var r = applyRules(context);\r\n  return r && r[0];\r\n}\r\n\r\n/**\r\n * Decide whether to requery for a contet\r\n */\r\nexport function decideOnReQuery(context: IFMatch.context): Array<IFMatch.context> {\r\n  return []\r\n}\r\n"],"sourceRoot":"ABC"}