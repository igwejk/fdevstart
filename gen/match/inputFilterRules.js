"use strict";

var inputFilter = require('./inputFilter');
exports.oKeyOrder = ["systemObjectCategory", "systemId", "systemObjectId"];
var systemObjectCategory = [{
    type: 0 /* WORD */
    , key: "systemObjectCategory",
    word: "unit test",
    follows: {
        systemObjectCategory: "unit test"
    }
}, {
    type: 0 /* WORD */
    , key: "systemObjectCategory",
    word: "unit",
    follows: {
        systemObjectCategory: "unit test"
    }
}];
var systemObjectCategory2 = [["unit test", "unit"], ["wiki", "web page"], ["fiori catalog", "flp catalog", "catalog"], ["fiori group", "flp group", "group"], ["flp", "fiori launchpad", "lauchpage", "launchpad"]].map(function (aArr) {
    // console.log(JSON.stringify(aArr));
    var bestSynonym = aArr[0];
    return aArr.map(function (sEntry) {
        return {
            type: 0 /* WORD */
            , key: "systemObjectCategory",
            word: sEntry,
            follows: {
                systemObjectCategory: bestSynonym
            }
        };
    });
});
systemObjectCategory2 = systemObjectCategory2.reduce(function (a, b) {
    return a.concat(b);
}, []);
var systemObjectCategory = systemObjectCategory.concat(systemObjectCategory2);
exports.oRuleMap = {
    "systemObjectCategory": systemObjectCategory,
    "systemId": [{
        regexp: /^([a-z0-9_]{3,3})CLNT(\d{3,3})$/i,
        key: 'systemId',
        argsMap: {
            1: 'systemId',
            2: 'client'
        },
        type: 1 /* REGEXP */
        , follows: {}
    }, {
        regexp: /^([a-z0-9_]{3,3})/i,
        key: 'systemId',
        argsMap: {
            1: 'systemId'
        },
        type: 1 /* REGEXP */
        , follows: {}
    }]
};
var UnitTestList = [
// alphabetic order please
'test-resources/sap/ushell/qunit/adapters/cdm/ClientSideTargetResolutionAdapter.qunit.html', 'test-resources/sap/ushell/qunit/adapters/cdm/CommonDataModelAdapter.qunit.html', 'test-resources/sap/ushell/qunit/adapters/cdm/LaunchPageAdapter.qunit.html', 'test-resources/sap/ushell/qunit/adapters/local/AppStateAdapter.qunit.html', 'test-resources/sap/ushell/qunit/adapters/local/ClientSideTargetResolutionAdapter.qunit.html', 'test-resources/sap/ushell/qunit/adapters/local/ContainerAdapter.qunit.html', 'test-resources/sap/ushell/qunit/adapters/local/EndUserFeedbackAdapter.qunit.html', 'test-resources/sap/ushell/qunit/adapters/local/NavTargetResolutionAdapter.qunit.html', 'test-resources/sap/ushell/qunit/adapters/local/PersonalizationAdapter.qunit.html', 'test-resources/sap/ushell/qunit/adapters/local/SupportTicketAdapterTest.qunit.html', 'test-resources/sap/ushell/qunit/adapters/local/UserDefaultParameterPersistenceAdapter.qunit.html', 'test-resources/sap/ushell/qunit/adapters/local/UserInfoAdapter.qunit.html', 'test-resources/sap/ushell/qunit/bootstrap/sandbox.qunit.html', 'test-resources/sap/ushell/qunit/CanvasShapesManager.qunit.html', 'test-resources/sap/ushell/qunit/components/container/ApplicationContainer.qunit.html', 'test-resources/sap/ushell/qunit/components/factsheet/annotation/ODataURLTemplating.qunit.html', 'test-resources/sap/ushell/qunit/components/flp/ComponentKeysHandler.qunit.html', 'test-resources/sap/ushell/qunit/components/flp/FlpApp.qunit.html', 'test-resources/sap/ushell/qunit/components/flp/launchpad/appfinder/EasyAccess.qunit.html', 'test-resources/sap/ushell/qunit/components/flp/launchpad/DashboardManager.qunit.html', 'test-resources/sap/ushell/qunit/components/flp/launchpad/PagingManager.qunit.html', 'test-resources/sap/ushell/qunit/components/flp/launchpad/appfinder/AppFinder.qunit.html', 'test-resources/sap/ushell/qunit/components/flp/launchpad/appfinder/GroupListPopover.qunit.html', 'test-resources/sap/ushell/qunit/components/flp/launchpad/appfinder/HierarchyApps.qunit.html', 'test-resources/sap/ushell/qunit/components/flp/launchpad/appfinder/HierarchyFolders.qunit.html', 'test-resources/sap/ushell/qunit/renderers/fiori2/userPreferences/LanguageRegionSelector.qunit.html', 'test-resources/sap/ushell/qunit/components/flp/launchpad/dashboard/DashboardContent.qunit.html', 'test-resources/sap/ushell/qunit/components/flp/launchpad/dashboard/DashboardUIActions.qunit.html', 'test-resources/sap/ushell/qunit/components/flp/settings/FlpSettings.qunit.html', 'test-resources/sap/ushell/qunit/components/tiles/applauncher/StaticTile.qunit.html', 'test-resources/sap/ushell/qunit/components/tiles/applauncherdynamic/DynamicTile.qunit.html', 'test-resources/sap/ushell/qunit/components/tiles/cdm/applauncher/StaticTile.qunit.html', 'test-resources/sap/ushell/qunit/components/tiles/cdm/applauncherdynamic/DynamicTile.qunit.html', 'test-resources/sap/ushell/qunit/components/tiles/utils.qunit.html', 'test-resources/sap/ushell/qunit/components/tiles/utilsRT.qunit.html', 'test-resources/sap/ushell/qunit/components/userActivity/userActivityLog.qunit.html',
// "test-resources/sap/ushell/qunit/demoapps/UserDefaultPluginSample/UserDefaultPluginSample.qunit.html", // Currently not run inside the QUnit Test Loader for ushell-lib
'test-resources/sap/ushell/qunit/FLPAnalytics.qunit.html', 'test-resources/sap/ushell/qunit/Layout.qunit.html', 'test-resources/sap/ushell/qunit/renderers/fiori2/AccessKeysHandler.qunit.html', 'test-resources/sap/ushell/qunit/renderers/fiori2/DefaultParameters/DefaultParameters.qunit.html', 'test-resources/sap/ushell/qunit/renderers/fiori2/Lifecycle.qunit.html', 'test-resources/sap/ushell/qunit/renderers/fiori2/meArea/MeArea.qunit.html', 'test-resources/sap/ushell/qunit/renderers/fiori2/meArea/UserSettings.qunit.html', 'test-resources/sap/ushell/qunit/renderers/fiori2/notifications/Notifications.qunit.html', 'test-resources/sap/ushell/qunit/renderers/fiori2/notifications/Settings.qunit.html', 'test-resources/sap/ushell/qunit/renderers/fiori2/Renderer.qunit.html', 'test-resources/sap/ushell/qunit/renderers/fiori2/RendererExtensions.qunit.html', 'test-resources/sap/ushell/qunit/renderers/fiori2/Shell.qunit.html', 'test-resources/sap/ushell/qunit/renderers/fiori2/UIActions.qunit.html', 'test-resources/sap/ushell/qunit/services/AppConfiguration.qunit.html', 'test-resources/sap/ushell/qunit/services/AppContext.qunit.html', 'test-resources/sap/ushell/qunit/services/AppLifeCycle.qunit.html', 'test-resources/sap/ushell/qunit/services/AppState.qunit.html', 'test-resources/sap/ushell/qunit/services/Bookmark.qunit.html', 'test-resources/sap/ushell/qunit/services/ClientSideTargetResolution.qunit.html', 'test-resources/sap/ushell/qunit/services/CommonDataModel.qunit.html', 'test-resources/sap/ushell/qunit/services/CommonDataModel/PersonalizationProcessor.qunit.html', 'test-resources/sap/ushell/qunit/services/CommonDataModel/PersonalizationProcessorCDMBlackbox.qunit.html', 'test-resources/sap/ushell/qunit/services/Container.qunit.html', 'test-resources/sap/ushell/qunit/services/CrossApplicationNavigation.qunit.html', 'test-resources/sap/ushell/qunit/services/EndUserFeedback.qunit.html', 'test-resources/sap/ushell/qunit/services/LaunchPage.qunit.html', 'test-resources/sap/ushell/qunit/services/Message.qunit.html', 'test-resources/sap/ushell/qunit/services/NavTargetResolution.qunit.html', 'test-resources/sap/ushell/qunit/services/NavTargetResolutionCDMBlackbox.qunit.html', 'test-resources/sap/ushell/qunit/services/Notifications.qunit.html', 'test-resources/sap/ushell/qunit/services/Personalization.qunit.html', 'test-resources/sap/ushell/qunit/services/PluginManager.qunit.html', 'test-resources/sap/ushell/qunit/services/ReferenceResolver.qunit.html', 'test-resources/sap/ushell/qunit/services/ShellNavigation.History.qunit.html', 'test-resources/sap/ushell/qunit/services/ShellNavigation.qunit.html', 'test-resources/sap/ushell/qunit/services/SupportTicket.qunit.html', 'test-resources/sap/ushell/qunit/services/URLParsing.qunit.html', 'test-resources/sap/ushell/qunit/services/URLShortening.qunit.html', 'test-resources/sap/ushell/qunit/services/Ui5ComponentLoader.qunit.html', 'test-resources/sap/ushell/qunit/services/UsageAnalytics.qunit.html', 'test-resources/sap/ushell/qunit/services/UserDefaultParameterPersistence.qunit.html', 'test-resources/sap/ushell/qunit/services/UserDefaultParameters.qunit.html', 'test-resources/sap/ushell/qunit/services/UserInfo.qunit.html', 'test-resources/sap/ushell/qunit/services/UserRecents.qunit.html', 'test-resources/sap/ushell/qunit/services/SmartNavigation.qunit.html', 'test-resources/sap/ushell/qunit/System.qunit.html', 'test-resources/sap/ushell/qunit/ui/footerbar/AboutButton.qunit.html', 'test-resources/sap/ushell/qunit/ui/footerbar/AddBookmarkButton.qunit.html', 'test-resources/sap/ushell/qunit/ui/footerbar/ContactSupportButton.qunit.html', 'test-resources/sap/ushell/qunit/ui/footerbar/EndUserFeedback.qunit.html', 'test-resources/sap/ushell/qunit/ui/footerbar/JamDiscussButton.qunit.html', 'test-resources/sap/ushell/qunit/ui/footerbar/JamShareButton.qunit.html', 'test-resources/sap/ushell/qunit/ui/footerbar/LogoutButton.qunit.html', 'test-resources/sap/ushell/qunit/ui/footerbar/SettingsButton.qunit.html', 'test-resources/sap/ushell/qunit/ui/footerbar/UserPreferencesButton.qunit.html', 'test-resources/sap/ushell/qunit/ui/launchpad/AccessibilityCustomData.qunit.html', 'test-resources/sap/ushell/qunit/ui/launchpad/ActionItem.qunit.html', 'test-resources/sap/ushell/qunit/ui/launchpad/AnchorItem.qunit.html', 'test-resources/sap/ushell/qunit/ui/launchpad/AnchorNavigationBar.qunit.html', 'test-resources/sap/ushell/qunit/ui/launchpad/EmbeddedSupportErrorMessage.qunit.html', 'test-resources/sap/ushell/qunit/ui/launchpad/Fiori2LoadingDialog.qunit.html', 'test-resources/sap/ushell/qunit/ui/launchpad/GroupListItem.qunit.html', 'test-resources/sap/ushell/qunit/ui/launchpad/LinkTileWrapper.qunit.html', 'test-resources/sap/ushell/qunit/ui/launchpad/LoadingDialog.qunit.html', 'test-resources/sap/ushell/qunit/ui/launchpad/TileContainer.qunit.html', 'test-resources/sap/ushell/qunit/ui/launchpad/ViewPortContainer.qunit.html', 'test-resources/sap/ushell/qunit/ui/shell/FloatingContainer.qunit.html', 'test-resources/sap/ushell/qunit/ui/shell/RightFloatingContainer.qunit.html', 'test-resources/sap/ushell/qunit/ui/shell/ShellAppTitle.qunit.html', 'test-resources/sap/ushell/qunit/ui/shell/ShellLayout.qunit.html', 'test-resources/sap/ushell/qunit/ui/shell/ShellTitle.qunit.html', 'test-resources/sap/ushell/qunit/ui/shell/SplitContainer.qunit.html', 'test-resources/sap/ushell/qunit/ui/tile/DynamicTile.qunit.html', 'test-resources/sap/ushell/qunit/ui/tile/ImageTile.qunit.html', 'test-resources/sap/ushell/qunit/ui/tile/StaticTile.qunit.html', 'test-resources/sap/ushell/qunit/ui/tile/TileBase.qunit.html', 'test-resources/sap/ushell/qunit/ui5service/ShellUIService.qunit.html'];
var systemObjectId = UnitTestList.map(function (sEntry) {
    var sString = sEntry.match('/([^/]*).qunit.html')[1];
    return {
        key: "systemObjectId",
        word: sString,
        type: 0 /* WORD */
        , follows: {
            systemObjectCategory: "unit test",
            systemObjectId: sString
        }
    };
}); // map
var systemObjectId2 = [
// wiki aliases, this is an old legacy foramt
{
    key: 'Support page',
    res: 'CA-UI2-INT-FE support'
}, { key: 'FCC ABAP Alignment' }, { key: 'UI2 test links' }, { key: 'Support schedule', res: 'TIP Core UI Integration support' }, { key: 'UII Support schedule', res: 'TIP Core UI Integration support' }, {
    key: 'UI2 Support page',
    res: 'CA-UI2-INT-FE support'
}, {
    key: 'Backend Sprint Reviews',
    res: 'Backend Sprint Review'
}, {
    key: 'UI5 patch schedule',
    res: 'UI5 UI2 Patch plan'
}].map(function (oEntry) {
    return {
        word: oEntry.key,
        key: "systemObjectId",
        type: 0 /* WORD */
        , follows: {
            sytemObjectCategory: "wiki",
            systemObjectId: oEntry.res || oEntry.key
        }
    };
}); // map
systemObjectId = systemObjectId.concat(systemObjectId2);
systemObjectId = systemObjectId.concat([{
    type: 1 /* REGEXP */
    , key: "systemObjectId",
    regexp: /\S+/i,
    follows: {
        _ranking: 0.9
    }
}]);
exports.oRuleMap["systemObjectId"] = systemObjectId;
exports.oRuleMap = exports.oRuleMap;
//# sourceMappingURL=data:application/json;base64,
