{"version":3,"sources":["/projects/nodejs/botbuilder/fdevstart/src/../src/match/whatis.ts"],"names":[],"mappings":"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","file":"match/whatis.js","sourcesContent":["/**\n *\n * @module jfseb.fdevstart.analyze\n * @file analyze.ts\n * @copyright (c) 2016 Gerd Forstmann\n */\n\n\nimport * as InputFilter from './inputFilter';\n\nimport * as debug from 'debug';\n\nconst debuglog = debug('whatis');\nconst debuglogV = debug('whatVis');\nconst perflog = debug('perf');\n\nimport * as utils from '../utils/utils';\n\nimport * as IMatch from './ifmatch';\n\nimport * as Toolmatcher from './toolmatcher';\n\nimport * as Sentence from './sentence';\n\nimport * as Word from './word';\n\nimport * as Algol from './algol';\n\n\nexport function cmpByResultThenRanking(a: IMatch.IWhatIsAnswer, b: IMatch.IWhatIsAnswer) {\n  var cmp = a.result.localeCompare(b.result);\n  if (cmp) {\n    return cmp;\n  }\n  return -(a._ranking - b._ranking);\n}\n\nfunction localeCompareArrs(aaresult: string[], bbresult: string[]): number {\n  var cmp = 0;\n  var blen = bbresult.length;\n  aaresult.every(function (a, index) {\n    if (blen <= index) {\n      cmp = -1;\n      return false;\n    }\n    cmp = a.localeCompare(bbresult[index]);\n    if (cmp) {\n      return false;\n    }\n    return true;\n  });\n  if (cmp) {\n    return cmp;\n  }\n  if (blen > aaresult.length) {\n    cmp = +1;\n  }\n  return 0;\n}\n\nexport function cmpByResultThenRankingTupel(aa: IMatch.IWhatIsTupelAnswer, bb: IMatch.IWhatIsTupelAnswer) {\n  var cmp = localeCompareArrs(aa.result, bb.result);\n  if (cmp) {\n    return cmp;\n  }\n  return -(aa._ranking - bb._ranking);\n}\n\n\n\nexport function cmpByRanking(a: IMatch.IWhatIsAnswer, b: IMatch.IWhatIsAnswer) {\n  var cmp = -(a._ranking - b._ranking);\n  if (cmp) {\n    return cmp;\n  }\n  cmp = a.result.localeCompare(b.result);\n  if (cmp) {\n    return cmp;\n  }\n\n  // are records different?\n  var keys = Object.keys(a.record).concat(Object.keys(b.record)).sort();\n  var res = keys.reduce(function (prev, sKey) {\n    if (prev) {\n      return prev;\n    }\n    if (b.record[sKey] !== a.record[sKey]) {\n      if (!b.record[sKey]) {\n        return -1;\n      }\n      if (!a.record[sKey]) {\n        return +1;\n      }\n      return a.record[sKey].localeCompare(b.record[sKey]);\n    }\n    return 0;\n  }, 0);\n  return res;\n}\n\n\n\nexport function cmpByRankingTupel(a: IMatch.IWhatIsTupelAnswer, b: IMatch.IWhatIsTupelAnswer) {\n  var cmp = -(a._ranking - b._ranking);\n  if (cmp) {\n    return cmp;\n  }\n  cmp = localeCompareArrs(a.result, b.result);\n  if (cmp) {\n    return cmp;\n  }\n  // are records different?\n  var keys = Object.keys(a.record).concat(Object.keys(b.record)).sort();\n  var res = keys.reduce(function (prev, sKey) {\n    if (prev) {\n      return prev;\n    }\n    if (b.record[sKey] !== a.record[sKey]) {\n      if (!b.record[sKey]) {\n        return -1;\n      }\n      if (!a.record[sKey]) {\n        return +1;\n      }\n      return a.record[sKey].localeCompare(b.record[sKey]);\n    }\n    return 0;\n  }, 0);\n  return res;\n}\n\n\n\nexport function dumpNice(answer: IMatch.IWhatIsAnswer) {\n  var result = {\n    s: \"\",\n    push: function (s) { this.s = this.s + s; }\n  };\n  var s =\n    `**Result for category: ${answer.category} is ${answer.result}\n rank: ${answer._ranking}\n`;\n  result.push(s);\n  Object.keys(answer.record).forEach(function (sRequires, index) {\n    if (sRequires.charAt(0) !== '_') {\n      result.push(`record: ${sRequires} -> ${answer.record[sRequires]}`);\n    }\n    result.push('\\n');\n  });\n  var oSentence = answer.sentence;\n  oSentence.forEach(function (oWord, index) {\n    var sWord = `[${index}] : ${oWord.category} \"${oWord.string}\" => \"${oWord.matchedString}\"`\n    result.push(sWord + \"\\n\");\n  })\n  result.push(\".\\n\");\n  return result.s;\n}\nexport function dumpNiceTupel(answer: IMatch.IWhatIsTupelAnswer) {\n  var result = {\n    s: \"\",\n    push: function (s) { this.s = this.s + s; }\n  };\n  var s =\n    `**Result for categories: ${answer.categories.join(\";\")} is ${answer.result}\n rank: ${answer._ranking}\n`;\n  result.push(s);\n  Object.keys(answer.record).forEach(function (sRequires, index) {\n    if (sRequires.charAt(0) !== '_') {\n      result.push(`record: ${sRequires} -> ${answer.record[sRequires]}`);\n    }\n    result.push('\\n');\n  });\n  var oSentence = answer.sentence;\n  oSentence.forEach(function (oWord, index) {\n    var sWord = `[${index}] : ${oWord.category} \"${oWord.string}\" => \"${oWord.matchedString}\"`\n    result.push(sWord + \"\\n\");\n  })\n  result.push(\".\\n\");\n  return result.s;\n}\n\n\nexport function dumpWeightsTop(toolmatches: Array<IMatch.IWhatIsAnswer>, options: any) {\n  var s = '';\n  toolmatches.forEach(function (oMatch, index) {\n    if (index < options.top) {\n      s = s + \"WhatIsAnswer[\" + index + \"]...\\n\";\n      s = s + dumpNice(oMatch);\n    }\n  });\n  return s;\n}\n\nexport function filterRetainTopRankedResult(res: IMatch.IProcessedWhatIsAnswers): IMatch.IProcessedWhatIsAnswers {\n  var result = res.answers.filter(function (iRes, index) {\n    if (debuglog.enabled) {\n      debuglog('retain topRanked: ' + index + ' ' + JSON.stringify(iRes));\n    }\n    if (iRes.result === (res.answers[index - 1] && res.answers[index - 1].result)) {\n      debuglog('skip');\n      return false;\n    }\n    return true;\n  });\n  result.sort(cmpByRanking);\n  var a =  Object.assign({ answers : result },res, {answers: result});\n  a.answers = result;\n  return a;\n}\n\nexport function filterRetainTopRankedResultTupel(res: IMatch.IProcessedWhatIsTupelAnswers): IMatch.IProcessedWhatIsTupelAnswers {\n  var result = res.tupelanswers.filter(function (iRes, index) {\n    if (debuglog.enabled) {\n      debuglog(' retain tupel ' + index + ' ' + JSON.stringify(iRes));\n    }\n    if (iRes.result === (res[index - 1] && res[index - 1].result)) {\n      debuglog('skip');\n      return false;\n    }\n    return true;\n  });\n  result.sort(cmpByRankingTupel);\n  return Object.assign({ tupelanswers : result },res);\n}\n\n\nimport * as Match from './match';\n\nexport function calcRanking(matched: { [key: string]: IMatch.IWord },\n  mismatched: { [key: string]: IMatch.IWord }, relevantCount: number): number {\n\n  var lenMatched = Object.keys(matched).length;\n  var factor = Match.calcRankingProduct(matched);\n  factor *= Math.pow(1.5, lenMatched);\n\n  var lenMisMatched = Object.keys(mismatched).length;\n  var factor2 = Match.calcRankingProduct(mismatched);\n  factor2 *= Math.pow(0.4, lenMisMatched);\n\n  return Math.pow(factor2 * factor, 1 / (lenMisMatched + lenMatched));\n}\n\nexport function calcRankingSimple(matched: number,\n  mismatched: number, nouse: number,\n  relevantCount: number): number {\n  // 2 : 0\n  // 1 : 0\n  var factor = matched * Math.pow(1.5, matched) * Math.pow(1.5, matched);\n  var factor2 = Math.pow(0.4, mismatched);\n  var factor3 = Math.pow(0.4, nouse);\n  return Math.pow(factor2 * factor * factor3, 1 / (mismatched + matched + nouse));\n}\n\nexport function calcRankingHavingCategory(matched: { [key: string]: IMatch.IWord },\n  hasCategory: { [key: string]: number },\n  mismatched: { [key: string]: IMatch.IWord }, relevantCount: number): number {\n\n\n  var lenMatched = Object.keys(matched).length;\n  var factor = Match.calcRankingProduct(matched);\n  factor *= Math.pow(1.5, lenMatched);\n\n  var lenHasCategory = Object.keys(hasCategory).length;\n  var factorH = Math.pow(1.1, lenHasCategory);\n\n  var lenMisMatched = Object.keys(mismatched).length;\n  var factor2 = Match.calcRankingProduct(mismatched);\n  factor2 *= Math.pow(0.4, lenMisMatched);\n\n  return Math.pow(factor2 * factorH * factor, 1 / (lenMisMatched + lenHasCategory + lenMatched));\n}\n\n/**\n * list all top level rankings\n */\nexport function matchRecordsHavingContext(\n  pSentences: IMatch.IProcessedSentences, category: string, records: Array<IMatch.IRecord>,\n  categorySet: { [key: string]: boolean })\n  : IMatch.IProcessedWhatIsAnswers {\n\n  //debuglog(JSON.stringify(records, undefined, 2));\n  var relevantRecords = records.filter(function (record: IMatch.IRecord) {\n    return (record[category] !== undefined) && (record[category] !== null);\n  });\n  var res = [];\n  debuglog(\"MatchRecordsHavingContext : relevant records nr:\" + relevantRecords.length);\n  debuglog(debuglog.enabled ? (\"sentences are : \" + JSON.stringify(pSentences, undefined, 2)) : \"-\");\n  debuglog(debuglog.enabled ? (\"category \" + category + \" and categoryset is: \" + JSON.stringify(categorySet, undefined, 2)) : \"-\");\n  if (process.env.ABOT_FAST && categorySet) {\n    // we are only interested in categories present in records for domains which contain the category\n    // var categoryset = Model.calculateRelevantRecordCategories(theModel,category);\n    //knowing the target\n    perflog(\"got categoryset with \" + Object.keys(categorySet).length);\n    var fl = 0;\n    var lf = 0;\n    var aSimplifiedSentences = pSentences.sentences.map(function (oSentence) {\n      var fWords = oSentence.filter(function (oWord) {\n        return !Word.Word.isFiller(oWord);\n      });\n      var rWords = oSentence.filter(function (oWord) {\n        return !!categorySet[oWord.category] || Word.Word.isCategory(oWord);\n      });\n      fl = fl + oSentence.length;\n      lf = lf + rWords.length;\n      return {\n        oSentence: oSentence,\n        cntRelevantWords: rWords.length, // not a filler  // to be compatible it would be fWords\n        rWords: rWords\n      };\n    });\n    Object.freeze(aSimplifiedSentences);\n    debuglog(\"post simplify (r=\" + relevantRecords.length + \" s=\" + pSentences.sentences.length + \" fl \" + fl + \"->\" + lf + \")\");\n    perflog(\"post simplify (r=\" + relevantRecords.length + \" s=\" + pSentences.sentences.length + \" fl \" + fl + \"->\" + lf + \")\");\n    relevantRecords.forEach(function (record) {\n      // count matches in record which are *not* the category\n      aSimplifiedSentences.forEach(function (aSentence) {\n        var hasCategory = {};\n        var mismatched = {};\n        var matched = {};\n        var cntRelevantWords = aSentence.cntRelevantWords;\n        aSentence.rWords.forEach(function (oWord) {\n          if (oWord.category && (record[oWord.category] !== undefined)) {\n            if (oWord.matchedString === record[oWord.category]) {\n              matched[oWord.category] = oWord;\n            }\n            else {\n              mismatched[oWord.category] = oWord;\n            }\n          }\n          else if (Word.Word.isCategory(oWord) && record[oWord.matchedString]) {\n            hasCategory[oWord.matchedString] = 1;\n          }\n        }\n        );\n        if ((Object.keys(matched).length + Object.keys(hasCategory).length) > Object.keys(mismatched).length) {\n          res.push({\n            sentence: aSentence.oSentence,\n            record: record,\n            category: category,\n            result: record[category],\n            _ranking: calcRankingHavingCategory(matched, hasCategory, mismatched, cntRelevantWords)\n          });\n        }\n      })\n    });\n    debuglog(\"here in weird\");\n  } else {\n    relevantRecords.forEach(function (record) {\n      // count matches in record which are *not* the category\n      pSentences.sentences.forEach(function (aSentence) {\n        var hasCategory = {};\n        var mismatched = {};\n        var matched = {};\n        var cntRelevantWords = 0;\n        aSentence.forEach(function (oWord) {\n          if (!Word.Word.isFiller(oWord)) {\n            cntRelevantWords = cntRelevantWords + 1;\n            if (oWord.category && (record[oWord.category] !== undefined)) {\n              if (oWord.matchedString === record[oWord.category]) {\n                matched[oWord.category] = oWord;\n              }\n              else {\n                mismatched[oWord.category] = oWord;\n              }\n            }\n            else if (Word.Word.isCategory(oWord) && record[oWord.matchedString]) {\n              hasCategory[oWord.matchedString] = 1;\n            }\n          }\n        });\n        if ((Object.keys(matched).length + Object.keys(hasCategory).length) > Object.keys(mismatched).length) {\n          res.push({\n            sentence: aSentence,\n            record: record,\n            category: category,\n            result: record[category],\n            _ranking: calcRankingHavingCategory(matched, hasCategory, mismatched, cntRelevantWords)\n          });\n        }\n      })\n    });\n  }\n  res.sort(cmpByResultThenRanking);\n  debuglog(\" after sort\" + res.length);\n  var result = Object.assign({}, pSentences, { answers: res});\n  return  filterRetainTopRankedResult(result);\n}\n\n\n/**\n * list all top level rankings\n */\nexport function matchRecordsTupelHavingContext(\n  pSentences: IMatch.IProcessedSentences, categories: string[], records: Array<IMatch.IRecord>,\n  categorySet: { [key: string]: boolean })\n  : IMatch.IProcessedWhatIsTupelAnswers {\n  // debuglog(JSON.stringify(records, undefined, 2));\n  var categoryF = categories[0];\n  var relevantRecords = records.filter(function (record: IMatch.IRecord) {\n    return (record[categoryF] !== undefined) && (record[categoryF] !== null);\n  });\n  var res = [] as IMatch.IWhatIsTupelAnswer[];\n  debuglog(\"relevant records nr:\" + relevantRecords.length);\n  debuglog(debuglog.enabled ? (\"sentences are : \" + JSON.stringify(pSentences, undefined, 2)) : \"-\");\n  if (process.env.ABOT_FAST && categorySet) {\n    // we are only interested in categories present in records for domains which contain the category\n    // var categoryset = Model.calculateRelevantRecordCategories(theModel,category);\n    //knowing the target\n    perflog(\"got categoryset with \" + Object.keys(categorySet).length);\n    var fl = 0;\n    var lf = 0;\n    var aSimplifiedSentences = pSentences.sentences.map(function (oSentence) {\n      var fWords = oSentence.filter(function (oWord) {\n        return !Word.Word.isFiller(oWord);\n      });\n      var rWords = oSentence.filter(function (oWord) {\n        return !!categorySet[oWord.category] || Word.Word.isCategory(oWord);\n      });\n      fl = fl + oSentence.length;\n      lf = lf + rWords.length;\n      return {\n        oSentence: oSentence,\n        cntRelevantWords: rWords.length, // not a filler  // to be compatible it would be fWords\n        rWords: rWords\n      };\n    });\n    Object.freeze(aSimplifiedSentences);\n    perflog(\"post simplify (r=\" + relevantRecords.length + \" s=\" + pSentences.sentences.length + \" fl \" + fl + \"->\" + lf + \")\");\n    relevantRecords.forEach(function (record) {\n      // count matches in record which are *not* the category\n      aSimplifiedSentences.forEach(function (aSentence) {\n        var hasCategory = {};\n        var mismatched = {};\n        var matched = {};\n        var cntRelevantWords = aSentence.cntRelevantWords;\n        aSentence.rWords.forEach(function (oWord) {\n          if (oWord.category && (record[oWord.category] !== undefined)) {\n            if (oWord.matchedString === record[oWord.category]) {\n              matched[oWord.category] = oWord;\n            }\n            else {\n              mismatched[oWord.category] = oWord;\n            }\n          }\n          else if (Word.Word.isCategory(oWord) && record[oWord.matchedString]) {\n            hasCategory[oWord.matchedString] = 1;\n          }\n        }\n        );\n        if ((Object.keys(matched).length + Object.keys(hasCategory).length) > Object.keys(mismatched).length) {\n          res.push({\n            sentence: aSentence.oSentence,\n            record: record,\n            categories: categories,\n            result: extractResult(categories, record),\n            _ranking: calcRankingHavingCategory(matched, hasCategory, mismatched, cntRelevantWords)\n          });\n        }\n      })\n    });\n  } else {\n    relevantRecords.forEach(function (record) {\n      // count matches in record which are *not* the category\n      pSentences.sentences.forEach(function (aSentence) {\n        var hasCategory = {};\n        var mismatched = {};\n        var matched = {};\n        var cntRelevantWords = 0;\n        aSentence.forEach(function (oWord) {\n          if (!Word.Word.isFiller(oWord)) {\n            cntRelevantWords = cntRelevantWords + 1;\n            if (oWord.category && (record[oWord.category] !== undefined)) {\n              if (oWord.matchedString === record[oWord.category]) {\n                matched[oWord.category] = oWord;\n              }\n              else {\n                mismatched[oWord.category] = oWord;\n              }\n            }\n            else if (Word.Word.isCategory(oWord) && record[oWord.matchedString]) {\n              hasCategory[oWord.matchedString] = 1;\n            }\n          }\n        });\n        if ((Object.keys(matched).length + Object.keys(hasCategory).length) > Object.keys(mismatched).length) {\n          res.push({\n            sentence: aSentence,\n            record: record,\n            categories: categories,\n            result: extractResult(categories, record),\n            _ranking: calcRankingHavingCategory(matched, hasCategory, mismatched, cntRelevantWords)\n          });\n        }\n      })\n    });\n  }\n  res.sort(cmpByResultThenRankingTupel);\n  var result1 = Object.assign({ tupelanswers : res}, pSentences);\n  return filterRetainTopRankedResultTupel(result1);\n}\n\nexport function matchRecords(aSentences: IMatch.IProcessedSentences, category: string, records: Array<IMatch.IRecord>)\n  : IMatch.IProcessedWhatIsAnswers {\n  // if (debuglog.enabled) {\n  //   debuglog(JSON.stringify(records, undefined, 2));\n  // }\n  var relevantRecords = records.filter(function (record: IMatch.IRecord) {\n    return (record[category] !== undefined) && (record[category] !== null);\n  });\n  var res = [];\n  debuglog(\"relevant records nr:\" + relevantRecords.length);\n  relevantRecords.forEach(function (record) {\n    aSentences.sentences.forEach(function (aSentence) {\n      // count matches in record which are *not* the category\n      var mismatched = {}\n      var matched = {};\n      var cntRelevantWords = 0;\n      aSentence.forEach(function (oWord) {\n        if (!Word.Word.isFiller(oWord)) {\n          cntRelevantWords = cntRelevantWords + 1;\n          if (oWord.category && (record[oWord.category] !== undefined)) {\n            if (oWord.matchedString === record[oWord.category]) {\n              matched[oWord.category] = oWord;\n            } else {\n              mismatched[oWord.category] = oWord;\n            }\n          }\n        }\n      });\n      if (Object.keys(matched).length > Object.keys(mismatched).length) {\n        res.push({\n          sentence: aSentence,\n          record: record,\n          category: category,\n          result: record[category],\n          _ranking: calcRanking(matched, mismatched, cntRelevantWords)\n        });\n      }\n    })\n  });\n  res.sort(cmpByResultThenRanking);\n  var result = Object.assign({}, aSentences, {answers : res});\n  return filterRetainTopRankedResult(result);\n}\n\nexport function matchRecordsQuick(aSentences: IMatch.IProcessedSentences, category: string, records: Array<IMatch.IRecord>, categorySet?: { [key: string]: boolean })\n  : IMatch.IProcessedWhatIsAnswers {\n  //if (debuglog.enabled) {\n  //  debuglog(JSON.stringify(records, undefined, 2));\n  //}\n  Object.freeze(categorySet);\n  perflog(\"matchRecordsQuick ...(r=\" + records.length + \" s=\" + aSentences.sentences.length + \")\");\n  var relevantRecords = records.filter(function (record: IMatch.IRecord) {\n    return (record[category] !== undefined) && (record[category] !== null);\n  });\n  var res = [];\n  debuglog(\"matchRecordsQuick: relevant records (r=\" + relevantRecords.length + \") sentences \" + aSentences.sentences.length);\n  perflog(\"relevant records nr:\" + relevantRecords.length + \" sentences \" + aSentences.sentences.length);\n  if (process.env.ABOT_FAST && categorySet) {\n    // we are only interested in categories present in records for domains which contain the category\n    // var categoryset = Model.calculateRelevantRecordCategories(theModel,category);\n    //knowing the target\n    perflog(\"got categoryset with \" + Object.keys(categorySet).length);\n    var fl = 0;\n    var lf = 0;\n    var aSimplifiedSentences = aSentences.sentences.map(function (oSentence) {\n      var rWords = oSentence.filter(function (oWord) {\n        return !!categorySet[oWord.category];\n      });\n      fl = fl + oSentence.length;\n      lf = lf + rWords.length;\n      return {\n        oSentence: oSentence,\n        cntRelevantWords: rWords.length,\n        rWords: rWords\n      };\n    });\n    perflog(\"post simplify (r=\" + relevantRecords.length + \" s=\" + aSentences.sentences.length + \" fl \" + fl + \"->\" + lf + \")\");\n  } else {\n    var fl = 0;\n    var lf = 0;\n    var aSimplifiedSentences = aSentences.sentences.map(function (oSentence) {\n      var rWords = oSentence.filter(function (oWord) {\n        return !Word.Word.isFiller(oWord);\n      });\n      fl = fl + oSentence.length;\n      lf = lf + rWords.length;\n      return {\n        oSentence: oSentence,\n        cntRelevantWords: rWords.length,\n        rWords: rWords\n      };\n    });\n    perflog(\"post simplify (r=\" + relevantRecords.length + \" s=\" + aSentences.sentences.length + \" fl \" + fl + \"->\" + lf + \")\");\n  }\n\n  relevantRecords.forEach(function (record) {\n    aSimplifiedSentences.forEach(function (aSentence) {\n      // count matches in record which are *not* the category\n      var mismatched = 0;\n      var matched = 0;\n      var nouse = 0;\n      var missingcat = 0;\n      aSentence.rWords.forEach(function (oWord) {\n        if (record[oWord.category] !== undefined) {\n          if (oWord.matchedString === record[oWord.category]) {\n            ++matched;\n          } else {\n            ++mismatched;\n          }\n        } else {\n          if (oWord.category !== \"category\") {\n            nouse += 1;\n          } else {\n            if (!record[oWord.matchedString]) {\n              missingcat += 1;\n            }\n          }\n        }\n      });\n      // if(matched > 0 || mismatched > 0 ) {\n      //   console.log(\" m\" + matched + \" mismatched\" + mismatched);\n      // }\n      //console.log(JSON.stringify(aSentence.oSentence));\n      if (matched > mismatched) {\n        res.push({\n          sentence: aSentence.oSentence,\n          record: record,\n          category: category,\n          result: record[category],\n          _ranking: calcRankingSimple(matched, mismatched, (nouse + missingcat), aSentence.cntRelevantWords)\n        });\n      }\n    })\n  });\n  perflog(\"sort (a=\" + res.length + \")\");\n  res.sort(cmpByResultThenRanking);\n  perflog(\"filterRetain ...\");\n  var result2 = Object.assign({ answers : res }, aSentences);\n  var result = filterRetainTopRankedResult(result2);\n\n  debuglog(\"matchRecordsQuick done: (r=\" + relevantRecords.length + \" s=\" + aSentences.sentences.length + \" a=\" + result.answers.length + \")\");\n  perflog(\"matchRecordsQuick done: (r=\" + relevantRecords.length + \" s=\" + aSentences.sentences.length + \" a=\" + result.answers.length + \")\");\n  return result;\n}\n\nfunction extractResult(categories: string[], record: { [key: string]: string }): string[] {\n  return categories.map(function (category) { return record[category] || \"n/a\"; });\n}\n\nexport function matchRecordsQuickMultipleCategories(pSentences: IMatch.IProcessedSentences, categories: string[], records: Array<IMatch.IRecord>, categorySet?: { [key: string]: boolean })\n  :IMatch.IProcessedWhatIsTupelAnswers {\n  // if (debuglog.enabled) {\n  //  debuglog(JSON.stringify(records, undefined, 2));\n  // }\n  Object.freeze(categorySet);\n  var categoryF = categories[0];\n  debuglog(\"matchRecordsQuickMultipleCategories (r=\" + records.length + \" s=\" + pSentences.sentences.length + \")\\n categories:\" + categories.join(\"\\n\"));\n  perflog(\"matchRecordsQuickMult ...(r=\" + records.length + \" s=\" + pSentences.sentences.length + \")\");\n  var relevantRecords = records.filter(function (record: IMatch.IRecord) {\n    return (record[categoryF] !== undefined) && (record[categoryF] !== null);\n  });\n  var res = [] as Array<IMatch.IWhatIsTupelAnswer>;\n  debuglog(\"relevant records with first (r=\" + relevantRecords.length + \")\");\n  perflog(\"relevant records with first nr:\" + relevantRecords.length + \" sentences \" + pSentences.sentences.length);\n  if (process.env.ABOT_FAST && categorySet) {\n    // we are only interested in categories present in records for domains which contain the category\n    // var categoryset = Model.calculateRelevantRecordCategories(theModel,category);\n    //knowing the target\n    perflog(\"got categoryset with \" + Object.keys(categorySet).length);\n    var fl = 0;\n    var lf = 0;\n    var aSimplifiedSentences = pSentences.sentences.map(function (oSentence) {\n      var rWords = oSentence.filter(function (oWord) {\n        return !!categorySet[oWord.category];\n      });\n      fl = fl + oSentence.length;\n      lf = lf + rWords.length;\n      return {\n        oSentence: oSentence,\n        cntRelevantWords: rWords.length,\n        rWords: rWords\n      };\n    });\n    perflog(\"post simplify (r=\" + relevantRecords.length + \" s=\" + pSentences.sentences.length + \" fl \" + fl + \"->\" + lf + \")\");\n  } else {\n    debuglog(\"not abot_fast !\");\n    var fl = 0;\n    var lf = 0;\n    var aSimplifiedSentences = pSentences.sentences.map(function (oSentence) {\n      var rWords = oSentence.filter(function (oWord) {\n        return !Word.Word.isFiller(oWord);\n      });\n      fl = fl + oSentence.length;\n      lf = lf + rWords.length;\n      return {\n        oSentence: oSentence,\n        cntRelevantWords: rWords.length,\n        rWords: rWords\n      };\n    });\n    debuglog(\"post simplify (r=\" + relevantRecords.length + \" s=\" + pSentences.sentences.length + \" fl \" + fl + \"->\" + lf + \")\");\n    perflog(\"post simplify (r=\" + relevantRecords.length + \" s=\" + pSentences.sentences.length + \" fl \" + fl + \"->\" + lf + \")\");\n  }\n\n  relevantRecords.forEach(function (record) {\n    aSimplifiedSentences.forEach(function (aSentence) {\n      // count matches in record which are *not* the category\n      var mismatched = 0;\n      var matched = 0;\n      var nouse = 0;\n      var missingcat = 0;\n      aSentence.rWords.forEach(function (oWord) {\n        if (record[oWord.category] !== undefined) {\n          if (oWord.matchedString === record[oWord.category]) {\n            ++matched;\n          } else {\n            ++mismatched;\n          }\n        } else {\n          if (oWord.category !== \"category\") {\n            nouse += 1;\n          } else {\n            if (!record[oWord.matchedString]) {\n              missingcat += 1;\n            }\n          }\n        }\n      });\n      // if(matched > 0 || mismatched > 0 ) {\n      //   console.log(\" m\" + matched + \" mismatched\" + mismatched);\n      // }\n      //console.log(JSON.stringify(aSentence.oSentence));\n      if (matched > mismatched) {\n        var rec = {\n          sentence: aSentence.oSentence,\n          record: record,\n          categories: categories,\n          result: extractResult(categories, record),\n          _ranking: calcRankingSimple(matched, mismatched, (nouse + missingcat), aSentence.cntRelevantWords)\n        }\n        /*   if(record[\"appId\"] ===\"F1566\") {\n             console.log(\"here F1566\" + JSON.stringify(rec));\n             console.log(\"here matched\" + matched + \" mismatched\" + mismatched + \" nouse \" + (nouse + missingcat));\n             console.log(\"here cntRelevant :\" + aSentence.cntRelevantWords);\n           }\n           if(record[\"appId\"] ===\"F0731A\") {\n             console.log(\"here F0731A\" + JSON.stringify(rec));\n             console.log(\"here matched\" + matched + \" mismatched\" + mismatched + \" nouse \" + (nouse + missingcat));\n             console.log(\"here cntRelevant :\" + aSentence.cntRelevantWords);\n           }\n           */\n        res.push(rec);\n      }\n    })\n  });\n  perflog(\"sort (a=\" + res.length + \")\");\n  res.sort(cmpByResultThenRankingTupel);\n  perflog(\"filterRetain ...\");\n  var result1 = Object.assign({ tupelanswers : res},  pSentences)\n  var result2 = filterRetainTopRankedResultTupel(result1);\n  perflog(\"matchRecordsQuick done: (r=\" + relevantRecords.length + \" s=\" + pSentences.sentences.length + \" a=\" + res.length + \")\");\n  return result2;\n}\n\n\nfunction classifyWordWithTargetCategory(word: string, targetcategory: string, rules: IMatch.SplitRules,\n  wholesentence: string): string {\n  //console.log(\"classify \" + word + \" \"  + targetcategory);\n  var cats = InputFilter.categorizeAWord(word, rules, wholesentence, {});\n  // TODO qualify\n  cats = cats.filter(function (cat) {\n    return cat.category === targetcategory;\n  })\n  debuglog(JSON.stringify(cats));\n  if (cats.length) {\n    return cats[0].matchedString;\n  }\n}\n\n\nexport function analyzeCategory(categoryword: string, rules: IMatch.SplitRules, wholesentence: string): string {\n  return classifyWordWithTargetCategory(categoryword, 'category', rules, wholesentence);\n}\n\nexport function splitAtCommaAnd(str: string): string[] {\n  var r = str.split(/(\\band\\b)|[,]/);\n  r = r.filter(function (o, index) {\n    if (index % 2 > 0) {\n      return false;\n    }\n    return true;\n  });\n  var rtrimmed = r.map(function (o) {\n    return new String(o).trim();\n  });\n  return rtrimmed;\n}\n/**\n * A simple implementation, splitting at and and ,\n */\nexport function analyzeCategoryMultOnlyAndComma(categorylist: string, rules: IMatch.SplitRules, wholesentence: string): string[] {\n  var rtrimmed = splitAtCommaAnd(categorylist);\n  var rcat = rtrimmed.map(function (o) {\n    return analyzeCategory(o, rules, wholesentence);\n  });\n  if (rcat.indexOf(undefined) >= 0) {\n    throw new Error('\"' + rtrimmed[rcat.indexOf(undefined)] + '\" is not a category!');\n  }\n  return rcat;\n}\n\n\n\nexport function filterAcceptingOnly(res: IMatch.ICategorizedString[][], categories: string[]):\n  IMatch.ICategorizedString[][] {\n  return res.filter(function (aSentence, iIndex) {\n    return aSentence.every(function (oWord) {\n      return categories.indexOf(oWord.category) >= 0;\n    });\n  })\n}\n\n\nimport * as Erbase from './erbase';\n\nvar sWords = {};\n\nexport function processString(query: string, rules: IMatch.SplitRules): IMatch.IProcessedSentences {\n\n  if (!process.env.ABOT_OLDMATCH) {\n    return Erbase.processString(query, rules);\n  }\n\n  var matched = InputFilter.analyzeString(query, rules, sWords);\n  if (debuglog.enabled) {\n    debuglog(\"After matched \" + JSON.stringify(matched));\n  }\n  var aSentences = InputFilter.expandMatchArr(matched);\n  if (debuglog.enabled) {\n    debuglog(\"after expand\" + aSentences.map(function (oSentence) {\n      return Sentence.rankingProduct(oSentence) + \":\" + JSON.stringify(oSentence);\n    }).join(\"\\n\"));\n  }\n  var aSentencesReinforced = InputFilter.reinForce(aSentences);\n  if (debuglog.enabled) {\n    debuglog(\"after reinforce\" + aSentencesReinforced.map(function (oSentence) {\n      return Sentence.rankingProduct(oSentence) + \":\" + JSON.stringify(oSentence);\n    }).join(\"\\n\"));\n  }\n  return {\n    errors: [],\n    sentences: aSentencesReinforced\n  } as IMatch.IProcessedSentences;\n}\n\n\nexport function analyzeContextString(contextQueryString: string, rules: IMatch.SplitRules):\n  IMatch.IProcessedSentences {\n\n  var aSentencesReinforced = processString(contextQueryString, rules)\n  // we limit analysis to n sentences\n  aSentencesReinforced.sentences = aSentencesReinforced.sentences.slice(0, Algol.Cutoff_Sentences);\n  if (debuglog.enabled) {\n    debuglog(\"after reinforce and cutoff\" + aSentencesReinforced.sentences.length + \"\\n\" + aSentencesReinforced.sentences.map(function (oSentence) {\n      return Sentence.rankingProduct(oSentence) + \":\" + JSON.stringify(oSentence);\n    }).join(\"\\n\"));\n  }\n  return aSentencesReinforced;\n}\n\nexport function cmpByNrCategoriesAndSameDomain(a: IMatch.ISentence, b: IMatch.ISentence): number {\n  //console.log(\"compare a\" + a + \" cntb \" + b);\n  var cnta = Sentence.getDistinctCategoriesInSentence(a).length;\n  var cntb = Sentence.getDistinctCategoriesInSentence(b).length;\n  /*\n    var cnta = a.reduce(function(prev, oWord) {\n      return prev + ((oWord.category === \"category\")? 1 : 0);\n    },0);\n    var cntb = b.reduce(function(prev, oWord) {\n      return prev + ((oWord.category === \"category\")? 1 : 0);\n    },0);\n   // console.log(\"cnt a\" + cnta + \" cntb \" + cntb);\n   */\n  return cntb - cnta;\n}\n\nexport function analyzeCategoryMult(categorylist: string, rules: IMatch.SplitRules, wholesentence: string, gWords:\n  { [key: string]: IMatch.ICategorizedString[] }): string[] {\n  var res = analyzeContextString(categorylist, rules);\n  //  debuglog(\"resulting category sentences\", JSON.stringify(res));\n  var res2 = filterAcceptingOnly(res.sentences, [\"category\", \"filler\"]);\n  res2.sort(Sentence.cmpRankingProduct);\n  debuglog(\"resulting category sentences: \\n\", debuglog.enabled ? (Sentence.dumpNiceArr(res2.slice(0, 3), Sentence.rankingProduct)) : '-');\n  // TODO:   res2 = filterAcceptingOnlySameDomain(res2);\n  //debuglog(\"resulting category sentences\", JSON.stringify(res2, undefined, 2));\n  // expect only categories\n  // we could rank now by common domains , but for now we only take the first one\n  if (!res.sentences.length) {\n    return undefined;\n  }\n  //res.sort(cmpByNrCategoriesAndSameDomain);\n  var rescat = Sentence.getDistinctCategoriesInSentence(res2[0]);\n  return rescat;\n  // \"\" return res[0].filter()\n  // return classifyWordWithTargetCategory(categorylist, 'category', rules, wholesentence);\n}\n\nexport function analyzeOperator(opword: string, rules: IMatch.SplitRules, wholesentence: string): string {\n  return classifyWordWithTargetCategory(opword, 'operator', rules, wholesentence);\n}\n\n\nimport * as ErError from './ererror';\n\n// const result = WhatIs.resolveCategory(cat, a1.entity,\n//   theModel.mRules, theModel.tools, theModel.records);\n\nexport function resolveCategory(category: string, contextQueryString: string,\n  rules: IMatch.SplitRules, records: Array<IMatch.IRecord>): IMatch.IProcessedWhatIsAnswers {\n  if (contextQueryString.length === 0) {\n    return { errors: [ ErError.makeError_EMPTY_INPUT()] , tokens : [], answers : [] };\n  } else {\n    /*\n        var matched = InputFilter.analyzeString(contextQueryString, rules);\n        debuglog(debuglog.enabled ? (\"after matched \" + JSON.stringify(matched)): '-');\n        var aSentences = InputFilter.expandMatchArr(matched);\n        if(debuglog.enabled) {\n          debuglog(\"after expand\" + aSentences.map(function (oSentence) {\n            return Sentence.rankingProduct(oSentence) + \":\" + JSON.stringify(oSentence);\n          }).join(\"\\n\"));\n      } */\n    var aSentencesReinforced = processString(contextQueryString, rules);\n    //aSentences.map(function(oSentence) { return InputFilter.reinForce(oSentence); });\n    debuglog(debuglog.enabled ? (\"after reinforce\" + aSentencesReinforced.sentences.map(function (oSentence) {\n      return Sentence.rankingProduct(oSentence) + \":\" + JSON.stringify(oSentence);\n    }).join(\"\\n\")) : '-');\n    var matchedAnswers = matchRecords(aSentencesReinforced, category, records); //aTool: Array<IMatch.ITool>): any /* objectstream*/ {\n    debuglog(debuglog.enabled ? (\" matchedAnswers\" + JSON.stringify(matchedAnswers, undefined, 2)) : '-');\n    return matchedAnswers;\n  }\n}\n\nimport * as Model from '../model/model';\n\nexport function resolveCategories(categories: string[], contextQueryString: string,\n  theModel: IMatch.IModels): IMatch.IProcessedWhatIsTupelAnswers {\n  var records = theModel.records;\n  var rules = theModel.rules;\n  if (contextQueryString.length === 0) {\n    return {\n      errors : [ ErError.makeError_EMPTY_INPUT()],\n      tupelanswers : [],\n      tokens :[]\n    }\n  } else {\n    /*\n    var matched = InputFilter.analyzeString(contextQueryString, rules);\n    debuglog(debuglog.enabled? (\"after matched \" + JSON.stringify(matched)): '-');\n    var aSentences = InputFilter.expandMatchArr(matched);\n    if(debuglog.enabled) {\n      debuglog(debuglog.enabled ? (\"after expand\" + aSentences.map(function (oSentence) {\n        return Sentence.rankingProduct(oSentence) + \":\" + JSON.stringify(oSentence);\n      }).join(\"\\n\")): '-');\n  } */\n    var aSentencesReinforced = processString(contextQueryString, theModel.rules);\n    //aSentences.map(function(oSentence) { return InputFilter.reinForce(oSentence); });\n    debuglog(debuglog.enabled ? (\"after reinforce\" + aSentencesReinforced.sentences.map(function (oSentence) {\n      return Sentence.rankingProduct(oSentence) + \":\" + JSON.stringify(oSentence);\n    }).join(\"\\n\")) : '-');\n    //var matchedAnswers = matchRecordsQuick(aSentences, category, records); //aTool: Array<IMatch.ITool>): any /* objectstream*/ {\n    var categorySet = {};\n    categories.forEach(function (category) {\n      categorySet[category] = true;\n      var categorySetLocal = Model.getAllRecordCategoriesForTargetCategory(theModel, category, true);\n      Object.assign(categorySet, categorySetLocal);\n    });\n\n    var matchedAnswers = matchRecordsQuickMultipleCategories(aSentencesReinforced, categories, records, categorySet); //aTool: Array<IMatch.ITool>): any /* objectstream*/ {\n    if (debuglog.enabled) {\n      debuglog(\" matched Answers\" + JSON.stringify(matchedAnswers, undefined, 2));\n    }\n    perflog(\"filtering topRanked (a=\" + matchedAnswers.tupelanswers.length + \")...\");\n    var matchedFiltered = Object.assign({}, matchedAnswers);\n    matchedFiltered.tupelanswers = filterOnlyTopRankedTupel(matchedAnswers.tupelanswers);\n\n    if (debuglog.enabled) {\n      debuglog(\" matched top-ranked Answers\" + JSON.stringify(matchedFiltered, undefined, 2));\n    }\n    perflog(\"totalWhatisWithContext (a=\" + matchedFiltered.tupelanswers.length + \")\");\n    return matchedFiltered; // ??? Answers;\n  }\n}\n\nexport function filterOnlyTopRanked(results: Array<IMatch.IWhatIsAnswer>): Array<IMatch.IWhatIsAnswer> {\n  var res = results.filter(function (result) {\n    if (result._ranking === results[0]._ranking) {\n      return true;\n    }\n    if (result._ranking >= results[0]._ranking) {\n      throw new Error(\"List to filter must be ordered\");\n    }\n    return false;\n  });\n  return res;\n}\n\nexport function filterOnlyTopRankedTupel(results: Array<IMatch.IWhatIsTupelAnswer>): Array<IMatch.IWhatIsTupelAnswer> {\n  var res = results.filter(function (result) {\n    if (result._ranking === results[0]._ranking) {\n      return true;\n    }\n    if (result._ranking >= results[0]._ranking) {\n      throw new Error(\"List to filter must be ordered\");\n    }\n    return false;\n  });\n  return res;\n}\n\nexport function isIndiscriminateResult(results: Array<IMatch.IWhatIsAnswer>): string {\n  var cnt = results.reduce(function (prev, result) {\n    if (result._ranking === results[0]._ranking) {\n      return prev + 1;\n    }\n  }, 0);\n  if (cnt > 1) {\n    // search for a discriminating category value\n    var discriminating = Object.keys(results[0].record).reduce(function (prev, category) {\n      if ((category.charAt(0) !== '_' && category !== results[0].category)\n        && (results[0].record[category] !== results[1].record[category])) {\n        prev.push(category);\n      }\n      return prev;\n    }, []);\n    if (discriminating.length) {\n      return \"Many comparable results, perhaps you want to specify a discriminating \" + discriminating.join(',');\n    }\n    return 'Your question does not have a specific answer';\n  }\n  return undefined;\n}\n\nexport function isIndiscriminateResultTupel(results: Array<IMatch.IWhatIsTupelAnswer>): string {\n  var cnt = results.reduce(function (prev, result) {\n    if (result._ranking === results[0]._ranking) {\n      return prev + 1;\n    }\n  }, 0);\n  if (cnt > 1) {\n    // search for a discriminating category value\n    var discriminating = Object.keys(results[0].record).reduce(function (prev, category) {\n      if ((category.charAt(0) !== '_' && results[0].categories.indexOf(category) < 0)\n        && (results[0].record[category] !== results[1].record[category])) {\n        prev.push(category);\n      }\n      return prev;\n    }, []);\n    if (discriminating.length) {\n      return \"Many comparable results, perhaps you want to specify a discriminating \" + discriminating.join(',') + ' or use \"list all ...\"';\n    }\n    return 'Your question does not have a specific answer';\n  }\n  return undefined;\n}\n"],"sourceRoot":"ABC"}