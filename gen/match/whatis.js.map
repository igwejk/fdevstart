{"version":3,"sources":["/projects/nodejs/botbuilder/fdevstart/src/../src/match/whatis.ts"],"names":[],"mappings":"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","file":"match/whatis.js","sourcesContent":["/**\n *\n * @module jfseb.fdevstart.analyze\n * @file analyze.ts\n * @copyright (c) 2016 Gerd Forstmann\n */\n\n\nimport * as InputFilter from './inputFilter';\n\nimport * as debug from 'debug';\n\nconst debuglog = debug('whatis');\nconst perflog = debug('perf');\n\nimport * as utils from '../utils/utils';\n\nimport * as IMatch from './ifmatch';\n\nimport * as Toolmatcher from './toolmatcher';\n\nimport * as Sentence from './sentence';\n\nimport * as Word from './word';\n\n\nexport function cmpByResultThenRanking(a: IMatch.IWhatIsAnswer, b: IMatch.IWhatIsAnswer) {\n  var cmp = a.result.localeCompare(b.result);\n  if (cmp) {\n    return cmp;\n  }\n  return -(a._ranking - b._ranking);\n}\n\n\nexport function cmpByRanking(a: IMatch.IWhatIsAnswer, b: IMatch.IWhatIsAnswer) {\n  var cmp = -(a._ranking - b._ranking);\n  if (cmp) {\n    return cmp;\n  }\n  cmp = a.result.localeCompare(b.result);\n  if (cmp) {\n    return cmp;\n  }\n\n  // are records different?\n  var keys = Object.keys(a.record).concat(Object.keys(b.record)).sort();\n  var res = keys.reduce(function (prev, sKey) {\n    if (prev) {\n      return prev;\n    }\n    if (b.record[sKey] !== a.record[sKey]) {\n      if (!b.record[sKey]) {\n        return -1;\n      }\n      if (!a.record[sKey]) {\n        return +1;\n      }\n      return a.record[sKey].localeCompare(b.record[sKey]);\n    }\n    return 0;\n  }, 0);\n  return res;\n}\n\n\n\nexport function dumpNice(answer: IMatch.IWhatIsAnswer) {\n  var result = {\n    s: \"\",\n    push: function (s) { this.s = this.s + s; }\n  };\n  var s =\n    `**Result for category: ${answer.category} is ${answer.result}\n rank: ${answer._ranking}\n`;\n  result.push(s);\n  Object.keys(answer.record).forEach(function (sRequires, index) {\n    if (sRequires.charAt(0) !== '_') {\n      result.push(`record: ${sRequires} -> ${answer.record[sRequires]}`);\n    }\n    result.push('\\n');\n  });\n  var oSentence = answer.sentence;\n  oSentence.forEach(function (oWord, index) {\n    var sWord = `[${index}] : ${oWord.category} \"${oWord.string}\" => \"${oWord.matchedString}\"`\n    result.push(sWord + \"\\n\");\n  })\n  result.push(\".\\n\");\n  return result.s;\n}\n\n\nexport function dumpWeightsTop(toolmatches: Array<IMatch.IWhatIsAnswer>, options: any) {\n  var s = '';\n  toolmatches.forEach(function (oMatch, index) {\n    if (index < options.top) {\n      s = s + \"WhatIsAnswer[\" + index + \"]...\\n\";\n      s = s + dumpNice(oMatch);\n    }\n  });\n  return s;\n}\n\nexport function filterRetainTopRankedResult(res: Array<IMatch.IWhatIsAnswer>): Array<IMatch.IWhatIsAnswer> {\n  var result = res.filter(function (iRes, index) {\n    debuglog(index + ' ' + JSON.stringify(iRes));\n    if (iRes.result === (res[index - 1] && res[index - 1].result)) {\n      debuglog('skip');\n      return false;\n    }\n    return true;\n  });\n  result.sort(cmpByRanking);\n  return result;\n}\n\nimport * as Match from './match';\n\nexport function calcRanking(matched: { [key: string]: IMatch.IWord },\n  mismatched: { [key: string]: IMatch.IWord }, relevantCount: number): number {\n\n  var lenMatched = Object.keys(matched).length;\n  var factor = Match.calcRankingProduct(matched);\n  factor *= Math.pow(1.5, lenMatched);\n\n  var lenMisMatched = Object.keys(mismatched).length;\n  var factor2 = Match.calcRankingProduct(mismatched);\n  factor2 *= Math.pow(0.4, lenMisMatched);\n\n  return Math.pow(factor2 * factor, 1 / (lenMisMatched + lenMatched));\n}\n\nexport function calcRankingSimple(matched: number,\n  mismatched: number,\n  relevantCount: number): number {\n  var factor = Math.pow(1.5, matched);\n  var factor2 = Math.pow(0.4, mismatched);\n  return Math.pow(factor2 * factor, 1 / (mismatched + matched));\n}\n\nexport function calcRankingHavingCategory(matched: { [key: string]: IMatch.IWord },\n  hasCategory: { [key: string]: number },\n  mismatched: { [key: string]: IMatch.IWord }, relevantCount: number): number {\n\n\n  var lenMatched = Object.keys(matched).length;\n  var factor = Match.calcRankingProduct(matched);\n  factor *= Math.pow(1.5, lenMatched);\n\n  var lenHasCategory = Object.keys(hasCategory).length;\n  var factorH = Math.pow(1.2, lenHasCategory);\n\n  var lenMisMatched = Object.keys(mismatched).length;\n  var factor2 = Match.calcRankingProduct(mismatched);\n  factor2 *= Math.pow(0.4, lenMisMatched);\n\n  return Math.pow(factor2 * factorH * factor, 1 / (lenMisMatched + lenHasCategory + lenMatched));\n}\n\n/**\n * list all top level rankings\n */\nexport function matchRecordsHavingContext(\n  aSentences: Array<IMatch.ISentence>, category: string, records: Array<IMatch.IRecord>)\n  : Array<IMatch.IWhatIsAnswer> {\n  debuglog(JSON.stringify(records, undefined, 2));\n  var relevantRecords = records.filter(function (record: IMatch.IRecord) {\n    return (record[category] !== undefined) && (record[category] !== null);\n  });\n  var res = [];\n  debuglog(\"relevant records nr:\" + relevantRecords.length);\n  debuglog(\"sentences are : \" + JSON.stringify(aSentences, undefined, 2));\n  relevantRecords.forEach(function (record) {\n    // count matches in record which are *not* the category\n    aSentences.forEach(function (aSentence) {\n      var hasCategory = {};\n      var mismatched = {};\n      var matched = {};\n      var cntRelevantWords = 0;\n      aSentence.forEach(function (oWord) {\n        if (!Word.Word.isFiller(oWord)) {\n          cntRelevantWords = cntRelevantWords + 1;\n          if (oWord.category && (record[oWord.category] !== undefined)) {\n            if (oWord.matchedString === record[oWord.category]) {\n              matched[oWord.category] = oWord;\n            }\n            else {\n              mismatched[oWord.category] = oWord;\n            }\n          }\n          else if (Word.Word.isCategory(oWord) && record[oWord.matchedString]) {\n            hasCategory[oWord.matchedString] = 1;\n          }\n        }\n      });\n      if ((Object.keys(matched).length + Object.keys(hasCategory).length) > Object.keys(mismatched).length) {\n        res.push({\n          sentence: aSentence,\n          record: record,\n          category: category,\n          result: record[category],\n          _ranking: calcRankingHavingCategory(matched, hasCategory, mismatched, cntRelevantWords)\n        });\n      }\n    })\n  });\n  res.sort(cmpByResultThenRanking);\n  res = filterRetainTopRankedResult(res);\n  return res;\n}\n\nexport function matchRecords(aSentences: Array<IMatch.ISentence>, category: string, records: Array<IMatch.IRecord>)\n  : Array<IMatch.IWhatIsAnswer> {\n  if (debuglog.enabled) {\n    debuglog(JSON.stringify(records, undefined, 2));\n  }\n  var relevantRecords = records.filter(function (record: IMatch.IRecord) {\n    return (record[category] !== undefined) && (record[category] !== null);\n  });\n  var res = [];\n  debuglog(\"relevant records nr:\" + relevantRecords.length);\n  relevantRecords.forEach(function (record) {\n    aSentences.forEach(function (aSentence) {\n      // count matches in record which are *not* the category\n      var mismatched = {}\n      var matched = {};\n      var cntRelevantWords = 0;\n      aSentence.forEach(function (oWord) {\n        if (!Word.Word.isFiller(oWord)) {\n          cntRelevantWords = cntRelevantWords + 1;\n          if (oWord.category && (record[oWord.category] !== undefined)) {\n            if (oWord.matchedString === record[oWord.category]) {\n              matched[oWord.category] = oWord;\n            } else {\n              mismatched[oWord.category] = oWord;\n            }\n          }\n        }\n      });\n      if (Object.keys(matched).length > Object.keys(mismatched).length) {\n        res.push({\n          sentence: aSentence,\n          record: record,\n          category: category,\n          result: record[category],\n          _ranking: calcRanking(matched, mismatched, cntRelevantWords)\n        });\n      }\n    })\n  });\n  res.sort(cmpByResultThenRanking);\n  res = filterRetainTopRankedResult(res);\n  return res;\n}\n\n\nexport function matchRecordsQuick(aSentences: Array<IMatch.ISentence>, category: string, records: Array<IMatch.IRecord>)\n  : Array<IMatch.IWhatIsAnswer> {\n  if (debuglog.enabled) {\n    debuglog(JSON.stringify(records, undefined, 2));\n  }\n  var relevantRecords = records.filter(function (record: IMatch.IRecord) {\n    return (record[category] !== undefined) && (record[category] !== null);\n  });\n  var res = [];\n  debuglog(\"relevant records nr:\" + relevantRecords.length);\n  perflog(\"relevant records nr:\" + relevantRecords.length + \" sentences \" + aSentences.length);\n\n\n  var aSimplifiedSentences = aSentences.map(function (oSentence) {\n    var rWords = oSentence.filter(function (oWord) {\n      return !Word.Word.isFiller(oWord);\n    });\n    return {\n      oSentence: oSentence,\n      cntRelevantWords: rWords.length,\n      rWords: rWords\n    };\n  });\n\n  relevantRecords.forEach(function (record) {\n    aSimplifiedSentences.forEach(function (aSentence) {\n      // count matches in record which are *not* the category\n      var mismatched = 0;\n      var matched = 0;\n      aSentence.rWords.forEach(function (oWord) {\n        if (oWord.category && (record[oWord.category] !== undefined)) {\n          if (oWord.matchedString === record[oWord.category]) {\n            ++matched;\n          } else {\n            ++mismatched;\n          }\n        }\n      });\n      //console.log(JSON.stringify(aSentence.oSentence));\n      if (matched > mismatched) {\n        res.push({\n          sentence: aSentence.oSentence,\n          record: record,\n          category: category,\n          result: record[category],\n          _ranking: calcRankingSimple(matched, mismatched, aSentence.cntRelevantWords)\n        });\n      }\n    })\n  });\n  res.sort(cmpByResultThenRanking);\n  res = filterRetainTopRankedResult(res);\n  return res;\n}\n\nexport function analyzeCategory(categoryword: string, aRules: Array<IMatch.mRule>, wholesentence: string): string {\n  var cats = InputFilter.categorizeAWord(categoryword, aRules, wholesentence, {});\n  // TODO qualify\n  cats = cats.filter(function (cat) {\n    return cat.category === 'category';\n  })\n  debuglog(JSON.stringify(cats));\n  if (cats.length) {\n    return cats[0].matchedString;\n  }\n}\n\n// const result = WhatIs.resolveCategory(cat, a1.entity,\n//   theModel.mRules, theModel.tools, theModel.records);\n\nexport function resolveCategory(category: string, contextQueryString: string,\n  aRules: Array<IMatch.mRule>, records: Array<IMatch.IRecord>): Array<IMatch.IWhatIsAnswer> {\n  if (contextQueryString.length === 0) {\n    return [];\n  } else {\n    var matched = InputFilter.analyzeString(contextQueryString, aRules);\n    debuglog(\"after matched \" + JSON.stringify(matched));\n    var aSentences = InputFilter.expandMatchArr(matched);\n    debuglog(\"after expand\" + aSentences.map(function (oSentence) {\n      return Sentence.rankingProduct(oSentence) + \":\" + JSON.stringify(oSentence);\n    }).join(\"\\n\"));\n    var aSentencesReinforced = InputFilter.reinForce(aSentences);\n    //aSentences.map(function(oSentence) { return InputFilter.reinForce(oSentence); });\n    debuglog(\"after reinforce\" + aSentencesReinforced.map(function (oSentence) {\n      return Sentence.rankingProduct(oSentence) + \":\" + JSON.stringify(oSentence);\n    }).join(\"\\n\"));\n    var matchedAnswers = matchRecords(aSentences, category, records); //aTool: Array<IMatch.ITool>): any /* objectstream*/ {\n    debuglog(\" matchedAnswers\" + JSON.stringify(matchedAnswers, undefined, 2));\n    return matchedAnswers;\n  }\n}\n\n\nexport function filterOnlyTopRanked(results: Array<IMatch.IWhatIsAnswer>): Array<IMatch.IWhatIsAnswer> {\n  var res = results.filter(function (result) {\n    if (result._ranking === results[0]._ranking) {\n      return true;\n    }\n    if (result._ranking >= results[0]._ranking) {\n      throw new Error(\"List to filter must be ordered\");\n    }\n    return false;\n  });\n  return res;\n}\n\n\nexport function isIndiscriminateResult(results: Array<IMatch.IWhatIsAnswer>): string {\n  var cnt = results.reduce(function (prev, result) {\n    if (result._ranking === results[0]._ranking) {\n      return prev + 1;\n    }\n  }, 0);\n  if (cnt > 1) {\n    // search for a discriminating category value\n    var discriminating = Object.keys(results[0].record).reduce(function (prev, category) {\n      if ((category.charAt(0) !== '_' && category !== results[0].category)\n        && (results[0].record[category] !== results[1].record[category])) {\n        prev.push(category);\n      }\n      return prev;\n    }, []);\n    if (discriminating.length) {\n      return \"Many comparable results, perhaps you want to specify a discriminating \" + discriminating.join(',');\n    }\n    return 'Your question does not have a specific answer';\n  }\n  return undefined;\n}\n"],"sourceRoot":"ABC"}