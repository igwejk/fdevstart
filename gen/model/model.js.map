{"version":3,"sources":["/projects/nodejs/botbuilder/fdevstart/src/../src/model/model.ts"],"names":[],"mappings":"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","file":"model/model.js","sourcesContent":["/**\r\n * Functionality managing the match models\r\n *\r\n * @file\r\n */\r\n\r\nimport * as intf from 'constants';\r\n\r\nimport * as debug from 'debug';\r\n\r\nvar debuglog = debug('model');\r\n\r\nimport * as logger from '../utils/logger';\r\n\r\n\r\nconst loadlog = logger.logger('modelload', '');\r\n\r\nimport *  as IMatch from '../match/ifmatch';\r\n\r\nimport * as Match from '../match/match';\r\n\r\nimport * as InputFilterRules from '../match/inputFilterRules';\r\n\r\nimport * as Tools from '../match/tools';\r\n\r\nimport * as fs from 'fs';\r\n\r\nimport * as process from 'process';\r\n\r\nvar modelPath = process.env[\"MODELPATH\"] || \"testmodel\";\r\n\r\n\r\ninterface IModels {\r\n    domains: string[],\r\n    tools: IMatch.ITool[],\r\n    category: string[],\r\n    mRules: IMatch.mRule[],\r\n    records: any[]\r\n    seenRules?: { [key: string]: IMatch.mRule }\r\n}\r\n\r\ninterface IModel {\r\n    domain: string,\r\n    tool: IMatch.ITool,\r\n    toolhidden?: boolean,\r\n    synonyms?: { [key: string]: string[] },\r\n    category: string[],\r\n    wordindex: string[],\r\n    exactmatch? : string[],\r\n    hidden: string[]\r\n};\r\n\r\nfunction addSynonyms(synonyms: string[], category: string, synonymFor: string, mRules: Array<IMatch.mRule>, seen: { [key: string]: IMatch.mRule }) {\r\n    synonyms.forEach(function (syn) {\r\n        var oRule = {\r\n            category: category,\r\n            matchedString: synonymFor,\r\n            type: IMatch.EnumRuleType.WORD,\r\n            word: syn,\r\n            _ranking: 0.95\r\n        };\r\n        debuglog(\"inserting synonym\" + JSON.stringify(oRule));\r\n        insertRuleIfNotPresent(mRules, oRule, seen);\r\n    });\r\n}\r\n\r\nfunction insertRuleIfNotPresent(mRules: Array<IMatch.mRule>, rule: IMatch.mRule,\r\n    seenRules: { [key: string]: IMatch.mRule }) {\r\n    if (rule.type !== IMatch.EnumRuleType.WORD) {\r\n        mRules.push(rule);\r\n        return;\r\n    }\r\n    if ((rule.word === undefined) || (rule.matchedString === undefined)) {\r\n        throw new Error('illegal rule' + JSON.stringify(rule, undefined, 2));\r\n    }\r\n    var seenRules = seenRules || {};\r\n    var r = JSON.stringify(rule);\r\n    if (seenRules[r]) {\r\n        debuglog(\"Attempting to insert duplicate\" + JSON.stringify(rule, undefined, 2));\r\n        var duplicates = mRules.filter(function (oEntry) {\r\n            return !InputFilterRules.cmpMRule(oEntry, rule);\r\n        });\r\n        if (duplicates.length > 0) {\r\n            return;\r\n        }\r\n    }\r\n    seenRules[r] = rule;\r\n    rule.lowercaseword = rule.word.toLowerCase();\r\n    if (rule.word === \"\") {\r\n        debuglog('Skipping rule with emtpy word ' + JSON.stringify(rule, undefined, 2));\r\n        loadlog('Skipping rule with emtpy word ' + JSON.stringify(rule, undefined, 2));\r\n        return;\r\n    }\r\n    mRules.push(rule);\r\n    return;\r\n}\r\n\r\nfunction loadModelData(oMdl: IModel, sModelName: string, oModel: IModels) {\r\n    // read the data ->\r\n    // data is processed into mRules directly,\r\n    const sFileName = ('./' + modelPath + '/' + sModelName + \".data.json\");\r\n    var mdldata = fs.readFileSync(sFileName, 'utf-8');\r\n    var oMdlData = JSON.parse(mdldata);\r\n    oMdlData.forEach(function (oEntry) {\r\n        if (!oEntry.tool && oMdl.tool.name) {\r\n            oEntry.tool = oMdl.tool.name;\r\n        }\r\n        oModel.records.push(oEntry);\r\n\r\n        oMdl.wordindex.forEach(function (category) {\r\n            if (oEntry[category] === undefined) {\r\n                debuglog(\"INCONSISTENT*> ModelData \" + sFileName + \" does not contain category \" + category + \" of wordindex\" + JSON.stringify(oEntry) + \"\")\r\n                return;\r\n            }\r\n            if (oEntry[category] !== \"*\") {\r\n                var sString = oEntry[category];\r\n                debuglog(\"pushing rule with \" + category + \" -> \" + sString);\r\n                var oRule = {\r\n                        category: category,\r\n                        matchedString: sString,\r\n                        type: IMatch.EnumRuleType.WORD,\r\n                        word: sString,\r\n                        _ranking: 0.95\r\n                    } as IMatch.mRule;\r\n                if(oMdl.exactmatch && oMdl.exactmatch.indexOf(category) >= 0) {\r\n                    oRule.exactOnly = true;\r\n                }\r\n                insertRuleIfNotPresent(oModel.mRules,oRule, oModel.seenRules);\r\n                if (oMdlData.synonyms && oMdlData.synonyms[category]) {\r\n                    addSynonyms(oMdlData.synonyms[category], category, sString, oModel.mRules, oModel.seenRules);\r\n                }\r\n            }\r\n        });\r\n    });\r\n}\r\n\r\nfunction loadModel(sModelName: string, oModel: IModels) {\r\n    debuglog(\" loading \" + sModelName + \" ....\");\r\n    var mdl = fs.readFileSync('./' + modelPath + '/' + sModelName + \".model.json\", 'utf-8');\r\n    var oMdl = JSON.parse(mdl) as IModel;\r\n\r\n    if (oModel.domains.indexOf(oMdl.domain) >= 0) {\r\n        debuglog(\"***********here mdl\" + JSON.stringify(oMdl, undefined, 2));\r\n\r\n        throw new Error('Domain ' + oMdl.domain + ' already loaded while loading ' + sModelName + '?');\r\n    }\r\n    // extract tools an add to tools:\r\n    oModel.tools.filter(function (oEntry) {\r\n        if (oEntry.name === (oMdl.tool && oMdl.tool.name)) {\r\n            console.log(\"Tool \" + oMdl.tool.name + \" already present when loading \" + sModelName);\r\n            //throw new Error('Domain already loaded?');\r\n            process.exit(-1);\r\n        }\r\n    });\r\n    // add the tool name as rule unless hidden\r\n    if (!oMdl.toolhidden && oMdl.tool && oMdl.tool.name) {\r\n        insertRuleIfNotPresent(oModel.mRules, {\r\n            category: \"tool\",\r\n            matchedString: oMdl.tool.name,\r\n            type: IMatch.EnumRuleType.WORD,\r\n            word: oMdl.tool.name,\r\n            _ranking: 0.95\r\n        }, oModel.seenRules);\r\n    };\r\n    if (oMdl.synonyms && oMdl.synonyms[\"tool\"]) {\r\n        addSynonyms(oMdl.synonyms[\"tool\"], \"tool\", oMdl.tool.name, oModel.mRules, oModel.seenRules);\r\n    };\r\n    if (oMdl.synonyms) {\r\n        Object.keys(oMdl.synonyms).forEach(function (ssynkey) {\r\n            if (oMdl.category.indexOf(ssynkey) >= 0 && ssynkey !== \"tool\") {\r\n                addSynonyms(oMdl.synonyms[ssynkey], \"category\", ssynkey, oModel.mRules, oModel.seenRules);\r\n            }\r\n        });\r\n    }\r\n    oModel.domains.push(oMdl.domain);\r\n    if(oMdl.tool.name) {\r\n      oModel.tools.push(oMdl.tool);\r\n    }\r\n    oModel.category = oModel.category.concat(oMdl.category);\r\n    oModel.category.sort();\r\n    oModel.category = oModel.category.filter(function (string, index) {\r\n        return oModel.category[index] !== oModel.category[index + 1];\r\n    });\r\n    loadModelData(oMdl, sModelName, oModel);\r\n} // loadmodel\r\n\r\n\r\nexport function loadModels() {\r\n    var oModel: IModels;\r\n    oModel = {\r\n        domains: [],\r\n        tools: [],\r\n        category: [],\r\n        mRules: [],\r\n        records: []\r\n    }\r\n    var smdls = fs.readFileSync('./' + modelPath + '/models.json', 'utf-8');\r\n    var mdls = JSON.parse(\"\" + smdls);\r\n    mdls.forEach(function (sModelName) {\r\n        loadModel(sModelName, oModel)\r\n    });\r\n\r\n    // add the categories to the model:\r\n    oModel.category.forEach(function (category) {\r\n        insertRuleIfNotPresent(oModel.mRules, {\r\n            category: \"category\",\r\n            matchedString: category,\r\n            type: IMatch.EnumRuleType.WORD,\r\n            word: category,\r\n            lowercaseword: category.toLowerCase(),\r\n            _ranking: 0.95\r\n        }, oModel.seenRules);\r\n    });\r\n\r\n    //add a filler rule\r\n    var sfillers = fs.readFileSync('./' + modelPath + '/filler.json', 'utf-8');\r\n    var fillers = JSON.parse(sfillers);\r\n    var re = \"^((\" + fillers.join(\")|(\") + \"))$\";\r\n    oModel.mRules.push({\r\n        category: \"filler\",\r\n        type: IMatch.EnumRuleType.REGEXP,\r\n        regexp: new RegExp(re, \"i\"),\r\n        matchedString: \"filler\",\r\n        _ranking: 0.9\r\n    });\r\n    /*\r\n        })\r\n            {\r\n          category: \"filler\",\r\n          type: 1,\r\n          regexp: /^((start)|(show)|(from)|(in))$/i,\r\n          matchedString: \"filler\",\r\n          _ranking: 0.9\r\n        },\r\n    */\r\n    oModel.mRules = oModel.mRules.sort(InputFilterRules.cmpMRule);\r\n    oModel.tools = oModel.tools.sort(Tools.cmpTools);\r\n    delete oModel.seenRules;\r\n    return oModel;\r\n}\r\n\r\n\r\n"],"sourceRoot":"ABC"}