{"version":3,"sources":["/projects/nodejs/botbuilder/fdevstart/src/../src/model/model.ts"],"names":[],"mappings":"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","file":"model/model.js","sourcesContent":["/**\r\n * Functionality managing the match models\r\n *\r\n * @file\r\n */\r\n\r\nimport * as intf from 'constants';\r\nimport * as debug from 'debug';\r\n\r\nvar debuglog = debug('model');\r\n\r\nimport * as logger from '../utils/logger';\r\n\r\nconst loadlog = logger.logger('modelload', '');\r\n\r\nimport *  as IMatch from '../match/ifmatch';\r\nimport * as Match from '../match/match';\r\nimport * as InputFilterRules from '../match/inputFilterRules';\r\nimport * as Tools from '../match/tools';\r\nimport * as fs from 'fs';\r\nimport * as Meta from './meta';\r\nimport * as Utils from '../utils/utils';\r\nimport * as process from 'process';\r\nimport * as _ from 'lodash';\r\n\r\n/**\r\n * the model path, may be controlled via environment variable\r\n */\r\nvar envModelPath = process.env[\"ABOT_MODELPATH\"] || \"testmodel\";\r\n\r\n//export interface IModels = Match.IModels;\r\n\r\n/*\r\nexport interface IModels {\r\n    domains: string[],\r\n    tools: IMatch.ITool[],\r\n    category: string[],\r\n    mRules: IMatch.mRule[],\r\n    records: any[]\r\n    seenRules?: { [key: string]: IMatch.mRule },\r\n    meta : {\r\n        // entity -> relation -> target\r\n        t3 : { [key: string] : { [key : string] : any }}\r\n    }\r\n}*/\r\n\r\ninterface IModel {\r\n    domain: string,\r\n    bitindex : number,\r\n    description? : string,\r\n    tool: IMatch.ITool,\r\n    toolhidden?: boolean,\r\n    synonyms?: { [key: string]: string[] },\r\n    categoryDescribed :  { name : string,\r\n        description? : string,\r\n        key? : string }[],\r\n    category: string[],\r\n    wordindex: string[],\r\n    exactmatch? : string[],\r\n    hidden: string[]\r\n};\r\n\r\nconst ARR_MODEL_PROPERTIES = [\"domain\", \"bitindex\", \"categoryDescribed\", \"description\", \"tool\", \"toolhidden\", \"synonyms\", \"category\", \"wordindex\", \"exactmatch\", \"hidden\"];\r\n\r\nfunction addSynonyms(synonyms: string[], category: string, synonymFor: string, bitindex : number, mRules: Array<IMatch.mRule>, seen: { [key: string]: IMatch.mRule[] }) {\r\n    synonyms.forEach(function (syn) {\r\n        var oRule = {\r\n            category: category,\r\n            matchedString: synonymFor,\r\n            type: IMatch.EnumRuleType.WORD,\r\n            word: syn,\r\n            bitindex : bitindex,\r\n            _ranking: 0.95\r\n        };\r\n        debuglog(\"inserting synonym\" + JSON.stringify(oRule));\r\n        insertRuleIfNotPresent(mRules, oRule, seen);\r\n    });\r\n}\r\n\r\nfunction getRuleKey(rule) {\r\n    return rule.matchedString + \"-|-\" + rule.category + \" -|- \" + rule.type  + \" -|- \" + rule.word + \" \";\r\n}\r\n\r\nfunction insertRuleIfNotPresent(mRules: Array<IMatch.mRule>, rule: IMatch.mRule,\r\n    seenRules: { [key: string]: IMatch.mRule[] }) {\r\n\r\n    if (rule.type !== IMatch.EnumRuleType.WORD) {\r\n        mRules.push(rule);\r\n        return;\r\n    }\r\n    if ((rule.word === undefined) || (rule.matchedString === undefined)) {\r\n        throw new Error('illegal rule' + JSON.stringify(rule, undefined, 2));\r\n    }\r\n    var r = getRuleKey(rule);\r\n    rule.lowercaseword = rule.word.toLowerCase();\r\n    if (seenRules[r]) {\r\n        debuglog(\"Attempting to insert duplicate\" + JSON.stringify(rule, undefined, 2));\r\n        var duplicates = seenRules[r].filter(function( oEntry) {\r\n            return 0 === InputFilterRules.compareMRuleFull(oEntry,rule);\r\n        });\r\n        if(duplicates.length > 0) {\r\n            return;\r\n        }\r\n    }\r\n    seenRules[r] = (seenRules[r] || []);\r\n    seenRules[r].push(rule);\r\n    if (rule.word === \"\") {\r\n        debuglog('Skipping rule with emtpy word ' + JSON.stringify(rule, undefined, 2));\r\n        loadlog('Skipping rule with emtpy word ' + JSON.stringify(rule, undefined, 2));\r\n        return;\r\n    }\r\n    mRules.push(rule);\r\n    return;\r\n}\r\n\r\nfunction loadModelData(modelPath: string, oMdl: IModel, sModelName: string, oModel: IMatch.IModels) {\r\n    // read the data ->\r\n    // data is processed into mRules directly,\r\n    var bitindex = oMdl.bitindex;\r\n    const sFileName = ('./' + modelPath + '/' + sModelName + \".data.json\");\r\n    var mdldata = fs.readFileSync(sFileName, 'utf-8');\r\n    var oMdlData = JSON.parse(mdldata);\r\n    oMdlData.forEach(function (oEntry) {\r\n        if(!oEntry.tool) {\r\n            oEntry._domain = oMdl.domain;\r\n        }\r\n        if (!oEntry.tool && oMdl.tool.name) {\r\n            oEntry.tool = oMdl.tool.name;\r\n        }\r\n        oModel.records.push(oEntry);\r\n        oMdl.category.forEach(function(cat) {\r\n            if(oEntry[cat] === 'undefined') {\r\n                oEntry[cat] = \"n/a\";\r\n                var bug =\r\n                    \"INCONSISTENT*> ModelData \" + sFileName + \" does not contain category \" + cat + \" with value 'undefined', undefined is illegal value, use n/a \" + JSON.stringify(oEntry) + \"\";\r\n                debuglog(bug);\r\n                //console.log(bug);\r\n                //process.exit(-1);\r\n            }\r\n        })\r\n\r\n        oMdl.wordindex.forEach(function (category) {\r\n            if (oEntry[category] === undefined) {\r\n                debuglog(\"INCONSISTENT*> ModelData \" + sFileName + \" does not contain category \" + category + \" of wordindex\" + JSON.stringify(oEntry) + \"\")\r\n                return;\r\n            }\r\n            if (oEntry[category] !== \"*\") {\r\n                var sString = oEntry[category];\r\n                debuglog(\"pushing rule with \" + category + \" -> \" + sString);\r\n                var oRule = {\r\n                        category: category,\r\n                        matchedString: sString,\r\n                        type: IMatch.EnumRuleType.WORD,\r\n                        word: sString,\r\n                        bitindex : bitindex,\r\n                        _ranking: 0.95\r\n                    } as IMatch.mRule;\r\n                if(oMdl.exactmatch && oMdl.exactmatch.indexOf(category) >= 0) {\r\n                    oRule.exactOnly = true;\r\n                }\r\n                insertRuleIfNotPresent(oModel.mRules,oRule, oModel.seenRules);\r\n                if (oMdlData.synonyms && oMdlData.synonyms[category]) {\r\n                    addSynonyms(oMdlData.synonyms[category], category, sString, bitindex, oModel.mRules, oModel.seenRules);\r\n                }\r\n                if (oEntry.synonyms && oEntry.synonyms[category]) {\r\n                    addSynonyms(oEntry.synonyms[category], category, sString, bitindex, oModel.mRules, oModel.seenRules);\r\n                }\r\n            }\r\n        });\r\n    });\r\n}\r\n\r\n\r\n\r\n\r\nfunction loadModel(modelPath : string, sModelName: string, oModel: IMatch.IModels) {\r\n    debuglog(\" loading \" + sModelName + \" ....\");\r\n    var mdl = fs.readFileSync('./' + modelPath + '/' + sModelName + \".model.json\", 'utf-8');\r\n    var oMdl = JSON.parse(mdl) as IModel;\r\n    mergeModelJson(sModelName, oMdl, oModel);\r\n    loadModelData(modelPath, oMdl, sModelName, oModel);\r\n}\r\n\r\nexport function getDomainBitIndex(domain: string, oModel: IMatch.IModels) : number {\r\n    var index = oModel.domains.indexOf(domain);\r\n    if(index < 0) {\r\n        index = oModel.domains.length;\r\n    }\r\n    if(index >= 32) {\r\n        throw new Error(\"too many domain for single 32 bit index\");\r\n    }\r\n    return 0x0001 << index;\r\n}\r\n\r\nfunction mergeModelJson(sModelName: string, oMdl: IModel, oModel: IMatch.IModels) {\r\n    var categoryDescribedMap = {} as { [key: string] : IMatch.ICategoryDesc };\r\n    oMdl.bitindex = getDomainBitIndex(oMdl.domain, oModel);\r\n    oMdl.categoryDescribed = [];\r\n    // rectify category\r\n    oMdl.category = oMdl.category.map(function(cat : any) {\r\n        if(typeof cat === \"string\") {\r\n            return cat;\r\n        }\r\n        if(typeof cat.name !== \"string\") {\r\n            console.log(\"Missing name in object typed category in \" + JSON.stringify(cat) + \" in model \" + sModelName );\r\n            process.exit(-1);\r\n            //throw new Error('Domain ' + oMdl.domain + ' already loaded while loading ' + sModelName + '?');\r\n        }\r\n        categoryDescribedMap[cat.name] = cat;\r\n        oMdl.categoryDescribed.push(cat);\r\n        return cat.name;\r\n    });\r\n\r\n       // add the categories to the model:\r\n    oMdl.category.forEach(function (category) {\r\n        insertRuleIfNotPresent(oModel.mRules, {\r\n            category: \"category\",\r\n            matchedString: category,\r\n            type: IMatch.EnumRuleType.WORD,\r\n            word: category,\r\n            lowercaseword: category.toLowerCase(),\r\n            bitindex : oMdl.bitindex,\r\n            _ranking: 0.95\r\n        }, oModel.seenRules);\r\n    });\r\n\r\n    if (oModel.domains.indexOf(oMdl.domain) >= 0) {\r\n        debuglog(\"***********here mdl\" + JSON.stringify(oMdl, undefined, 2));\r\n        throw new Error('Domain ' + oMdl.domain + ' already loaded while loading ' + sModelName + '?');\r\n    }\r\n    // check properties of model\r\n    Object.keys(oMdl).sort().forEach(function(sProperty) {\r\n        if(ARR_MODEL_PROPERTIES.indexOf(sProperty) < 0) {\r\n            throw new Error('Model property \"' + sProperty + '\" not a known model property in model of domain ' + oMdl.domain + ' ');\r\n        }\r\n    });\r\n    oModel.full.domain[oMdl.domain] = {\r\n        description : oMdl.description,\r\n        categories : categoryDescribedMap,\r\n        bitindex : oMdl.bitindex\r\n    };\r\n\r\n\r\n    // check that members of wordindex are in categories,\r\n    oMdl.wordindex = oMdl.wordindex || [];\r\n    oMdl.wordindex.forEach(function(sWordIndex) {\r\n        if(oMdl.category.indexOf(sWordIndex) < 0) {\r\n            throw new Error('Model wordindex \"' + sWordIndex + '\" not a category of domain ' + oMdl.domain + ' ');\r\n        }\r\n    });\r\n    oMdl.exactmatch = oMdl.exactmatch || [];\r\n    oMdl.exactmatch.forEach(function(sExactMatch) {\r\n        if(oMdl.category.indexOf(sExactMatch) < 0) {\r\n            throw new Error('Model exactmatch \"' + sExactMatch + '\" not a category of domain ' + oMdl.domain + ' ');\r\n        }\r\n    });\r\n\r\n\r\n    // add relation domain -> category\r\n    var domainStr = MetaF.Domain(oMdl.domain).toFullString();\r\n    var relationStr = MetaF.Relation(Meta.RELATION_hasCategory).toFullString();\r\n    var reverseRelationStr = MetaF.Relation(Meta.RELATION_isCategoryOf).toFullString();\r\n    oMdl.category.forEach(function(sCategory) {\r\n\r\n        var CategoryString = MetaF.Category(sCategory).toFullString();\r\n        oModel.meta.t3[domainStr] = oModel.meta.t3[domainStr] || {};\r\n        oModel.meta.t3[domainStr][relationStr] = oModel.meta.t3[domainStr][relationStr] || {};\r\n        oModel.meta.t3[domainStr][relationStr][CategoryString]  = {};\r\n\r\n        oModel.meta.t3[CategoryString] = oModel.meta.t3[CategoryString] || {};\r\n        oModel.meta.t3[CategoryString][reverseRelationStr] = oModel.meta.t3[CategoryString][reverseRelationStr] || {};\r\n        oModel.meta.t3[CategoryString][reverseRelationStr][domainStr]  = {};\r\n\r\n    });\r\n\r\n    // add a precice domain matchrule\r\n    insertRuleIfNotPresent(oModel.mRules, {\r\n            category: \"domain\",\r\n            matchedString: oMdl.domain,\r\n            type: IMatch.EnumRuleType.WORD,\r\n            word: oMdl.domain,\r\n            bitindex : oMdl.bitindex,\r\n            _ranking: 0.95\r\n        }, oModel.seenRules);\r\n\r\n    // check the tool\r\n    if(oMdl.tool && oMdl.tool.requires) {\r\n        var requires = Object.keys(oMdl.tool.requires || {});\r\n        var diff = _.difference(requires, oMdl.category);\r\n            if(diff.length > 0) {\r\n                console.log(` ${oMdl.domain} : Unkown category in requires of tool: \"` + diff.join('\"') + '\"');\r\n                process.exit(-1);\r\n            }\r\n        var optional = Object.keys(oMdl.tool.optional);\r\n        diff = _.difference(optional, oMdl.category);\r\n            if(diff.length > 0) {\r\n                console.log(` ${oMdl.domain} : Unkown category optional of tool: \"` + diff.join('\"') + '\"');\r\n                process.exit(-1);\r\n            }\r\n        Object.keys(oMdl.tool.sets || {}).forEach(function(setID) {\r\n            var diff = _.difference(oMdl.tool.sets[setID].set, oMdl.category);\r\n            if(diff.length > 0) {\r\n                console.log(` ${oMdl.domain} : Unkown category in setId ${setID} of tool: \"` + diff.join('\"') + '\"');\r\n                process.exit(-1);\r\n            }\r\n        });\r\n\r\n        // extract tools an add to tools:\r\n        oModel.tools.filter(function (oEntry) {\r\n            if (oEntry.name === (oMdl.tool && oMdl.tool.name)) {\r\n                console.log(\"Tool \" + oMdl.tool.name + \" already present when loading \" + sModelName);\r\n                //throw new Error('Domain already loaded?');\r\n                process.exit(-1);\r\n            }\r\n        });\r\n    } else {\r\n        oMdl.toolhidden = true;\r\n        oMdl.tool.requires = { \"impossible\" : {}};\r\n    }\r\n    // add the tool name as rule unless hidden\r\n    if (!oMdl.toolhidden && oMdl.tool && oMdl.tool.name) {\r\n        insertRuleIfNotPresent(oModel.mRules, {\r\n            category: \"tool\",\r\n            matchedString: oMdl.tool.name,\r\n            type: IMatch.EnumRuleType.WORD,\r\n            word: oMdl.tool.name,\r\n            bitindex : oMdl.bitindex,\r\n            _ranking: 0.95\r\n        }, oModel.seenRules);\r\n    };\r\n    if (oMdl.synonyms && oMdl.synonyms[\"tool\"]) {\r\n        addSynonyms(oMdl.synonyms[\"tool\"], \"tool\", oMdl.tool.name, oMdl.bitindex, oModel.mRules, oModel.seenRules);\r\n    };\r\n    if (oMdl.synonyms) {\r\n        Object.keys(oMdl.synonyms).forEach(function (ssynkey) {\r\n            if (oMdl.category.indexOf(ssynkey) >= 0 && ssynkey !== \"tool\") {\r\n                if (oModel.full.domain[oMdl.domain].categories[ssynkey])  {\r\n                   oModel.full.domain[oMdl.domain].categories[ssynkey].synonyms = oMdl.synonyms[ssynkey];\r\n                }\r\n\r\n                addSynonyms(oMdl.synonyms[ssynkey], \"category\", ssynkey, oMdl.bitindex, oModel.mRules, oModel.seenRules);\r\n            }\r\n        });\r\n    }\r\n    oModel.domains.push(oMdl.domain);\r\n    if(oMdl.tool.name) {\r\n      oModel.tools.push(oMdl.tool);\r\n    }\r\n    oModel.category = oModel.category.concat(oMdl.category);\r\n    oModel.category.sort();\r\n    oModel.category = oModel.category.filter(function (string, index) {\r\n        return oModel.category[index] !== oModel.category[index + 1];\r\n    });\r\n\r\n} // loadmodel\r\n\r\nexport function splitRules(rules : IMatch.mRule[]) : IMatch.SplitRules {\r\n    var res = {};\r\n    var nonWordRules = [];\r\n    rules.forEach(function(rule) {\r\n        if(rule.type === IMatch.EnumRuleType.WORD) {\r\n            if(!rule.lowercaseword) {\r\n                throw new Error(\"Rule has no member lowercaseword\" + JSON.stringify(rule));\r\n            }\r\n            res[rule.lowercaseword] = res[rule.lowercaseword] || { bitindex : 0, rules :[] };\r\n            res[rule.lowercaseword].bitindex = res[rule.lowercaseword].bitindex | rule.bitindex;\r\n            res[rule.lowercaseword].rules.push(rule);\r\n        } else {\r\n            nonWordRules.push(rule);\r\n        }\r\n    });\r\n    return {\r\n        wordMap: res,\r\n        nonWordRules : nonWordRules,\r\n        allRules : rules\r\n    };\r\n}\r\n\r\nexport function loadModels(modelPath? : string) : IMatch.IModels {\r\n    var oModel: IMatch.IModels;\r\n    oModel = {\r\n        full : { domain : {}},\r\n        domains: [],\r\n        tools: [],\r\n        rules : undefined,\r\n        category: [],\r\n        operators : {},\r\n        mRules: [],\r\n        seenRules : {},\r\n        records: [],\r\n        meta : { t3 : {} }\r\n    }\r\n    modelPath = modelPath || envModelPath;\r\n    var smdls = fs.readFileSync('./' + modelPath + '/models.json', 'utf-8');\r\n    var mdls = JSON.parse(\"\" + smdls);\r\n    mdls.forEach(function (sModelName) {\r\n        loadModel(modelPath, sModelName, oModel)\r\n    });\r\n\r\n    // add the categories to the model:\r\n    /*\r\n    oModel.category.forEach(function (category) {\r\n        insertRuleIfNotPresent(oModel.mRules, {\r\n            category: \"category\",\r\n            matchedString: category,\r\n            type: IMatch.EnumRuleType.WORD,\r\n            word: category,\r\n            lowercaseword: category.toLowerCase(),\r\n            bitindex : oMdl.\r\n            _ranking: 0.95\r\n        }, oModel.seenRules);\r\n    });\r\n    */\r\n\r\n    var metaBitIndex = getDomainBitIndex('meta',oModel);\r\n\r\n    // add the domain meta rule\r\n    insertRuleIfNotPresent(oModel.mRules, {\r\n            category: \"meta\",\r\n            matchedString: \"domain\",\r\n            type: IMatch.EnumRuleType.WORD,\r\n            word: \"domain\",\r\n            bitindex : metaBitIndex,\r\n            _ranking: 0.95\r\n        }, oModel.seenRules);\r\n\r\n\r\n    var fillerBitIndex = getDomainBitIndex('meta',oModel);\r\n    //add a filler rule\r\n    var sfillers = fs.readFileSync('./' + modelPath + '/filler.json', 'utf-8');\r\n    var fillers = JSON.parse(sfillers);\r\n    var re = \"^((\" + fillers.join(\")|(\") + \"))$\";\r\n    oModel.mRules.push({\r\n        category: \"filler\",\r\n        type: IMatch.EnumRuleType.REGEXP,\r\n        regexp: new RegExp(re, \"i\"),\r\n        matchedString: \"filler\",\r\n        bitindex : fillerBitIndex,\r\n        _ranking: 0.9\r\n    });\r\n\r\n    //add operators\r\n    var sOperators = fs.readFileSync('./resources/model/operators.json', 'utf-8');\r\n    var operators = JSON.parse(sOperators);\r\n    var operatorBitIndex = getDomainBitIndex('operators',oModel);\r\n    Object.keys(operators.operators).forEach(function(operator) {\r\n        if(IMatch.aOperatorNames.indexOf(operator) < 0) {\r\n            debuglog(\"unknown operator \" + operator);\r\n            throw new Error(\"unknown operator \" + operator);\r\n        }\r\n        oModel.operators[operator] = operators.operators[operator];\r\n        oModel.operators[operator].operator = <IMatch.OperatorName> operator;\r\n        Object.freeze(oModel.operators[operator]);\r\n        var word = operator;\r\n        insertRuleIfNotPresent(oModel.mRules, {\r\n            category: \"operator\",\r\n            word : word.toLowerCase(),\r\n            lowercaseword : word.toLowerCase(),\r\n            type: IMatch.EnumRuleType.WORD,\r\n            matchedString : word,\r\n            bitindex : operatorBitIndex,\r\n            _ranking: 0.9\r\n        }, oModel.seenRules);\r\n        // add all synonyms\r\n        if(operators.synonyms[operator]) {\r\n            Object.keys(operators.synonyms[operator]).forEach(function(synonym) {\r\n                insertRuleIfNotPresent(oModel.mRules,{\r\n                    category: \"operator\",\r\n                    word : synonym.toLowerCase(),\r\n                    lowercaseword : synonym.toLowerCase(),\r\n                    type: IMatch.EnumRuleType.WORD,\r\n                    matchedString : operator,\r\n                    bitindex : operatorBitIndex,\r\n                    _ranking: 0.9\r\n                }, oModel.seenRules);\r\n            });\r\n        }\r\n    });\r\n    /*\r\n        })\r\n            {\r\n          category: \"filler\",\r\n          type: 1,\r\n          regexp: /^((start)|(show)|(from)|(in))$/i,\r\n          matchedString: \"filler\",\r\n          _ranking: 0.9\r\n        },\r\n    */\r\n    oModel.mRules = oModel.mRules.sort(InputFilterRules.cmpMRule);\r\n    oModel.rules = splitRules(oModel.mRules);\r\n    oModel.tools = oModel.tools.sort(Tools.cmpTools);\r\n    delete oModel.seenRules;\r\n    return oModel;\r\n}\r\n\r\nexport function sortCategoriesByImportance( map : {[key : string] : IMatch.ICategoryDesc }, cats : string[]) : string[] {\r\n    var res = cats.slice(0);\r\n    res.sort(rankCategoryByImportance.bind(undefined,map));\r\n    return res;\r\n}\r\n\r\nexport function rankCategoryByImportance(map : {[key : string] : IMatch.ICategoryDesc }, cata : string, catb : string) : number {\r\n    var catADesc = map[cata];\r\n    var catBDesc = map[catb];\r\n    if (cata === catb) {\r\n        return 0;\r\n    }\r\n    // if a is before b, return -1\r\n    if(catADesc && !catBDesc) {\r\n        return -1;\r\n    }\r\n    if(!catADesc && catBDesc) {\r\n        return +1;\r\n    }\r\n\r\n    var prioA = (catADesc && catADesc.importance) || 99;\r\n    var prioB = (catBDesc && catBDesc.importance) || 99;\r\n    // lower prio goes to front\r\n    var r = prioA - prioB;\r\n    if(r) {\r\n        return r;\r\n    }\r\n    return cata.localeCompare(catb);\r\n}\r\n\r\nconst MetaF = Meta.getMetaFactory();\r\n\r\nexport function getOperator(mdl: IMatch.IModels, operator : string) : IMatch.IOperator {\r\n    return mdl.operators[operator];\r\n}\r\n\r\nexport function getResultAsArray(mdl : IMatch.IModels, a : Meta.IMeta, rel : Meta.IMeta) : Meta.IMeta[] {\r\n    if(rel.toType() !== 'relation') {\r\n        throw new Error(\"expect relation as 2nd arg\");\r\n    }\r\n\r\n    var res = mdl.meta.t3[a.toFullString()] &&\r\n    mdl.meta.t3[a.toFullString()][rel.toFullString()];\r\n    if(!res) {\r\n        return [];\r\n    }\r\n    return Object.getOwnPropertyNames(res).sort().map(MetaF.parseIMeta);\r\n}\r\n\r\nexport function getCategoriesForDomain(theModel : IMatch.IModels, domain : string) : string[] {\r\n    if(theModel.domains.indexOf(domain) < 0) {\r\n        throw new Error(\"Domain \\\"\" + domain + \"\\\" not part of model\");\r\n    }\r\n    var res = getResultAsArray(theModel, MetaF.Domain(domain), MetaF.Relation(Meta.RELATION_hasCategory));\r\n    return Meta.getStringArray(res);\r\n}\r\n\r\n/**\r\n * Return all categories of a domain which can appear on a word,\r\n * these are typically the wordindex domains + entries generated by generic rules\r\n *\r\n * The current implementation is a simplification\r\n */\r\nexport function getPotentialWordCategoriesForDomain(theModel : IMatch.IModels, domain : string) : string[] {\r\n    // this is a simplified version\r\n    return getCategoriesForDomain(theModel, domain);\r\n}\r\n\r\nexport function getDomainsForCategory(theModel : IMatch.IModels, category : string) : string[] {\r\n    if(theModel.category.indexOf(category) < 0) {\r\n        throw new Error(\"Category \\\"\" + category + \"\\\" not part of model\");\r\n    }\r\n    var res = getResultAsArray(theModel, MetaF.Category(category), MetaF.Relation(Meta.RELATION_isCategoryOf));\r\n    return Meta.getStringArray(res);\r\n}\r\n\r\n\r\n export function getAllRecordCategoriesForTargetCategory(model : IMatch.IModels, category : string, wordsonly : boolean) : {[key: string] : boolean} {\r\n    var res = {};\r\n    //\r\n    var fn = wordsonly ? getPotentialWordCategoriesForDomain : getCategoriesForDomain;\r\n    var domains = getDomainsForCategory(model, category);\r\n    domains.forEach(function(domain) {\r\n        fn(model, domain).forEach(function(wordcat) {\r\n            res[wordcat] = true;\r\n        });\r\n    });\r\n    Object.freeze(res);\r\n    return res;\r\n }\r\n\r\n export function getAllRecordCategoriesForTargetCategories(model : IMatch.IModels, categories : string[], wordsonly : boolean) : {[key: string] : boolean} {\r\n    var res = {};\r\n    //\r\n    var fn = wordsonly ? getPotentialWordCategoriesForDomain : getCategoriesForDomain;\r\n    var domains = undefined;\r\n    categories.forEach(function(category) {\r\n        var catdomains = getDomainsForCategory(model, category)\r\n        if(!domains) {\r\n            domains = catdomains;\r\n        } else {\r\n            domains = _.intersection(domains, catdomains);\r\n        }\r\n    });\r\n    if(domains.length === 0) {\r\n        throw new Error('categories ' + Utils.listToQuotedCommaAnd(categories) + ' have no common domain.')\r\n    }\r\n    domains.forEach(function(domain) {\r\n        fn(model, domain).forEach(function(wordcat) {\r\n            res[wordcat] = true;\r\n        });\r\n    });\r\n    Object.freeze(res);\r\n    return res;\r\n }\r\n\r\n\r\n"],"sourceRoot":"ABC"}